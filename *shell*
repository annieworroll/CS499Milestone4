(base) annie@golb:~/contactservice/CS499Milestone4$ ls
contact.cpp           contact.h           cservice.o     README.md
contactdatabase.cpp   contact.o           LICENSE        sqlite3.c
contactdatabase.cpp~  contacts.db         main.cpp       sqlite3.h
contactdatabase.h     contactservice.cpp  makefile       test.db
contactdatabase.h~    contactservice.h    makefile.save
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c main.cpp -o main.o
main.cpp: In function ‘void add_entry()’:
main.cpp:38:21: error: no matching function for call to ‘ContactService::add_entry(std::string&, std::string&, std::string&, std::string&)’
   38 |   contacts.add_entry(f_name, l_name, p_number, address);
      |   ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from main.cpp:8:
contactservice.h:15:8: note: candidate: ‘void ContactService::add_entry(std::string, std::string, std::string, std::string, std::string, std::string, std::string)’
   15 |   void add_entry(string f_name, string l_name, string phone_number,
      |        ^~~~~~~~~
contactservice.h:15:8: note:   candidate expects 7 arguments, 4 provided
make: *** [makefile:11: main.o] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ make: *** [makefile:11: main.o] Error 1
bash: make:: command not found
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c main.cpp -o main.o
gcc -c sqlite3.c -o sql.o
g++ cservice.o contact.o main.o sql.o contactdatabase. -o contactmanager
/usr/bin/ld: cannot find contactdatabase.: No such file or directory
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ cservice.o contact.o main.o sql.o contactdatabase.o -o contactmanager
/usr/bin/ld: cannot find contactdatabase.o: No such file or directory
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ rm *.o
(base) annie@golb:~/contactservice/CS499Milestone4$ ls
 contact.cpp            contact.h             LICENSE         sqlite3.c
 contactdatabase.cpp    contacts.db           main.cpp        sqlite3.h
 contactdatabase.cpp~   contactservice.cpp    makefile        test.db
 contactdatabase.h     '#contactservice.h#'   makefile.save
 contactdatabase.h~     contactservice.h      README.md
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c contactservice.cpp -o cservice.o
g++ -c contact.cpp -o contact.o
g++ -c main.cpp -o main.o
gcc -c sqlite3.c -o sql.o
g++ cservice.o contact.o main.o sql.o contactdatabase.o -o contactmanager
/usr/bin/ld: cannot find contactdatabase.o: No such file or directory
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ ls
 contact.cpp            contact.o             LICENSE         sqlite3.c
 contactdatabase.cpp    contacts.db           main.cpp        sqlite3.h
 contactdatabase.cpp~   contactservice.cpp    main.o          sql.o
 contactdatabase.h     '#contactservice.h#'   makefile        test.db
 contactdatabase.h~     contactservice.h      makefile.save
 contact.h              cservice.o            README.md
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactservice.h:6,
                 from contactdatabase.h:2,
                 from contactdatabase.cpp:1:
contact.h:4:7: error: redefinition of ‘class Contact’
    4 | class Contact{
      |       ^~~~~~~
In file included from contactdatabase.h:1:
contact.h:4:7: note: previous definition of ‘class Contact’
    4 | class Contact{
      |       ^~~~~~~
contactdatabase.h:14:23: error: invalid use of type ‘void’ in parameter declaration
   14 |   static int callback(void, int, char **, char **);
      |                       ^~~~
contactdatabase.h:16:11: error: field ‘db’ has incomplete type ‘sqlite3’
   16 |   sqlite3 db;
      |           ^~
In file included from contactdatabase.h:3:
sqlite3.h:272:16: note: forward declaration of ‘sqlite3’ {aka ‘struct sqlite3’}
  272 | typedef struct sqlite3 sqlite3;
      |                ^~~~~~~
contactdatabase.cpp:3:1: error: no declaration matches ‘ContactDatabase::ContactDatabase(ContactService)’
    3 | ContactDatabase::ContactDatabase(ContactService c){
      | ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note: candidates are: ‘constexpr ContactDatabase::ContactDatabase(ContactDatabase&&)’
    5 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note:                 ‘constexpr ContactDatabase::ContactDatabase(const ContactDatabase&)’
contactdatabase.h:7:3: note:                 ‘ContactDatabase::ContactDatabase()’
    7 |   ContactDatabase();
      |   ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note: ‘class ContactDatabase’ defined here
    5 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:14:12: error: no declaration matches ‘int ContactDatabase::callback(void*, int, char**, char**)’
   14 | static int ContactDatabase::callback(void* data, int argc, char **argv,
      |            ^~~~~~~~~~~~~~~
contactdatabase.h:14:14: note: candidate is: ‘static int ContactDatabase::callback(<type error>, int, char**, char**)’
   14 |   static int callback(void, int, char **, char **);
      |              ^~~~~~~~
contactdatabase.h:5:7: note: ‘class ContactDatabase’ defined here
    5 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp:24:6: error: ‘contactDatabase’ has not been declared
   24 | void contactDatabase::remove_record(Contact c){
      |      ^~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactservice.h:6,
                 from contactdatabase.h:2,
                 from contactdatabase.cpp:1:
contact.h:4:7: error: redefinition of ‘class Contact’
    4 | class Contact{
      |       ^~~~~~~
In file included from contactdatabase.h:1:
contact.h:4:7: note: previous definition of ‘class Contact’
    4 | class Contact{
      |       ^~~~~~~
contactdatabase.h:14:23: error: invalid use of type ‘void’ in parameter declaration
   14 |   static int callback(void, int, char **, char **);
      |                       ^~~~
contactdatabase.h:16:11: error: field ‘db’ has incomplete type ‘sqlite3’
   16 |   sqlite3 db;
      |           ^~
In file included from contactdatabase.h:3:
sqlite3.h:272:16: note: forward declaration of ‘sqlite3’ {aka ‘struct sqlite3’}
  272 | typedef struct sqlite3 sqlite3;
      |                ^~~~~~~
contactdatabase.cpp:3:1: error: no declaration matches ‘ContactDatabase::ContactDatabase(ContactService)’
    3 | ContactDatabase::ContactDatabase(ContactService c){
      | ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note: candidates are: ‘constexpr ContactDatabase::ContactDatabase(ContactDatabase&&)’
    5 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note:                 ‘constexpr ContactDatabase::ContactDatabase(const ContactDatabase&)’
contactdatabase.h:7:3: note:                 ‘ContactDatabase::ContactDatabase()’
    7 |   ContactDatabase();
      |   ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note: ‘class ContactDatabase’ defined here
    5 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:14:12: error: no declaration matches ‘int ContactDatabase::callback(void*, int, char**, char**)’
   14 | static int ContactDatabase::callback(void* data, int argc, char **argv,
      |            ^~~~~~~~~~~~~~~
contactdatabase.h:14:14: note: candidate is: ‘static int ContactDatabase::callback(<type error>, int, char**, char**)’
   14 |   static int callback(void, int, char **, char **);
      |              ^~~~~~~~
contactdatabase.h:5:7: note: ‘class ContactDatabase’ defined here
    5 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactservice.h:6,
                 from contactdatabase.h:2,
                 from contactdatabase.cpp:1:
contact.h:4:7: error: redefinition of ‘class Contact’
    4 | class Contact{
      |       ^~~~~~~
In file included from contactdatabase.h:1:
contact.h:4:7: note: previous definition of ‘class Contact’
    4 | class Contact{
      |       ^~~~~~~
contactdatabase.h:16:11: error: field ‘db’ has incomplete type ‘sqlite3’
   16 |   sqlite3 db;
      |           ^~
In file included from contactdatabase.h:3:
sqlite3.h:272:16: note: forward declaration of ‘sqlite3’ {aka ‘struct sqlite3’}
  272 | typedef struct sqlite3 sqlite3;
      |                ^~~~~~~
contactdatabase.cpp:3:1: error: no declaration matches ‘ContactDatabase::ContactDatabase(ContactService)’
    3 | ContactDatabase::ContactDatabase(ContactService c){
      | ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note: candidates are: ‘constexpr ContactDatabase::ContactDatabase(ContactDatabase&&)’
    5 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note:                 ‘constexpr ContactDatabase::ContactDatabase(const ContactDatabase&)’
contactdatabase.h:7:3: note:                 ‘ContactDatabase::ContactDatabase()’
    7 |   ContactDatabase();
      |   ^~~~~~~~~~~~~~~
contactdatabase.h:5:7: note: ‘class ContactDatabase’ defined here
    5 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
contactdatabase.h:15:19: note: declared here
   15 |   ContactService& contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ contactdatabase.h:5:7: note: candidates are: ‘constexpr ContactDatabase::ContactDatabase(ContactDatabase&&)’
bash: syntax error near unexpected token `('
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h:19:11: error: field ‘db’ has incomplete type ‘sqlite3’
   19 |   sqlite3 db;
      |           ^~
In file included from contactdatabase.h:6:
sqlite3.h:272:16: note: forward declaration of ‘sqlite3’ {aka ‘struct sqlite3’}
  272 | typedef struct sqlite3 sqlite3;
      |                ^~~~~~~
contactdatabase.cpp:3:1: error: no declaration matches ‘ContactDatabase::ContactDatabase(ContactService)’
    3 | ContactDatabase::ContactDatabase(ContactService c){
      | ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note: candidates are: ‘constexpr ContactDatabase::ContactDatabase(ContactDatabase&&)’
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note:                 ‘constexpr ContactDatabase::ContactDatabase(const ContactDatabase&)’
contactdatabase.h:10:3: note:                 ‘ContactDatabase::ContactDatabase()’
   10 |   ContactDatabase();
      |   ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note: ‘class ContactDatabase’ defined here
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
contactdatabase.h:18:19: note: declared here
   18 |   ContactService& contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$       | ^~~~~~~~~~~~~~~
bash: syntax error near unexpected token `|'
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp:3:1: error: no declaration matches ‘ContactDatabase::ContactDatabase(ContactService)’
    3 | ContactDatabase::ContactDatabase(ContactService c){
      | ^~~~~~~~~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:8:7: note: candidates are: ‘constexpr ContactDatabase::ContactDatabase(ContactDatabase&&)’
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note:                 ‘constexpr ContactDatabase::ContactDatabase(const ContactDatabase&)’
contactdatabase.h:10:3: note:                 ‘ContactDatabase::ContactDatabase()’
   10 |   ContactDatabase();
      |   ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note: ‘class ContactDatabase’ defined here
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
contactdatabase.h:18:19: note: declared here
   18 |   ContactService& contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ contactdatabase.h:18:19: note: declared here
bash: contactdatabase.h:18:19:: command not found
(base) annie@golb:~/contactservice/CS499Milestone4$ contactdatabase.h:18:19: note: declared here
bash: contactdatabase.h:18:19:: command not found
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In constructor ‘ContactDatabase::ContactDatabase(ContactService)’:
contactdatabase.cpp:3:1: error: uninitialized reference member in ‘class ContactService&’ [-fpermissive]
    3 | ContactDatabase::ContactDatabase(ContactService c){
      | ^~~~~~~~~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:18:19: note: ‘ContactService& ContactDatabase::contacts’ should be initialized
   18 |   ContactService& contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:4:31: error: cannot convert ‘sqlite3*’ to ‘sqlite3**’
    4 |   sqlite3_open("contacts.db", db);
      |                               ^~
      |                               |
      |                               sqlite3*
In file included from contactdatabase.h:6:
sqlite3.h:3873:13: note:   initializing argument 2 of ‘int sqlite3_open(const char*, sqlite3**)’
 3873 |   sqlite3 **ppDb          /* OUT: SQLite db handle */
      |   ~~~~~~~~~~^~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
contactdatabase.h:18:19: note: declared here
   18 |   ContactService& contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$    18 |   ContactService& contacts;
[1] 130250
bash: ContactService: command not found
bash: 18: command not found
bash: contacts: command not found
[1]+  Exit 127                18 | ContactService
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In constructor ‘ContactDatabase::ContactDatabase(ContactService)’:
contactdatabase.cpp:3:1: error: uninitialized reference member in ‘class ContactService&’ [-fpermissive]
    3 | ContactDatabase::ContactDatabase(ContactService c){
      | ^~~~~~~~~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:18:19: note: ‘ContactService& ContactDatabase::contacts’ should be initialized
   18 |   ContactService& contacts;
      |                   ^~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
contactdatabase.h:18:19: note: declared here
   18 |   ContactService& contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp:3:1: error: no declaration matches ‘ContactDatabase::ContactDatabase(ContactService&)’
    3 | ContactDatabase::ContactDatabase(ContactService& c){
      | ^~~~~~~~~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:8:7: note: candidates are: ‘constexpr ContactDatabase::ContactDatabase(ContactDatabase&&)’
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note:                 ‘constexpr ContactDatabase::ContactDatabase(const ContactDatabase&)’
contactdatabase.h:10:3: note:                 ‘ContactDatabase::ContactDatabase(ContactService)’
   10 |   ContactDatabase(ContactService c);
      |   ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note: ‘class ContactDatabase’ defined here
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
contactdatabase.h:18:19: note: declared here
   18 |   ContactService* contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$       |   ^~~~~~~~
bash: syntax error near unexpected token `|'
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp:3:1: error: no declaration matches ‘ContactDatabase::ContactDatabase(ContactService&)’
    3 | ContactDatabase::ContactDatabase(ContactService& c){
      | ^~~~~~~~~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:8:7: note: candidates are: ‘constexpr ContactDatabase::ContactDatabase(ContactDatabase&&)’
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note:                 ‘constexpr ContactDatabase::ContactDatabase(const ContactDatabase&)’
contactdatabase.h:10:3: note:                 ‘ContactDatabase::ContactDatabase(ContactService*)’
   10 |   ContactDatabase(ContactService* c);
      |   ^~~~~~~~~~~~~~~
contactdatabase.h:8:7: note: ‘class ContactDatabase’ defined here
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
contactdatabase.h:18:19: note: declared here
   18 |   ContactService* contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
bash: syntax error near unexpected token `('
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:18:19: note: declared here
   18 |   ContactService* contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid use of non-static member function ‘int ContactDatabase::callback(void*, int, char**, char**)’
   11 |   sqlite3_exec(db, sql, callback, (void*)data, &error);
      |                         ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:17:7: note: declared here
   17 |   int callback(void*, int, char **, char **);
      |       ^~~~~~~~
contactdatabase.cpp: In member function ‘int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:12: error: request for member ‘add_record’ in ‘((ContactDatabase*)this)->ContactDatabase::contacts’, which is of pointer type ‘ContactService*’ (maybe you meant to use ‘->’ ?)
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |            ^~~~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:18:19: note: declared here
   18 |   ContactService* contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:15:50: error: cannot declare member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’ to have static linkage [-fpermissive]
   15 |                                      char** error){
      |                                                  ^
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:18:19: note: declared here
   18 |   ContactService* contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   16 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:18:19: note: declared here
   18 |   ContactService* contacts;
      |                   ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: ‘this’ is unavailable for static member functions
   16 |   this.contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid use of non-static member function ‘int ContactDatabase::callback(void*, int, char**, char**)’
   11 |   sqlite3_exec(db, sql, callback, (void*)data, &error);
      |                         ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:17:7: note: declared here
   17 |   int callback(void*, int, char **, char **);
      |       ^~~~~~~~
contactdatabase.cpp: In member function ‘int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:8: error: request for member ‘contacts’ in ‘(ContactDatabase*)this’, which is of pointer type ‘ContactDatabase*’ (maybe you meant to use ‘->’ ?)
   16 |   this.contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |        ^~~~~~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: ‘this’ is unavailable for static member functions
   16 |   this.contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~
contactdatabase.cpp:18:1: warning: no return statement in function returning non-void [-Wreturn-type]
   18 | }
      | ^
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:16:3: error: ‘this’ is unavailable for static member functions
   16 |   this.contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h:17:10: error: storage class specifiers invalid in friend function declarations
   17 |   friend static int callback(void*, int, char **, char **);
      |          ^~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: ‘callback’ was not declared in this scope; did you mean ‘calloc’?
   11 |   sqlite3_exec(db, sql, callback, (void*)data, &error);
      |                         ^~~~~~~~
      |                         calloc
contactdatabase.cpp: At global scope:
contactdatabase.cpp:23:12: error: ‘int callback(void*, int, char**, char**)’ was declared ‘extern’ and later ‘static’ [-fpermissive]
   23 | static int callback(void* data, int argc, char **argv,
      |            ^~~~~~~~
contactdatabase.h:17:21: note: previous declaration of ‘int callback(void*, int, char**, char**)’
   17 |   friend static int callback(void*, int, char **, char **);
      |                     ^~~~~~~~
contactdatabase.cpp: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.cpp:25:3: error: invalid use of ‘this’ in non-member function
   25 |   this.contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:25:3: error: ‘this’ is unavailable for static member functions
   25 |   this.contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:25:3: error: invalid use of member ‘ContactDatabase::contacts’ in static member function
   25 |   contacts->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:18:19: note: declared here
   18 |   ContactService* contacts;
      |                   ^~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:25:3: error: ‘void*’ is not a pointer-to-object type
   25 |   data->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:25:3: error: ‘void*’ is not a pointer-to-object type
   25 |   data->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:25:20: error: ‘void*’ is not a pointer-to-object type
   25 |   (ContactService*)data->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |                    ^~~~
(base) annie@golb:~/contactservice/CS499Milestone4$    25 |   (ContactService*)data->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
bash: syntax error near unexpected token `data-'
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid use of non-static member function ‘int* ContactDatabase::callback(void*, int, char**, char**)’
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:17:8: note: declared here
   17 |   int *callback(void*, int, char **, char **);
      |        ^~~~~~~~
contactdatabase.cpp: At global scope:
contactdatabase.cpp:23:5: error: no declaration matches ‘int ContactDatabase::callback(void*, int, char**, char**)’
   23 | int ContactDatabase::callback(void* data, int argc, char **argv,
      |     ^~~~~~~~~~~~~~~
contactdatabase.h:17:8: note: candidate is: ‘int* ContactDatabase::callback(void*, int, char**, char**)’
   17 |   int *callback(void*, int, char **, char **);
      |        ^~~~~~~~
contactdatabase.h:8:7: note: ‘class ContactDatabase’ defined here
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ 
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid use of non-static member function ‘int* ContactDatabase::callback(void*, int, char**, char**)’
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
In file included from contactdatabase.cpp:1:
contactdatabase.h:17:8: note: declared here
   17 |   int *callback(void*, int, char **, char **);
      |        ^~~~~~~~
contactdatabase.cpp: In member function ‘int* ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:25:20: error: ‘void*’ is not a pointer-to-object type
   25 |   (ContactService*)data->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |                    ^~~~
(base) annie@golb:~/contactservice/CS499Milestone4$       |                         ^~~~~~~~
bash: syntax error near unexpected token `|'
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h:17:10: error: storage class specifiers invalid in friend function declarations
   17 |   friend static int callback(void*, int, char **, char **);
      |          ^~~~~~
contactdatabase.h:24:12: error: no declaration matches ‘int ContactDatabase::callback(void*, int, char**, char**)’
   24 | static int ContactDatabase::callback(void* data, int argc, char **argv,
      |            ^~~~~~~~~~~~~~~
contactdatabase.h:24:12: note: no functions named ‘int ContactDatabase::callback(void*, int, char**, char**)’
contactdatabase.h:8:7: note: ‘class ContactDatabase’ defined here
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: ‘callback’ was not declared in this scope; did you mean ‘calloc’?
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
      |                         calloc
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h:24:12: error: no declaration matches ‘int ContactDatabase::callback(void*, int, char**, char**)’
   24 | static int ContactDatabase::callback(void* data, int argc, char **argv,
      |            ^~~~~~~~~~~~~~~
contactdatabase.h:24:12: note: no functions named ‘int ContactDatabase::callback(void*, int, char**, char**)’
contactdatabase.h:8:7: note: ‘class ContactDatabase’ defined here
    8 | class ContactDatabase{
      |       ^~~~~~~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: ‘callback’ was not declared in this scope; did you mean ‘calloc’?
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
      |                         calloc
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h:24:12: error: ‘int callback(void*, int, char**, char**)’ was declared ‘extern’ and later ‘static’ [-fpermissive]
   24 | static int callback(void* data, int argc, char **argv,
      |            ^~~~~~~~
contactdatabase.h:17:14: note: previous declaration of ‘int callback(void*, int, char**, char**)’
   17 |   friend int callback(void*, int, char **, char **);
      |              ^~~~~~~~
contactdatabase.h: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.h:26:3: error: ‘add_record’ was not declared in this scope
   26 |   add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.h:26:3: error: ‘add_record’ was not declared in this scope
   26 |   add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.h:26:3: error: ‘contacts’ was not declared in this scope; did you mean ‘Contact’?
   26 |   contacts.add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
      |   Contact
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.h:26:3: error: ‘contacts’ was not declared in this scope; did you mean ‘Contact’?
   26 |   contacts->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
      |   Contact
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.h:26:3: error: ‘void*’ is not a pointer-to-object type
   26 |   data->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.h:26:3: error: ‘contacts’ was not declared in this scope; did you mean ‘Contact’?
   26 |   contacts->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
      |   Contact
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(ContactService*, int, char**, char**)’:
contactdatabase.h:26:3: error: ‘contacts’ was not declared in this scope; did you mean ‘Contact’?
   26 |   contacts->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ^~~~~~~~
      |   Contact
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid conversion from ‘int (*)(ContactService*, int, char**, char**)’ to ‘int (*)(void*, int, char**, char**)’ [-fpermissive]
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
      |                         |
      |                         int (*)(ContactService*, int, char**, char**)
In file included from contactdatabase.h:6:
sqlite3.h:430:9: note:   initializing argument 3 of ‘int sqlite3_exec(sqlite3*, const char*, int (*)(void*, int, char**, char**), void*, char**)’
  430 |   int (*callback)(void*,int,char**,char**),  /* Callback function */
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(ContactService*, int, char**, char**)’:
contactdatabase.h:26:9: error: ‘class ContactService’ has no member named ‘add_record’
   26 |   data->add_record(argv[0], argv[1], argv[2], argv[3], argv[4],
      |         ^~~~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid conversion from ‘int (*)(ContactService*, int, char**, char**)’ to ‘int (*)(void*, int, char**, char**)’ [-fpermissive]
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
      |                         |
      |                         int (*)(ContactService*, int, char**, char**)
In file included from contactdatabase.h:6:
sqlite3.h:430:9: note:   initializing argument 3 of ‘int sqlite3_exec(sqlite3*, const char*, int (*)(void*, int, char**, char**), void*, char**)’
  430 |   int (*callback)(void*,int,char**,char**),  /* Callback function */
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(ContactService*, int, char**, char**)’:
contactdatabase.h:26:18: error: no matching function for call to ‘ContactService::add_entry(char*&, char*&, char*&, char*&, char*&, char*&, char*&, char*&)’
   26 |   data->add_entry(argv[0], argv[1], argv[2], argv[3], argv[4],
      |   ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   27 |                       argv[5], argv[6], argv[7]);
      |                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from contactdatabase.h:5:
contactservice.h:19:8: note: candidate: ‘void ContactService::add_entry(std::string, std::string, std::string, std::string, std::string, std::string, std::string)’
   19 |   void add_entry(string f_name, string l_name, string phone_number,
      |        ^~~~~~~~~
contactservice.h:19:8: note:   candidate expects 7 arguments, 8 provided
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid conversion from ‘int (*)(ContactService*, int, char**, char**)’ to ‘int (*)(void*, int, char**, char**)’ [-fpermissive]
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
      |                         |
      |                         int (*)(ContactService*, int, char**, char**)
In file included from contactdatabase.h:6:
sqlite3.h:430:9: note:   initializing argument 3 of ‘int sqlite3_exec(sqlite3*, const char*, int (*)(void*, int, char**, char**), void*, char**)’
  430 |   int (*callback)(void*,int,char**,char**),  /* Callback function */
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ 
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(ContactService*, int, char**, char**)’:
contactdatabase.h:36:19: error: ‘std::string’ {aka ‘class std::__cxx11::basic_string<char>’} has no member named ‘city’
   36 |                   city, state, zip_code);
      |                   ^~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid conversion from ‘int (*)(ContactService*, int, char**, char**)’ to ‘int (*)(void*, int, char**, char**)’ [-fpermissive]
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
      |                         |
      |                         int (*)(ContactService*, int, char**, char**)
In file included from contactdatabase.h:6:
sqlite3.h:430:9: note:   initializing argument 3 of ‘int sqlite3_exec(sqlite3*, const char*, int (*)(void*, int, char**, char**), void*, char**)’
  430 |   int (*callback)(void*,int,char**,char**),  /* Callback function */
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid conversion from ‘int (*)(ContactService*, int, char**, char**)’ to ‘int (*)(void*, int, char**, char**)’ [-fpermissive]
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
      |                         |
      |                         int (*)(ContactService*, int, char**, char**)
In file included from contactdatabase.h:6,
                 from contactdatabase.cpp:1:
sqlite3.h:430:9: note:   initializing argument 3 of ‘int sqlite3_exec(sqlite3*, const char*, int (*)(void*, int, char**, char**), void*, char**)’
  430 |   int (*callback)(void*,int,char**,char**),  /* Callback function */
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp:11:25: error: invalid conversion from ‘int (*)(ContactService*, int, char**, char**)’ to ‘int (*)(void*, int, char**, char**)’ [-fpermissive]
   11 |   sqlite3_exec(db, sql, callback, contacts, &error);
      |                         ^~~~~~~~
      |                         |
      |                         int (*)(ContactService*, int, char**, char**)
In file included from contactdatabase.h:6,
                 from contactdatabase.cpp:1:
sqlite3.h:430:9: note:   initializing argument 3 of ‘int sqlite3_exec(sqlite3*, const char*, int (*)(void*, int, char**, char**), void*, char**)’
  430 |   int (*callback)(void*,int,char**,char**),  /* Callback function */
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.h:33:11: error: ‘void*’ is not a pointer-to-object type
   33 |   (void *)data->add_entry(last_name, first_name, phone_number, address,
      |           ^~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$       |                ^~~~~~~~~~~~~~~~~~~~~~~~~
bash: syntax error near unexpected token `|'
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
In file included from contactdatabase.cpp:1:
contactdatabase.h: In function ‘int callback(void*, int, char**, char**)’:
contactdatabase.h:33:11: error: ‘void*’ is not a pointer-to-object type
   33 |   (void *)data->add_entry(last_name, first_name, phone_number, address,
      |           ^~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:32:12: error: request for member ‘add_entry’ in ‘ContactDatabase::contacts’, which is of pointer type ‘ContactService*’ (maybe you meant to use ‘->’ ?)
   32 |   contacts.add_entry(last_name, first_name, phone_number, address,
      |            ^~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
contactdatabase.cpp: In static member function ‘static int ContactDatabase::callback(void*, int, char**, char**)’:
contactdatabase.cpp:32:12: error: request for member ‘add_entry’ in ‘ContactDatabase::contacts’, which is of pointer type ‘ContactService*’ (maybe you meant to use ‘->’ ?)
   32 |   contacts.add_entry(last_name, first_name, phone_number, address,
      |            ^~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/bin/ld: /tmp/ccn7SLOH.o: warning: relocation against `_ZN15ContactDatabase8contactsE' in read-only section `.text'
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/12/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x17): undefined reference to `main'
/usr/bin/ld: /tmp/ccn7SLOH.o: in function `ContactDatabase::ContactDatabase(ContactService*)':
contactdatabase.cpp:(.text+0x3d): undefined reference to `sqlite3_open'
/usr/bin/ld: contactdatabase.cpp:(.text+0x48): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: /tmp/ccn7SLOH.o: in function `ContactDatabase::get_records()':
contactdatabase.cpp:(.text+0x72): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: contactdatabase.cpp:(.text+0x92): undefined reference to `sqlite3_exec'
/usr/bin/ld: /tmp/ccn7SLOH.o: in function `ContactDatabase::callback(void*, int, char**, char**)':
contactdatabase.cpp:(.text+0x2c3): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: contactdatabase.cpp:(.text+0x3a4): undefined reference to `ContactService::add_entry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
collect2: error: ld returned 1 exit status
(base) annie@golb:~/contactservice/CS499Milestone4$ rm *.o
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c contactservice.cpp -o cservice.o
g++ -c contact.cpp -o contact.o
g++ -c main.cpp -o main.o
gcc -c sqlite3.c -o sql.o
g++ cservice.o contact.o main.o sql.o contactdatabase.o -o contactmanager
/usr/bin/ld: cannot find contactdatabase.o: No such file or directory
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/bin/ld: /tmp/cc9JmIN3.o: warning: relocation against `_ZN15ContactDatabase8contactsE' in read-only section `.text'
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/12/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x17): undefined reference to `main'
/usr/bin/ld: /tmp/cc9JmIN3.o: in function `ContactDatabase::ContactDatabase(ContactService*)':
contactdatabase.cpp:(.text+0x3d): undefined reference to `sqlite3_open'
/usr/bin/ld: contactdatabase.cpp:(.text+0x48): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: /tmp/cc9JmIN3.o: in function `ContactDatabase::get_records()':
contactdatabase.cpp:(.text+0x72): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: contactdatabase.cpp:(.text+0x92): undefined reference to `sqlite3_exec'
/usr/bin/ld: /tmp/cc9JmIN3.o: in function `ContactDatabase::callback(void*, int, char**, char**)':
contactdatabase.cpp:(.text+0x2c3): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: contactdatabase.cpp:(.text+0x3a4): undefined reference to `ContactService::add_entry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
collect2: error: ld returned 1 exit status
(base) annie@golb:~/contactservice/CS499Milestone4$ ls
contact.cpp           contactdatabase.h   contact.o           contactservice.h  main.cpp  makefile.save  sqlite3.h
contactdatabase.cpp   contactdatabase.h~  contacts.db         cservice.o        main.o    README.md      sql.o
contactdatabase.cpp~  contact.h           contactservice.cpp  LICENSE           makefile  sqlite3.c      test.db
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ contactdatabase.cpp sqlite3.c
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:44625:36: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]
44625 |       sqlite3_snprintf(nBuf, zBuf, "%s/"SQLITE_TEMP_FILE_PREFIX"%llx%c",
      |                                    ^
sqlite3.c:23370:20: error: redefinition of ‘u32 sqlite3WhereTrace’
23370 | SQLITE_PRIVATE u32 sqlite3WhereTrace = 0;
      |                    ^~~~~~~~~~~~~~~~~
sqlite3.c:15482:20: note: ‘u32 sqlite3WhereTrace’ previously declared here
15482 | SQLITE_PRIVATE u32 sqlite3WhereTrace;
      |                    ^~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘int parseModifier(sqlite3_context*, const char*, int, DateTime*, int)’:
sqlite3.c:25400:22: error: expected unqualified-id before ‘new’
25400 |             DateTime new;
      |                      ^~~
sqlite3.c:25401:24: error: expected type-specifier before ‘,’ token
25401 |             memset(&new, 0, sizeof(new));
      |                        ^
sqlite3.c:25401:39: error: expected type-specifier before ‘)’ token
25401 |             memset(&new, 0, sizeof(new));
      |                                       ^
sqlite3.c:25403:16: error: expected type-specifier before ‘.’ token
25403 |             new.iJD = iGuess;
      |                ^
sqlite3.c:25404:16: error: expected type-specifier before ‘.’ token
25404 |             new.validJD = 1;
      |                ^
sqlite3.c:25405:34: error: expected type-specifier before ‘,’ token
25405 |             rc = toLocaltime(&new, pCtx);
      |                                  ^
sqlite3.c:25407:27: error: expected type-specifier before ‘)’ token
25407 |             computeJD(&new);
      |                           ^
sqlite3.c:25408:23: error: expected type-specifier before ‘.’ token
25408 |             iErr = new.iJD - iOrigJD;
      |                       ^
sqlite3.c: In function ‘void* sqlite3MemMalloc(int)’:
sqlite3.c:27055:44: error: invalid conversion from ‘void*’ to ‘sqlite3_int64*’ {aka ‘long long int*’} [-fpermissive]
27055 | #define SQLITE_MALLOC(x)             malloc(x)
      |                                      ~~~~~~^~~
      |                                            |
      |                                            void*
sqlite3.c:27121:7: note: in expansion of macro ‘SQLITE_MALLOC’
27121 |   p = SQLITE_MALLOC( nByte+8 );
      |       ^~~~~~~~~~~~~
sqlite3.c: In function ‘void* sqlite3MemRealloc(void*, int)’:
sqlite3.c:27057:45: error: invalid conversion from ‘void*’ to ‘sqlite3_int64*’ {aka ‘long long int*’} [-fpermissive]
27057 | #define SQLITE_REALLOC(x,y)          realloc((x),(y))
      |                                      ~~~~~~~^~~~~~~~~
      |                                             |
      |                                             void*
sqlite3.c:27194:7: note: in expansion of macro ‘SQLITE_REALLOC’
27194 |   p = SQLITE_REALLOC(p, nByte+8 );
      |       ^~~~~~~~~~~~~~
sqlite3.c: In function ‘sqlite3_mutex* pthreadMutexAlloc(int)’:
sqlite3.c:29848:28: error: invalid conversion from ‘void*’ to ‘sqlite3_mutex*’ [-fpermissive]
29848 |       p = sqlite3MallocZero( sizeof(*p) );
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
      |                            |
      |                            void*
sqlite3.c:29869:28: error: invalid conversion from ‘void*’ to ‘sqlite3_mutex*’ [-fpermissive]
29869 |       p = sqlite3MallocZero( sizeof(*p) );
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
      |                            |
      |                            void*
sqlite3.c: In function ‘char* sqlite3DbStrDup(sqlite3*, const char*)’:
sqlite3.c:31358:28: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
31358 |   zNew = sqlite3DbMallocRaw(db, n);
      |          ~~~~~~~~~~~~~~~~~~^~~~~~~
      |                            |
      |                            void*
sqlite3.c: In function ‘char* sqlite3DbStrNDup(sqlite3*, const char*, u64)’:
sqlite3.c:31369:12: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
31369 |   zNew = z ? sqlite3DbMallocRawNN(db, n+1) : 0;
      |          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |            |
      |            void*
sqlite3.c: In function ‘char* printfTempBuf(sqlite3_str*, sqlite3_int64)’:
sqlite3.c:31641:25: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
31641 |   z = sqlite3DbMallocRaw(pAccum->db, n);
      |       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
sqlite3.c: In function ‘void sqlite3_str_vappendf(sqlite3_str*, const char*, __va_list_tag*)’:
sqlite3.c:32000:34: error: invalid conversion from ‘const char*’ to ‘char*’ [-fpermissive]
32000 |             bufpt = flag_zeropad ? "null" : "NaN";
      |                     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      |                                  |
      |                                  const char*
sqlite3.c:32222:19: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
32222 |           bufpt = "";
      |                   ^~
sqlite3.c:32280:52: error: invalid conversion from ‘const char*’ to ‘char*’ [-fpermissive]
32280 |         if( isnull ) escarg = (xtype==etSQLESCAPE2 ? "NULL" : "(NULL)");
      |                               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
      |                                                    |
      |                                                    const char*
sqlite3.c: In function ‘int sqlite3StrAccumEnlarge(StrAccum*, i64)’:
sqlite3.c:32470:30: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
32470 |       zNew = sqlite3DbRealloc(p->db, zOld, p->nAlloc);
      |              ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
      |                              |
      |                              void*
sqlite3.c:32472:28: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
32472 |       zNew = sqlite3Realloc(zOld, p->nAlloc);
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      |                            |
      |                            void*
sqlite3.c: In function ‘char* strAccumFinishRealloc(StrAccum*)’:
sqlite3.c:32551:29: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
32551 |   zText = sqlite3DbMallocRaw(p->db, p->nChar+1 );
      |           ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
      |                             |
      |                             void*
sqlite3.c: In function ‘sqlite3_str* sqlite3_str_new(sqlite3*)’:
sqlite3.c:32666:36: error: invalid conversion from ‘void*’ to ‘sqlite3_str*’ [-fpermissive]
32666 |   sqlite3_str *p = sqlite3_malloc64(sizeof(*p));
      |                    ~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                    |
      |                                    void*
sqlite3.c: In function ‘char* sqlite3RCStrNew(u64)’:
sqlite3.c:32915:30: error: invalid conversion from ‘void*’ to ‘RCStr*’ [-fpermissive]
32915 |   RCStr *p = sqlite3_malloc64( N + sizeof(*p) + 1 );
      |              ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
      |                              |
      |                              void*
sqlite3.c: In function ‘char* sqlite3RCStrResize(char*, u64)’:
sqlite3.c:32931:27: error: invalid conversion from ‘void*’ to ‘RCStr*’ [-fpermissive]
32931 |   pNew = sqlite3_realloc64(p, N+sizeof(RCStr)+1);
      |          ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
      |                           |
      |                           void*
sqlite3.c: In function ‘void sqlite3_randomness(int, void*)’:
sqlite3.c:34322:25: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
34322 |   unsigned char *zBuf = pBuf;
      |                         ^~~~
      |                         |
      |                         void*
sqlite3.c: In function ‘int sqlite3ThreadCreate(SQLiteThread**, void* (*)(void*), void*)’:
sqlite3.c:34487:20: error: invalid conversion from ‘void*’ to ‘SQLiteThread*’ [-fpermissive]
34487 |   p = sqlite3Malloc(sizeof(*p));
      |       ~~~~~~~~~~~~~^~~~~~~~~~~~
      |                    |
      |                    void*
sqlite3.c: In function ‘int sqlite3VdbeMemTranslate(Mem*, u8)’:
sqlite3.c:34986:28: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
34986 |   zOut = sqlite3DbMallocRaw(pMem->db, len);
      |          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
      |                            |
      |                            void*
sqlite3.c: In function ‘char* sqlite3Utf16to8(sqlite3*, const void*, int, u8)’:
sqlite3.c:35203:28: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
35203 |   sqlite3VdbeMemSetStr(&m, z, nByte, enc, SQLITE_STATIC);
      |                            ^
      |                            |
      |                            const void*
sqlite3.c:24053:47: note:   initializing argument 2 of ‘int sqlite3VdbeMemSetStr(Mem*, const char*, i64, u8, void (*)(void*))’
24053 | SQLITE_PRIVATE int sqlite3VdbeMemSetStr(Mem*, const char*, i64, u8, void(*)(void*));
      |                                               ^~~~~~~~~~~
sqlite3.c: In function ‘int sqlite3Utf16ByteLen(const void*, int, int)’:
sqlite3.c:35223:28: error: invalid conversion from ‘const void*’ to ‘const unsigned char*’ [-fpermissive]
35223 |   unsigned char const *z = zIn;
      |                            ^~~
      |                            |
      |                            const void*
sqlite3.c: In function ‘int sqlite3_strnicmp(const char*, const char*, int)’:
sqlite3.c:35706:27: warning: ISO C++17 does not allow ‘register’ storage class specifier [-Wregister]
35706 |   register unsigned char *a, *b;
      |                           ^
sqlite3.c:35706:31: warning: ISO C++17 does not allow ‘register’ storage class specifier [-Wregister]
35706 |   register unsigned char *a, *b;
      |                               ^
sqlite3.c: In function ‘void sqlite3FpDecode(FpDecode*, double, int, int)’:
sqlite3.c:36306:12: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
36306 |     p->z = "0";
      |            ^~~
sqlite3.c: In function ‘VList* sqlite3VListAdd(sqlite3*, VList*, const char*, int, int)’:
sqlite3.c:37080:35: error: invalid conversion from ‘void*’ to ‘VList*’ {aka ‘int*’} [-fpermissive]
37080 |     VList *pOut = sqlite3DbRealloc(db, pIn, nAlloc*sizeof(int));
      |                   ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                   |
      |                                   void*
sqlite3.c: In function ‘void insertElement(Hash*, _ht*, HashElem*)’:
sqlite3.c:37211:19: error: invalid use of incomplete type ‘struct _ht’
37211 |     pHead = pEntry->count ? pEntry->chain : 0;
      |                   ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c:37211:35: error: invalid use of incomplete type ‘struct _ht’
37211 |     pHead = pEntry->count ? pEntry->chain : 0;
      |                                   ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c:37212:11: error: invalid use of incomplete type ‘struct _ht’
37212 |     pEntry->count++;
      |           ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c:37213:11: error: invalid use of incomplete type ‘struct _ht’
37213 |     pEntry->chain = pNew;
      |           ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c: In function ‘int rehash(Hash*, unsigned int)’:
sqlite3.c:37243:16: error: invalid application of ‘sizeof’ to incomplete type ‘_ht’
37243 |   if( new_size*sizeof(struct _ht)>SQLITE_MALLOC_SOFT_LIMIT ){
      |                ^~~~~~~~~~~~~~~~~~
sqlite3.c:37244:41: error: invalid application of ‘sizeof’ to incomplete type ‘_ht’
37244 |     new_size = SQLITE_MALLOC_SOFT_LIMIT/sizeof(struct _ht);
      |                                         ^~~~~~~~~~~~~~~~~~
sqlite3.c:37258:50: error: invalid application of ‘sizeof’ to incomplete type ‘_ht’
37258 |   new_ht = (struct _ht *)sqlite3Malloc( new_size*sizeof(struct _ht) );
      |                                                  ^~~~~~~~~~~~~~~~~~
sqlite3.c:37263:12: error: cannot convert ‘_ht*’ to ‘Hash::_ht*’ in assignment
37263 |   pH->ht = new_ht;
      |            ^~~~~~
      |            |
      |            _ht*
sqlite3.c:37206:10: note: class type ‘_ht’ is incomplete
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c:37264:53: error: invalid application of ‘sizeof’ to incomplete type ‘_ht’
37264 |   pH->htsize = new_size = sqlite3MallocSize(new_ht)/sizeof(struct _ht);
      |                                                     ^~~~~~~~~~~~~~~~~~
sqlite3.c:37265:30: error: invalid application of ‘sizeof’ to incomplete type ‘_ht’
37265 |   memset(new_ht, 0, new_size*sizeof(struct _ht));
      |                              ^~~~~~~~~~~~~~~~~~
sqlite3.c:37269:32: error: invalid use of incomplete type ‘struct _ht’
37269 |     insertElement(pH, &new_ht[h], elem);
      |                                ^
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c: In function ‘HashElem* findElementWithHash(const Hash*, const char*, unsigned int*)’:
sqlite3.c:37292:14: error: cannot convert ‘Hash::_ht*’ to ‘_ht*’ in assignment
37292 |     pEntry = &pH->ht[h];
      |              ^~~~~~~~~~
      |              |
      |              Hash::_ht*
sqlite3.c:37293:18: error: invalid use of incomplete type ‘struct _ht’
37293 |     elem = pEntry->chain;
      |                  ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c:37294:19: error: invalid use of incomplete type ‘struct _ht’
37294 |     count = pEntry->count;
      |                   ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c: In function ‘void removeElementGivenHash(Hash*, HashElem*, unsigned int)’:
sqlite3.c:37330:14: error: cannot convert ‘Hash::_ht*’ to ‘_ht*’ in assignment
37330 |     pEntry = &pH->ht[h];
      |              ^~~~~~~~~~
      |              |
      |              Hash::_ht*
sqlite3.c:37331:15: error: invalid use of incomplete type ‘struct _ht’
37331 |     if( pEntry->chain==elem ){
      |               ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c:37332:13: error: invalid use of incomplete type ‘struct _ht’
37332 |       pEntry->chain = elem->next;
      |             ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c:37335:11: error: invalid use of incomplete type ‘struct _ht’
37335 |     pEntry->count--;
      |           ^~
sqlite3.c:37206:10: note: forward declaration of ‘struct _ht’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |          ^~~
sqlite3.c: In function ‘void* sqlite3HashInsert(Hash*, const char*, void*)’:
sqlite3.c:37400:28: error: cannot convert ‘Hash::_ht*’ to ‘_ht*’
37400 |   insertElement(pH, pH->ht ? &pH->ht[h] : 0, new_elem);
      |                     ~~~~~~~^~~~~~~~~~~~~~~~
      |                            |
      |                            Hash::_ht*
sqlite3.c:37206:15: note:   initializing argument 2 of ‘void insertElement(Hash*, _ht*, HashElem*)’
37206 |   struct _ht *pEntry,    /* The entry into which pNew is inserted */
      |   ~~~~~~~~~~~~^~~~~~
sqlite3.c: In function ‘int unixLogErrorAtLine(int, const char*, const char*, int)’:
sqlite3.c:39906:10: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
39906 |   zErr = "";
      |          ^~
sqlite3.c: In function ‘int findInodeInfo(unixFile*, unixInodeInfo**)’:
sqlite3.c:40071:30: error: invalid conversion from ‘void*’ to ‘unixInodeInfo*’ [-fpermissive]
40071 |     pInode = sqlite3_malloc64( sizeof(*pInode) );
      |              ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
      |                              |
      |                              void*
sqlite3.c: In function ‘int unixFileControl(sqlite3_file*, int, void*)’:
sqlite3.c:42623:38: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
42623 |       char *zTFile = sqlite3_malloc64( pFile->pVfs->mxPathname );
      |                      ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                      |
      |                                      void*
sqlite3.c: In function ‘int unixOpenSharedMemory(unixFile*)’:
sqlite3.c:43263:23: error: invalid conversion from ‘void*’ to ‘unixShm*’ [-fpermissive]
43263 |   p = sqlite3_malloc64( sizeof(*p) );
      |       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
      |                       |
      |                       void*
sqlite3.c:43295:32: error: invalid conversion from ‘void*’ to ‘unixShmNode*’ [-fpermissive]
43295 |     pShmNode = sqlite3_malloc64( sizeof(*pShmNode) + nShmFilename );
      |                ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                |
      |                                void*
sqlite3.c: In function ‘void unixRemapfile(unixFile*, i64)’:
sqlite3.c:43925:20: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
43925 |     pNew = osMremap(pOrig, nReuse, nNew, MREMAP_MAYMOVE);
      |                    ^
      |                    |
      |                    void*
sqlite3.c:43947:18: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
43947 |     pNew = osMmap(0, nNew, flags, MAP_SHARED, h, 0);
      |                  ^
      |                  |
      |                  void*
sqlite3.c: In function ‘int unixOpen(sqlite3_vfs*, const char*, sqlite3_file*, int, int*)’:
sqlite3.c:44922:33: error: invalid conversion from ‘void*’ to ‘UnixUnusedFd*’ [-fpermissive]
44922 |       pUnused = sqlite3_malloc64(sizeof(*pUnused));
      |                 ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
      |                                 |
      |                                 void*
sqlite3.c: In function ‘int memdbEnlarge(MemStore*, sqlite3_int64)’:
sqlite3.c:53373:24: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
53373 |   pNew = sqlite3Realloc(p->aData, newSz);
      |          ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c: In function ‘int memdbOpen(sqlite3_vfs*, const char*, sqlite3_file*, int, int*)’:
sqlite3.c:53659:24: error: invalid conversion from ‘void*’ to ‘MemStore*’ [-fpermissive]
53659 |       p = sqlite3Malloc( sizeof(*p) + szName + 3 );
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c:53664:29: error: invalid conversion from ‘void*’ to ‘MemStore**’ [-fpermissive]
53664 |       apNew = sqlite3Realloc(memdb_g.apMemStore,
      |               ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
      |                             |
      |                             void*
53665 |                              sizeof(apNew[0])*(memdb_g.nMemStore+1) );
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:53693:22: error: invalid conversion from ‘void*’ to ‘MemStore*’ [-fpermissive]
53693 |     p = sqlite3Malloc( sizeof(*p) );
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~
      |                      |
      |                      void*
sqlite3.c: In function ‘unsigned char* sqlite3_serialize(sqlite3*, const char*, sqlite3_int64*, unsigned int)’:
sqlite3.c:53874:30: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
53874 |       pOut = sqlite3_malloc64( pStore->sz );
      |              ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
      |                              |
      |                              void*
sqlite3.c:53903:30: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
53903 |       pOut = sqlite3_malloc64( sz );
      |              ~~~~~~~~~~~~~~~~^~~~~~
      |                              |
      |                              void*
sqlite3.c: In function ‘Bitvec* sqlite3BitvecCreate(u32)’:
sqlite3.c:54146:24: error: invalid conversion from ‘void*’ to ‘Bitvec*’ [-fpermissive]
54146 |   p = sqlite3MallocZero( sizeof(*p) );
      |       ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c: In function ‘int sqlite3BitvecSet(Bitvec*, u32)’:
sqlite3.c:20984:56: error: invalid conversion from ‘void*’ to ‘u32*’ {aka ‘unsigned int*’} [-fpermissive]
20984 | # define sqlite3StackAllocRaw(D,N)   sqlite3DbMallocRaw(D,N)
      |                                      ~~~~~~~~~~~~~~~~~~^~~~~
      |                                                        |
      |                                                        void*
sqlite3.c:54241:21: note: in expansion of macro ‘sqlite3StackAllocRaw’
54241 |     u32 *aiValues = sqlite3StackAllocRaw(0, sizeof(p->u.aHash));
      |                     ^~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3BitvecClear(Bitvec*, u32, void*)’:
sqlite3.c:54284:21: error: invalid conversion from ‘void*’ to ‘u32*’ {aka ‘unsigned int*’} [-fpermissive]
54284 |     u32 *aiValues = pBuf;
      |                     ^~~~
      |                     |
      |                     void*
sqlite3.c: In function ‘int sqlite3BitvecBuiltinTest(int, int*)’:
sqlite3.c:54375:25: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
54375 |   pV = sqlite3MallocZero( (sz+7)/8 + 1 );
      |        ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      |                         |
      |                         void*
sqlite3.c: In function ‘int pcache1InitBulk(PCache1*)’:
sqlite3.c:55697:25: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
55697 |   zBulk = pCache->pBulk = sqlite3Malloc( szBulk );
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
      |                         |
      |                         void*
sqlite3.c: In function ‘RowSet* sqlite3RowSetInit(sqlite3*)’:
sqlite3.c:56797:35: error: invalid conversion from ‘void*’ to ‘RowSet*’ [-fpermissive]
56797 |   RowSet *p = sqlite3DbMallocRawNN(db, sizeof(*p));
      |               ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      |                                   |
      |                                   void*
sqlite3.c: In function ‘RowSetEntry* rowSetEntryAlloc(RowSet*)’:
sqlite3.c:56857:32: error: invalid conversion from ‘void*’ to ‘RowSetChunk*’ [-fpermissive]
56857 |     pNew = sqlite3DbMallocRawNN(p->db, sizeof(*pNew));
      |            ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
      |                                |
      |                                void*
sqlite3.c: In function ‘int pager_delsuper(Pager*, const char*)’:
sqlite3.c:59889:24: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
59889 |   zFree = sqlite3Malloc(4 + nSuperJournal + nSuperPtr + 2);
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c: In function ‘int readDbPage(PgHdr*)’:
sqlite3.c:60354:73: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
60354 |     rc = sqlite3WalReadFrame(pPager->pWal, iFrame,pPager->pageSize,pPg->pData);
      |                                                                    ~~~~~^~~~~
      |                                                                         |
      |                                                                         void*
sqlite3.c:57272:57: note:   initializing argument 4 of ‘int sqlite3WalReadFrame(Wal*, u32, int, u8*)’
57272 | SQLITE_PRIVATE int sqlite3WalReadFrame(Wal *, u32, int, u8 *);
      |                                                         ^~~~
sqlite3.c: In function ‘int pager_write_pagelist(Pager*, PgHdr*)’:
sqlite3.c:61781:22: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
61781 |       pData = pList->pData;
      |               ~~~~~~~^~~~~
      |                      |
      |                      void*
sqlite3.c: In function ‘int subjournalPage(PgHdr*)’:
sqlite3.c:61870:16: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
61870 |       pData2 = pData;
      |                ^~~~~
      |                |
      |                void*
sqlite3.c: In function ‘int sqlite3PagerOpen(sqlite3_vfs*, Pager**, const char*, int, int, int, void (*)(DbPage*))’:
sqlite3.c:62089:35: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
62089 |     zPathname = sqlite3DbMallocRaw(0, nPathname*2);
      |                 ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      |                                   |
      |                                   void*
sqlite3.c: In function ‘int pagerAddPageToRollbackJournal(PgHdr*)’:
sqlite3.c:63306:17: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
63306 |   pData2 = pPg->pData;
      |            ~~~~~^~~~~
      |                 |
      |                 void*
sqlite3.c: In function ‘int walIteratorNext(WalIterator*, u32*, u32*)’:
sqlite3.c:66896:35: error: cannot convert ‘WalIterator::WalSegment*’ to ‘walIteratorNext(WalIterator*, u32*, u32*)::WalSegment*’ in initialization
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |                                   ^~~~~~~~~~~~~~~
      |                                   |
      |                                   WalIterator::WalSegment*
sqlite3.c:66897:20: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66897 |     while( pSegment->iNext<pSegment->nEntry ){
      |                    ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c:66897:36: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66897 |     while( pSegment->iNext<pSegment->nEntry ){
      |                                    ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c:66898:25: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66898 |       u32 iPg = pSegment->aPgno[pSegment->aIndex[pSegment->iNext]];
      |                         ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c:66898:41: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66898 |       u32 iPg = pSegment->aPgno[pSegment->aIndex[pSegment->iNext]];
      |                                         ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c:66898:58: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66898 |       u32 iPg = pSegment->aPgno[pSegment->aIndex[pSegment->iNext]];
      |                                                          ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c:66902:30: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66902 |           *piFrame = pSegment->iZero + pSegment->aIndex[pSegment->iNext];
      |                              ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c:66902:48: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66902 |           *piFrame = pSegment->iZero + pSegment->aIndex[pSegment->iNext];
      |                                                ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c:66902:65: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66902 |           *piFrame = pSegment->iZero + pSegment->aIndex[pSegment->iNext];
      |                                                                 ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c:66906:15: error: invalid use of incomplete type ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66906 |       pSegment->iNext++;
      |               ^~
sqlite3.c:66896:12: note: forward declaration of ‘struct walIteratorNext(WalIterator*, u32*, u32*)::WalSegment’
66896 |     struct WalSegment *pSegment = &p->aSegment[i];
      |            ^~~~~~~~~~
sqlite3.c: In function ‘int walIteratorInit(Wal*, u32, WalIterator**)’:
sqlite3.c:67092:24: error: invalid application of ‘sizeof’ to incomplete type ‘walIteratorInit(Wal*, u32, WalIterator**)::WalSegment’
67092 |         + (nSegment-1)*sizeof(struct WalSegment)
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘int walWriteOneFrame(WalWriter*, PgHdr*, int, sqlite3_int64)’:
sqlite3.c:69062:51: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
69062 |   walEncodeFrame(p->pWal, pPage->pgno, nTruncate, pData, aFrame);
      |                                                   ^~~~~
      |                                                   |
      |                                                   void*
sqlite3.c:66099:7: note:   initializing argument 4 of ‘void walEncodeFrame(Wal*, u32, u32, u8*, u8*)’
66099 |   u8 *aData,                      /* Pointer to page data */
      |   ~~~~^~~~~
sqlite3.c: In function ‘int walRewriteChecksums(Wal*, u32)’:
sqlite3.c:69086:24: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
69086 |   aBuf = sqlite3_malloc(szPage + WAL_FRAME_HDRSIZE);
      |          ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c: In function ‘int defragmentPage(MemPage*, int)’:
sqlite3.c:72465:33: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
72465 |     temp = sqlite3PagerTempSpace(pPage->pBt->pPager);
      |            ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
      |                                 |
      |                                 void*
sqlite3.c: In function ‘MemPage* btreePageFromDbPage(DbPage*, Pgno, BtShared*)’:
sqlite3.c:73082:39: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
73082 |     pPage->aData = sqlite3PagerGetData(pDbPage);
      |                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
      |                                       |
      |                                       void*
sqlite3.c: In function ‘int sqlite3BtreeOpen(sqlite3_vfs*, const char*, sqlite3*, Btree**, int, int)’:
sqlite3.c:73349:24: error: invalid conversion from ‘void*’ to ‘Btree*’ [-fpermissive]
73349 |   p = sqlite3MallocZero(sizeof(Btree));
      |       ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c:73369:42: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
73369 |       char *zFullPathname = sqlite3Malloc(MAX(nFullPathname,nFilename));
      |                             ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                          |
      |                                          void*
sqlite3.c:73448:28: error: invalid conversion from ‘void*’ to ‘BtShared*’ [-fpermissive]
73448 |     pBt = sqlite3MallocZero( sizeof(*pBt) );
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      |                            |
      |                            void*
sqlite3.c: In function ‘int allocateTempSpace(BtShared*)’:
sqlite3.c:73649:37: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
73649 |   pBt->pTmpSpace = sqlite3PageMalloc( pBt->pageSize );
      |                    ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      |                                     |
      |                                     void*
sqlite3.c: In function ‘int accessPayload(BtCursor*, u32, u32, unsigned char*, int)’:
sqlite3.c:76032:43: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
76032 |             aPayload = sqlite3PagerGetData(pDbPage);
      |                        ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
      |                                           |
      |                                           void*
sqlite3.c: In function ‘int accessPayloadChecked(BtCursor*, u32, u32, void*)’:
sqlite3.c:76097:53: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
76097 |   return rc ? rc : accessPayload(pCur, offset, amt, pBuf, 0);
      |                                                     ^~~~
      |                                                     |
      |                                                     void*
sqlite3.c:75864:18: note:   initializing argument 4 of ‘int accessPayload(BtCursor*, u32, u32, unsigned char*, int)’
75864 |   unsigned char *pBuf, /* Write the bytes into this buffer */
      |   ~~~~~~~~~~~~~~~^~~~
sqlite3.c: In function ‘int sqlite3BtreePayloadChecked(BtCursor*, u32, u32, void*)’:
sqlite3.c:76102:45: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
76102 |     return accessPayload(pCur, offset, amt, pBuf, 0);
      |                                             ^~~~
      |                                             |
      |                                             void*
sqlite3.c:75864:18: note:   initializing argument 4 of ‘int accessPayload(BtCursor*, u32, u32, unsigned char*, int)’
75864 |   unsigned char *pBuf, /* Write the bytes into this buffer */
      |   ~~~~~~~~~~~~~~~^~~~
sqlite3.c: In function ‘int fillInCell(MemPage*, unsigned char*, const BtreePayload*, int*)’:
sqlite3.c:77803:16: error: invalid conversion from ‘const void*’ to ‘const u8*’ {aka ‘const unsigned char*’} [-fpermissive]
77803 |     pSrc = pX->pData;
      |            ~~~~^~~~~
      |                |
      |                const void*
sqlite3.c:77811:16: error: invalid conversion from ‘const void*’ to ‘const u8*’ {aka ‘const unsigned char*’} [-fpermissive]
77811 |     pSrc = pX->pKey;
      |            ~~~~^~~~
      |                |
      |                const void*
sqlite3.c: In function ‘int rebuildPage(CellArray*, int, int, MemPage*)’:
sqlite3.c:78359:35: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
78359 |   u8 *pTmp = sqlite3PagerTempSpace(pPg->pBt->pPager);
      |              ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
      |                                   |
      |                                   void*
sqlite3.c: In function ‘int balance_nonroot(MemPage*, int, u8*, int, int)’:
sqlite3.c:20984:56: error: invalid conversion from ‘void*’ to ‘u8**’ {aka ‘unsigned char**’} [-fpermissive]
20984 | # define sqlite3StackAllocRaw(D,N)   sqlite3DbMallocRaw(D,N)
      |                                      ~~~~~~~~~~~~~~~~~~^~~~~
      |                                                        |
      |                                                        void*
sqlite3.c:79096:14: note: in expansion of macro ‘sqlite3StackAllocRaw’
79096 |   b.apCell = sqlite3StackAllocRaw(0, szScratch );
      |              ^~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘int balance(BtCursor*)’:
sqlite3.c:79918:41: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
79918 |           u8 *pSpace = sqlite3PageMalloc(pCur->pBt->pageSize);
      |                        ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
      |                                         |
      |                                         void*
sqlite3.c: In function ‘int sqlite3BtreeIntegrityCheck(sqlite3*, Btree*, Pgno*, Mem*, int, int, int*, char**)’:
sqlite3.c:81877:36: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
81877 |   sCheck.aPgRef = sqlite3MallocZero((sCheck.nCkPage / 8)+ 1);
      |                   ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    void*
sqlite3.c: In function ‘int backupOnePage(sqlite3_backup*, Pgno, const u8*, int)’:
sqlite3.c:82534:42: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
82534 |       u8 *zDestData = sqlite3PagerGetData(pDestPg);
      |                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
      |                                          |
      |                                          void*
sqlite3.c: In function ‘int sqlite3_backup_step(sqlite3_backup*, int)’:
sqlite3.c:82671:60: error: invalid conversion from ‘void*’ to ‘const u8*’ {aka ‘const unsigned char*’} [-fpermissive]
82671 |           rc = backupOnePage(p, iSrcPg, sqlite3PagerGetData(pSrcPg), 0);
      |                                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~
      |                                                            |
      |                                                            void*
sqlite3.c:82504:13: note:   initializing argument 3 of ‘int backupOnePage(sqlite3_backup*, Pgno, const u8*, int)’
82504 |   const u8 *zSrcData,             /* Source database page data */
      |   ~~~~~~~~~~^~~~~~~~
sqlite3.c:82791:46: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
82791 |               u8 *zData = sqlite3PagerGetData(pSrcPg);
      |                           ~~~~~~~~~~~~~~~~~~~^~~~~~~~
      |                                              |
      |                                              void*
sqlite3.c: In function ‘int sqlite3VdbeMemGrow(Mem*, int, int)’:
sqlite3.c:83303:55: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
83303 |       pMem->z = pMem->zMalloc = sqlite3DbReallocOrFree(pMem->db, pMem->z, n);
      |                                 ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
      |                                                       |
      |                                                       void*
sqlite3.c:83305:37: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
83305 |       pMem->zMalloc = sqlite3Realloc(pMem->z, n);
      |                       ~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                     |
      |                                     void*
sqlite3.c:83312:39: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
83312 |     pMem->zMalloc = sqlite3DbMallocRaw(pMem->db, n);
      |                     ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
      |                                       |
      |                                       void*
sqlite3.c: In function ‘void sqlite3VdbeMemSetPointer(Mem*, void*, const char*, void (*)(void*))’:
sqlite3.c:84014:13: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
84014 |   pMem->z = pPtr;
      |             ^~~~
      |             |
      |             void*
sqlite3.c: In function ‘sqlite3_value* sqlite3ValueNew(sqlite3*)’:
sqlite3.c:84451:31: error: invalid conversion from ‘void*’ to ‘Mem*’ {aka ‘sqlite3_value*’} [-fpermissive]
84451 |   Mem *p = sqlite3DbMallocZero(db, sizeof(*p));
      |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      |                               |
      |                               void*
sqlite3.c: In function ‘int valueFromExpr(sqlite3*, const Expr*, u8, u8, sqlite3_value**, ValueNewStat4Ctx*)’:
sqlite3.c:84780:48: error: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]
84780 |     sqlite3VdbeMemSetStr(pVal, sqlite3HexToBlob(db, zVal, nVal), nVal/2,
      |                                ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
      |                                                |
      |                                                void*
sqlite3.c:84208:15: note:   initializing argument 2 of ‘int sqlite3VdbeMemSetStr(Mem*, const char*, i64, u8, void (*)(void*))’
84208 |   const char *z,      /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘void sqlite3ValueSetStr(sqlite3_value*, int, const void*, u8, void (*)(void*))’:
sqlite3.c:85063:42: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
85063 |   if( v ) sqlite3VdbeMemSetStr((Mem *)v, z, n, enc, xDel);
      |                                          ^
      |                                          |
      |                                          const void*
sqlite3.c:84208:15: note:   initializing argument 2 of ‘int sqlite3VdbeMemSetStr(Mem*, const char*, i64, u8, void (*)(void*))’
84208 |   const char *z,      /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘Vdbe* sqlite3VdbeCreate(Parse*)’:
sqlite3.c:85132:27: error: invalid conversion from ‘void*’ to ‘Vdbe*’ [-fpermissive]
85132 |   p = sqlite3DbMallocRawNN(db, sizeof(Vdbe) );
      |       ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
      |                           |
      |                           void*
sqlite3.c: In function ‘int growOpArray(Vdbe*, int)’:
sqlite3.c:85296:26: error: invalid conversion from ‘void*’ to ‘VdbeOp*’ [-fpermissive]
85296 |   pNew = sqlite3DbRealloc(p->db, v->aOp, nNew*sizeof(Op));
      |          ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                          |
      |                          void*
sqlite3.c: In function ‘int sqlite3VdbeAddFunctionCall(Parse*, int, int, int, int, const FuncDef*, int)’:
sqlite3.c:85557:30: error: invalid conversion from ‘void*’ to ‘sqlite3_context*’ [-fpermissive]
85557 |   pCtx = sqlite3DbMallocRawNN(pParse->db, nByte);
      |          ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
      |                              |
      |                              void*
sqlite3.c: In function ‘int sqlite3VdbeAddOp4Dup8(Vdbe*, int, int, int, int, const u8*, int)’:
sqlite3.c:85589:38: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
85589 |   char *p4copy = sqlite3DbMallocRawNN(sqlite3VdbeDb(p), 8);
      |                  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
      |                                      |
      |                                      void*
sqlite3.c: In function ‘void resizeResolveLabel(Parse*, Vdbe*, int)’:
sqlite3.c:85727:37: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
85727 |   p->aLabel = sqlite3DbReallocOrFree(p->db, p->aLabel,
      |               ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
      |                                     |
      |                                     void*
85728 |                      nNewSize*sizeof(p->aLabel[0]));
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘char* sqlite3VdbeDisplayP4(sqlite3*, Op*)’:
sqlite3.c:87072:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
87072 |         zP4 = "NULL";
      |               ^~~~~~
sqlite3.c:87075:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
87075 |         zP4 = "(blob)";
      |               ^~~~~~~~
sqlite3.c:87098:13: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
87098 |       zP4 = "program";
      |             ^~~~~~~~~
sqlite3.c: In function ‘void sqlite3VdbeMakeReady(Vdbe*, Parse*)’:
sqlite3.c:87808:23: error: invalid conversion from ‘void*’ to ‘Mem*’ {aka ‘sqlite3_value*’} [-fpermissive]
87808 |   p->aMem = allocSpace(&x, 0, nMem*sizeof(Mem));
      |             ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
      |                       |
      |                       void*
sqlite3.c:87809:23: error: invalid conversion from ‘void*’ to ‘Mem*’ {aka ‘sqlite3_value*’} [-fpermissive]
87809 |   p->aVar = allocSpace(&x, 0, nVar*sizeof(Mem));
      |             ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
      |                       |
      |                       void*
sqlite3.c:87810:24: error: invalid conversion from ‘void*’ to ‘Mem**’ {aka ‘sqlite3_value**’} [-fpermissive]
87810 |   p->apArg = allocSpace(&x, 0, nArg*sizeof(Mem*));
      |              ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c:87811:24: error: invalid conversion from ‘void*’ to ‘VdbeCursor**’ [-fpermissive]
87811 |   p->apCsr = allocSpace(&x, 0, nCursor*sizeof(VdbeCursor*));
      |              ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c:87813:25: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
87813 |     x.pSpace = p->pFree = sqlite3DbMallocRawNN(db, x.nNeeded);
      |                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                         |
      |                         void*
sqlite3.c:87816:27: error: invalid conversion from ‘void*’ to ‘Mem*’ {aka ‘sqlite3_value*’} [-fpermissive]
87816 |       p->aMem = allocSpace(&x, p->aMem, nMem*sizeof(Mem));
      |                 ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                           |
      |                           void*
sqlite3.c:87817:27: error: invalid conversion from ‘void*’ to ‘Mem*’ {aka ‘sqlite3_value*’} [-fpermissive]
87817 |       p->aVar = allocSpace(&x, p->aVar, nVar*sizeof(Mem));
      |                 ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                           |
      |                           void*
sqlite3.c:87818:28: error: invalid conversion from ‘void*’ to ‘Mem**’ {aka ‘sqlite3_value**’} [-fpermissive]
87818 |       p->apArg = allocSpace(&x, p->apArg, nArg*sizeof(Mem*));
      |                  ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                            |
      |                            void*
sqlite3.c:87819:28: error: invalid conversion from ‘void*’ to ‘VdbeCursor**’ [-fpermissive]
87819 |       p->apCsr = allocSpace(&x, p->apCsr, nCursor*sizeof(VdbeCursor*));
      |                  ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                            |
      |                            void*
sqlite3.c: In function ‘sqlite3_value* sqlite3_value_dup(const sqlite3_value*)’:
sqlite3.c:91007:24: error: invalid conversion from ‘void*’ to ‘sqlite3_value*’ [-fpermissive]
91007 |   pNew = sqlite3_malloc( sizeof(*pNew) );
      |          ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
sqlite3.c: In function ‘void sqlite3_result_blob(sqlite3_context*, const void*, int, void (*)(void*))’:
sqlite3.c:91108:29: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
91108 |   setResultStrOrError(pCtx, z, n, 0, xDel);
      |                             ^
      |                             |
      |                             const void*
sqlite3.c:91048:15: note:   initializing argument 2 of ‘void setResultStrOrError(sqlite3_context*, const char*, int, u8, void (*)(void*))’
91048 |   const char *z,          /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘void sqlite3_result_blob64(sqlite3_context*, const void*, sqlite3_uint64, void (*)(void*))’:
sqlite3.c:91127:31: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
91127 |     setResultStrOrError(pCtx, z, (int)n, 0, xDel);
      |                               ^
      |                               |
      |                               const void*
sqlite3.c:91048:15: note:   initializing argument 2 of ‘void setResultStrOrError(sqlite3_context*, const char*, int, u8, void (*)(void*))’
91048 |   const char *z,          /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘void sqlite3_result_error16(sqlite3_context*, const void*, int)’:
sqlite3.c:91152:36: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
91152 |   sqlite3VdbeMemSetStr(pCtx->pOut, z, n, SQLITE_UTF16NATIVE, SQLITE_TRANSIENT);
      |                                    ^
      |                                    |
      |                                    const void*
sqlite3.c:84208:15: note:   initializing argument 2 of ‘int sqlite3VdbeMemSetStr(Mem*, const char*, i64, u8, void (*)(void*))’
84208 |   const char *z,      /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘void sqlite3_result_text16(sqlite3_context*, const void*, int, void (*)(void*))’:
sqlite3.c:91266:29: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
91266 |   setResultStrOrError(pCtx, z, n & ~(u64)1, SQLITE_UTF16NATIVE, xDel);
      |                             ^
      |                             |
      |                             const void*
sqlite3.c:91048:15: note:   initializing argument 2 of ‘void setResultStrOrError(sqlite3_context*, const char*, int, u8, void (*)(void*))’
91048 |   const char *z,          /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘void sqlite3_result_text16be(sqlite3_context*, const void*, int, void (*)(void*))’:
sqlite3.c:91275:29: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
91275 |   setResultStrOrError(pCtx, z, n & ~(u64)1, SQLITE_UTF16BE, xDel);
      |                             ^
      |                             |
      |                             const void*
sqlite3.c:91048:15: note:   initializing argument 2 of ‘void setResultStrOrError(sqlite3_context*, const char*, int, u8, void (*)(void*))’
91048 |   const char *z,          /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘void sqlite3_result_text16le(sqlite3_context*, const void*, int, void (*)(void*))’:
sqlite3.c:91284:29: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
91284 |   setResultStrOrError(pCtx, z, n & ~(u64)1, SQLITE_UTF16LE, xDel);
      |                             ^
      |                             |
      |                             const void*
sqlite3.c:91048:15: note:   initializing argument 2 of ‘void setResultStrOrError(sqlite3_context*, const char*, int, u8, void (*)(void*))’
91048 |   const char *z,          /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘void sqlite3_set_auxdata(sqlite3_context*, int, void*, void (*)(void*))’:
sqlite3.c:91867:35: error: invalid conversion from ‘void*’ to ‘AuxData*’ [-fpermissive]
91867 |     pAuxData = sqlite3DbMallocZero(pVdbe->db, sizeof(AuxData));
      |                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                   |
      |                                   void*
sqlite3.c: In function ‘const char* sqlite3_column_name(sqlite3_stmt*, int)’:
sqlite3.c:92192:20: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
92192 |   return columnName(pStmt, N, 0, COLNAME_NAME);
      |          ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                    |
      |                    const void*
sqlite3.c: In function ‘const char* sqlite3_column_decltype(sqlite3_stmt*, int)’:
sqlite3.c:92215:20: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
92215 |   return columnName(pStmt, N, 0, COLNAME_DECLTYPE);
      |          ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                    |
      |                    const void*
sqlite3.c: In function ‘int bindText(sqlite3_stmt*, int, const void*, i64, void (*)(void*), u8)’:
sqlite3.c:92354:39: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
92354 |       rc = sqlite3VdbeMemSetStr(pVar, zData, nData, encoding, xDel);
      |                                       ^~~~~
      |                                       |
      |                                       const void*
sqlite3.c:84208:15: note:   initializing argument 2 of ‘int sqlite3VdbeMemSetStr(Mem*, const char*, i64, u8, void (*)(void*))’
84208 |   const char *z,      /* String pointer */
      |   ~~~~~~~~~~~~^
sqlite3.c: In function ‘VdbeCursor* allocateCursor(Vdbe*, int, int, u8)’:
sqlite3.c:93838:49: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
93838 |     pMem->z = pMem->zMalloc = sqlite3DbMallocRaw(pMem->db, nByte);
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
      |                                                 |
      |                                                 void*
sqlite3.c: In function ‘int vdbeColumnFromOverflow(VdbeCursor*, int, int, i64, u32, u32, Mem*)’:
sqlite3.c:94282:39: error: invalid conversion from ‘void*’ to ‘VdbeTxtBlbCache*’ [-fpermissive]
94282 |       pC->pCache = sqlite3DbMallocZero(db, sizeof(VdbeTxtBlbCache) );
      |                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                       |
      |                                       void*
sqlite3.c: In function ‘int sqlite3VdbeExec(Vdbe*)’:
sqlite3.c:94840:30: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
94840 |       zErr = sqlite3ValueText(&aMem[pOp->p3], SQLITE_UTF8);
      |              ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                              |
      |                              const void*
sqlite3.c:96537:42: error: invalid conversion from ‘const void*’ to ‘const u8*’ {aka ‘const unsigned char*’} [-fpermissive]
96537 |       pC->aRow = sqlite3BtreePayloadFetch(pCrsr, &pC->szRow);
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
      |                                          |
      |                                          const void*
sqlite3.c:97339:34: error: invalid conversion from ‘void*’ to ‘Savepoint*’ [-fpermissive]
97339 |       pNew = sqlite3DbMallocRawNN(db, sizeof(Savepoint)+nName+1);
      |              ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                  |
      |                                  void*
sqlite3.c:98034:23: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
98034 |     aMem[pOp->p3].z = "";
      |                       ^~
sqlite3.c:100916:33: error: invalid conversion from ‘void*’ to ‘VdbeFrame*’ [-fpermissive]
100916 |     pFrame = sqlite3DbMallocZero(db, nByte);
       |              ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
       |                                 |
       |                                 void*
sqlite3.c:101243:30: error: invalid conversion from ‘void*’ to ‘sqlite3_context*’ [-fpermissive]
101243 |   pCtx = sqlite3DbMallocRawNN(db, nAlloc + sizeof(Mem));
       |          ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c:101839:26: error: invalid conversion from ‘void*’ to ‘ValueList*’ [-fpermissive]
101839 |   pRhs = sqlite3_malloc64( sizeof(*pRhs) );
       |          ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c: In function ‘int vdbePmaReadBlob(PmaReader*, int, u8**)’:
sqlite3.c:103827:28: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
103827 |       aNew = sqlite3Realloc(p->aAlloc, nNew);
       |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
sqlite3.c: In function ‘int vdbeSorterListToPMA(SortSubtask*, SorterList*)’:
sqlite3.c:103741:19: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
103741 | #define SRVAL(p) ((void*)((SorterRecord*)(p) + 1))
       |                  ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                   |
       |                   void*
sqlite3.c:104878:33: note: in expansion of macro ‘SRVAL’
104878 |       vdbePmaWriteBlob(&writer, SRVAL(p), p->nVal);
       |                                 ^~~~~
sqlite3.c:104761:48: note:   initializing argument 2 of ‘void vdbePmaWriteBlob(PmaWriter*, u8*, int)’
104761 | static void vdbePmaWriteBlob(PmaWriter *p, u8 *pData, int nData){
       |                                            ~~~~^~~~~
sqlite3.c: In function ‘int vdbeSorterFlushPMA(VdbeSorter*)’:
sqlite3.c:105038:46: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
105038 |         pSorter->list.aMemory = sqlite3Malloc(pSorter->nMemory);
       |                                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
       |                                              |
       |                                              void*
sqlite3.c: In function ‘int sqlite3VdbeSorterWrite(const VdbeCursor*, Mem*)’:
sqlite3.c:105131:28: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
105131 |       aNew = sqlite3Realloc(pSorter->list.aMemory, nNew);
       |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
sqlite3.c: In function ‘int memjrnlRead(sqlite3_file*, void*, int, sqlite_int64)’:
sqlite3.c:106597:14: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
106597 |   u8 *zOut = zBuf;
       |              ^~~~
       |              |
       |              void*
sqlite3.c: In function ‘int memjrnlWrite(sqlite3_file*, const void*, int, sqlite_int64)’:
sqlite3.c:106734:43: error: invalid conversion from ‘void*’ to ‘FileChunk*’ [-fpermissive]
106734 |           FileChunk *pNew = sqlite3_malloc(fileChunkSize(p->nChunkSize));
       |                             ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                           |
       |                                           void*
sqlite3.c: In function ‘int sqlite3WalkExprList(Walker*, ExprList*)’:
sqlite3.c:107057:30: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
107057 |     for(i=p->nExpr, pItem=p->a; i>0; i--, pItem++){
       |                           ~~~^
       |                              |
       |                              ExprList::ExprList_item [1]
sqlite3.c:107057:43: error: cannot increment a pointer to incomplete type ‘ExprList_item’
107057 |     for(i=p->nExpr, pItem=p->a; i>0; i--, pItem++){
       |                                           ^~~~~
sqlite3.c:107058:41: error: invalid use of incomplete type ‘struct ExprList_item’
107058 |       if( sqlite3WalkExpr(pWalker, pItem->pExpr) ) return WRC_Abort;
       |                                         ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int sqlite3MatchEName(const ExprList_item*, const char*, const char*, const char*, int*)’:
sqlite3.c:107345:21: error: invalid use of incomplete type ‘const struct ExprList_item’
107345 |   int eEName = pItem->fg.eEName;
       |                     ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:107350:16: error: invalid use of incomplete type ‘const struct ExprList_item’
107350 |   zSpan = pItem->zEName;
       |                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int lookupName(Parse*, const char*, const char*, const Expr*, NameContext*, Expr*)’:
sqlite3.c:107582:36: error: cannot convert ‘ExprList::ExprList_item*’ to ‘const ExprList_item*’
107582 |             if( !sqlite3MatchEName(&pEList->a[j], zCol, zTab, zDb, &bRowid) ){
       |                                    ^~~~~~~~~~~~~
       |                                    |
       |                                    ExprList::ExprList_item*
sqlite3.c:107337:31: note:   initializing argument 1 of ‘int sqlite3MatchEName(const ExprList_item*, const char*, const char*, const char*, int*)’
107337 |   const struct ExprList_item *pItem,
       |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
sqlite3.c:107995:27: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
107995 |         pExpr->u.zToken = "coalesce";
       |                           ^~~~~~~~~~
sqlite3.c: In function ‘int resolveCompoundOrderBy(Parse*, Select*)’:
sqlite3.c:108836:30: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
108836 |     for(i=0, pItem=pOrderBy->a; i<pOrderBy->nExpr; i++, pItem++){
       |                    ~~~~~~~~~~^
       |                              |
       |                              ExprList::ExprList_item [1]
sqlite3.c:108836:57: error: cannot increment a pointer to incomplete type ‘ExprList_item’
108836 |     for(i=0, pItem=pOrderBy->a; i<pOrderBy->nExpr; i++, pItem++){
       |                                                         ^~~~~
sqlite3.c:108839:16: error: invalid use of incomplete type ‘struct ExprList_item’
108839 |       if( pItem->fg.done ) continue;
       |                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108840:49: error: invalid use of incomplete type ‘struct ExprList_item’
108840 |       pE = sqlite3ExprSkipCollateAndLikely(pItem->pExpr);
       |                                                 ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108880:20: error: invalid use of incomplete type ‘struct ExprList_item’
108880 |           if( pItem->pExpr==pE ){
       |                    ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108881:18: error: invalid use of incomplete type ‘struct ExprList_item’
108881 |             pItem->pExpr = pNew;
       |                  ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108883:34: error: invalid use of incomplete type ‘struct ExprList_item’
108883 |             Expr *pParent = pItem->pExpr;
       |                                  ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108890:16: error: invalid use of incomplete type ‘struct ExprList_item’
108890 |           pItem->u.x.iOrderByCol = (u16)iCol;
       |                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108892:14: error: invalid use of incomplete type ‘struct ExprList_item’
108892 |         pItem->fg.done = 1;
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int sqlite3ResolveOrderGroupBy(Parse*, Select*, ExprList*, const char*)’:
sqlite3.c:108937:28: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
108937 |   for(i=0, pItem=pOrderBy->a; i<pOrderBy->nExpr; i++, pItem++){
       |                  ~~~~~~~~~~^
       |                            |
       |                            ExprList::ExprList_item [1]
sqlite3.c:108937:55: error: cannot increment a pointer to incomplete type ‘ExprList_item’
108937 |   for(i=0, pItem=pOrderBy->a; i<pOrderBy->nExpr; i++, pItem++){
       |                                                       ^~~~~
sqlite3.c:108938:14: error: invalid use of incomplete type ‘struct ExprList_item’
108938 |     if( pItem->u.x.iOrderByCol ){
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108939:16: error: invalid use of incomplete type ‘struct ExprList_item’
108939 |       if( pItem->u.x.iOrderByCol>pEList->nExpr ){
       |                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108943:41: error: invalid use of incomplete type ‘struct ExprList_item’
108943 |       resolveAlias(pParse, pEList, pItem->u.x.iOrderByCol-1, pItem->pExpr,0);
       |                                         ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:108943:67: error: invalid use of incomplete type ‘struct ExprList_item’
108943 |       resolveAlias(pParse, pEList, pItem->u.x.iOrderByCol-1, pItem->pExpr,0);
       |                                                                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int resolveOrderGroupBy(NameContext*, Select*, ExprList*, const char*)’:
sqlite3.c:109012:28: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
109012 |   for(i=0, pItem=pOrderBy->a; i<pOrderBy->nExpr; i++, pItem++){
       |                  ~~~~~~~~~~^
       |                            |
       |                            ExprList::ExprList_item [1]
sqlite3.c:109012:55: error: cannot increment a pointer to incomplete type ‘ExprList_item’
109012 |   for(i=0, pItem=pOrderBy->a; i<pOrderBy->nExpr; i++, pItem++){
       |                                                       ^~~~~
sqlite3.c:109013:21: error: invalid use of incomplete type ‘struct ExprList_item’
109013 |     Expr *pE = pItem->pExpr;
       |                     ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:109023:14: error: invalid use of incomplete type ‘struct ExprList_item’
109023 |         pItem->u.x.iOrderByCol = (u16)iCol;
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:109035:12: error: invalid use of incomplete type ‘struct ExprList_item’
109035 |       pItem->u.x.iOrderByCol = (u16)iCol;
       |            ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:109040:10: error: invalid use of incomplete type ‘struct ExprList_item’
109040 |     pItem->u.x.iOrderByCol = 0;
       |          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:109050:14: error: invalid use of incomplete type ‘struct ExprList_item’
109050 |         pItem->u.x.iOrderByCol = j+1;
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int resolveSelectStep(Walker*, Select*)’:
sqlite3.c:109283:32: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
109283 |       for(i=0, pItem=pGroupBy->a; i<pGroupBy->nExpr; i++, pItem++){
       |                      ~~~~~~~~~~^
       |                                |
       |                                ExprList::ExprList_item [1]
sqlite3.c:109283:59: error: cannot increment a pointer to incomplete type ‘ExprList_item’
109283 |       for(i=0, pItem=pGroupBy->a; i<pGroupBy->nExpr; i++, pItem++){
       |                                                           ^~~~~
sqlite3.c:109284:34: error: invalid use of incomplete type ‘struct ExprList_item’
109284 |         if( ExprHasProperty(pItem->pExpr, EP_Agg) ){
       |                                  ^~
sqlite3.c:19393:37: note: in definition of macro ‘ExprHasProperty’
19393 | #define ExprHasProperty(E,P)     (((E)->flags&(P))!=0)
      |                                     ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int codeCompare(Parse*, Expr*, Expr*, int, int, int, int, int, int)’:
sqlite3.c:110013:28: error: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]
110013 |                            (void*)p4, P4_COLLSEQ);
       |                            ^~~~~~~~~
       |                            |
       |                            void*
sqlite3.c:85524:15: note:   initializing argument 6 of ‘int sqlite3VdbeAddOp4(Vdbe*, int, int, int, int, const char*, int)’
85524 |   const char *zP4,    /* The P4 operand */
      |   ~~~~~~~~~~~~^~~
sqlite3.c: In function ‘Expr* sqlite3ExprAlloc(sqlite3*, int, const Token*, int)’:
sqlite3.c:110477:30: error: invalid conversion from ‘void*’ to ‘Expr*’ [-fpermissive]
110477 |   pNew = sqlite3DbMallocRawNN(db, sizeof(Expr)+nExtra);
       |          ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c: In function ‘Expr* sqlite3PExpr(Parse*, int, Expr*, Expr*)’:
sqlite3.c:110572:27: error: invalid conversion from ‘void*’ to ‘Expr*’ [-fpermissive]
110572 |   p = sqlite3DbMallocRawNN(pParse->db, sizeof(Expr));
       |       ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                           |
       |                           void*
sqlite3.c: In function ‘Expr* exprDup(sqlite3*, const Expr*, int, EdupBuf*)’:
sqlite3.c:111158:43: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
111158 |     sEdupBuf.zAlloc = sqlite3DbMallocRawNN(db, nAlloc);
       |                       ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                                           |
       |                                           void*
sqlite3.c: In function ‘With* sqlite3WithDup(sqlite3*, With*)’:
sqlite3.c:111274:31: error: invalid conversion from ‘void*’ to ‘With*’ [-fpermissive]
111274 |     pRet = sqlite3DbMallocZero(db, nByte);
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘ExprList* sqlite3ExprListDup(sqlite3*, const ExprList*, int)’:
sqlite3.c:111355:30: error: invalid conversion from ‘void*’ to ‘ExprList*’ [-fpermissive]
111355 |   pNew = sqlite3DbMallocRawNN(db, sqlite3DbMallocSize(db, p));
       |          ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c:111359:17: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
111359 |   pItem = pNew->a;
       |           ~~~~~~^
       |                 |
       |                 ExprList::ExprList_item [1]
sqlite3.c:111360:17: error: cannot convert ‘const ExprList::ExprList_item [1]’ to ‘const ExprList_item*’ in assignment
111360 |   pOldItem = p->a;
       |              ~~~^
       |                 |
       |                 const ExprList::ExprList_item [1]
sqlite3.c:111361:29: error: cannot increment a pointer to incomplete type ‘ExprList_item’
111361 |   for(i=0; i<p->nExpr; i++, pItem++, pOldItem++){
       |                             ^~~~~
sqlite3.c:111361:38: error: cannot increment a pointer to incomplete type ‘const ExprList_item’
111361 |   for(i=0; i<p->nExpr; i++, pItem++, pOldItem++){
       |                                      ^~~~~~~~
sqlite3.c:111362:30: error: invalid use of incomplete type ‘const struct ExprList_item’
111362 |     Expr *pOldExpr = pOldItem->pExpr;
       |                              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111364:10: error: invalid use of incomplete type ‘struct ExprList_item’
111364 |     pItem->pExpr = sqlite3ExprDup(db, pOldExpr, flags);
       |          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111367:26: error: invalid use of incomplete type ‘struct ExprList_item’
111367 |      && (pNewExpr = pItem->pExpr)!=0
       |                          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111382:10: error: invalid use of incomplete type ‘struct ExprList_item’
111382 |     pItem->zEName = sqlite3DbStrDup(db, pOldItem->zEName);
       |          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111382:49: error: invalid use of incomplete type ‘const struct ExprList_item’
111382 |     pItem->zEName = sqlite3DbStrDup(db, pOldItem->zEName);
       |                                                 ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111383:10: error: invalid use of incomplete type ‘struct ExprList_item’
111383 |     pItem->fg = pOldItem->fg;
       |          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111383:25: error: invalid use of incomplete type ‘const struct ExprList_item’
111383 |     pItem->fg = pOldItem->fg;
       |                         ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111384:10: error: invalid use of incomplete type ‘struct ExprList_item’
111384 |     pItem->fg.done = 0;
       |          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111385:10: error: invalid use of incomplete type ‘struct ExprList_item’
111385 |     pItem->u = pOldItem->u;
       |          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111385:24: error: invalid use of incomplete type ‘const struct ExprList_item’
111385 |     pItem->u = pOldItem->u;
       |                        ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘SrcList* sqlite3SrcListDup(sqlite3*, const SrcList*, int)’:
sqlite3.c:111405:30: error: invalid conversion from ‘void*’ to ‘SrcList*’ [-fpermissive]
111405 |   pNew = sqlite3DbMallocRawNN(db, nByte );
       |          ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c:111414:46: error: invalid conversion from ‘void*’ to ‘Subquery*’ [-fpermissive]
111414 |       Subquery *pNewSubq = sqlite3DbMallocRaw(db, sizeof(Subquery));
       |                            ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
       |                                              |
       |                                              void*
sqlite3.c: In function ‘IdList* sqlite3IdListDup(sqlite3*, const IdList*)’:
sqlite3.c:111467:30: error: invalid conversion from ‘void*’ to ‘IdList*’ [-fpermissive]
111467 |   pNew = sqlite3DbMallocRawNN(db, sizeof(*pNew)+(p->nId-1)*sizeof(p->a[0]) );
       |          ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c:111471:36: error: cannot convert ‘IdList::IdList_item*’ to ‘sqlite3IdListDup(sqlite3*, const IdList*)::IdList_item*’ in initialization
111471 |     struct IdList_item *pNewItem = &pNew->a[i];
       |                                    ^~~~~~~~~~~
       |                                    |
       |                                    IdList::IdList_item*
sqlite3.c:111472:42: error: cannot convert ‘const IdList::IdList_item*’ to ‘const sqlite3IdListDup(sqlite3*, const IdList*)::IdList_item*’ in initialization
111472 |     const struct IdList_item *pOldItem = &p->a[i];
       |                                          ^~~~~~~~
       |                                          |
       |                                          const IdList::IdList_item*
sqlite3.c:111473:13: error: invalid use of incomplete type ‘struct sqlite3IdListDup(sqlite3*, const IdList*)::IdList_item’
111473 |     pNewItem->zName = sqlite3DbStrDup(db, pOldItem->zName);
       |             ^~
sqlite3.c:111471:12: note: forward declaration of ‘struct sqlite3IdListDup(sqlite3*, const IdList*)::IdList_item’
111471 |     struct IdList_item *pNewItem = &pNew->a[i];
       |            ^~~~~~~~~~~
sqlite3.c:111473:51: error: invalid use of incomplete type ‘const struct sqlite3IdListDup(sqlite3*, const IdList*)::IdList_item’
111473 |     pNewItem->zName = sqlite3DbStrDup(db, pOldItem->zName);
       |                                                   ^~
sqlite3.c:111471:12: note: forward declaration of ‘struct sqlite3IdListDup(sqlite3*, const IdList*)::IdList_item’
111471 |     struct IdList_item *pNewItem = &pNew->a[i];
       |            ^~~~~~~~~~~
sqlite3.c: In function ‘Select* sqlite3SelectDup(sqlite3*, const Select*, int)’:
sqlite3.c:111485:40: error: invalid conversion from ‘void*’ to ‘Select*’ [-fpermissive]
111485 |     Select *pNew = sqlite3DbMallocRawNN(db, sizeof(*p) );
       |                    ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
       |                                        |
       |                                        void*
sqlite3.c: At global scope:
sqlite3.c:111543:35: error: variable ‘const ExprList_item zeroItem’ has initializer but incomplete type
111543 | static const struct ExprList_item zeroItem = {0};
       |                                   ^~~~~~~~
sqlite3.c: In function ‘ExprList* sqlite3ExprListAppendNew(sqlite3*, Expr*)’:
sqlite3.c:111551:31: error: invalid conversion from ‘void*’ to ‘ExprList*’ [-fpermissive]
111551 |   pList = sqlite3DbMallocRawNN(db, sizeof(ExprList)+sizeof(pList->a[0])*4 );
       |           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c:111558:11: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in assignment
111558 |   pItem = &pList->a[0];
       |           ^~~~~~~~~~~~
       |           |
       |           ExprList::ExprList_item*
sqlite3.c:111560:8: error: invalid use of incomplete type ‘struct ExprList_item’
111560 |   pItem->pExpr = pExpr;
       |        ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘ExprList* sqlite3ExprListAppendGrow(sqlite3*, ExprList*, Expr*)’:
sqlite3.c:111571:26: error: invalid conversion from ‘void*’ to ‘ExprList*’ [-fpermissive]
111571 |   pNew = sqlite3DbRealloc(db, pList,
       |          ~~~~~~~~~~~~~~~~^~~~~~~~~~~
       |                          |
       |                          void*
111572 |        sizeof(*pList)+(pList->nAlloc-1)*sizeof(pList->a[0]));
       |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:111580:11: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in assignment
111580 |   pItem = &pList->a[pList->nExpr++];
       |           ^~~~~~~~~~~~~~~~~~~~~~~~~
       |           |
       |           ExprList::ExprList_item*
sqlite3.c:111582:8: error: invalid use of incomplete type ‘struct ExprList_item’
111582 |   pItem->pExpr = pExpr;
       |        ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘ExprList* sqlite3ExprListAppend(Parse*, ExprList*, Expr*)’:
sqlite3.c:111597:11: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in assignment
111597 |   pItem = &pList->a[pList->nExpr++];
       |           ^~~~~~~~~~~~~~~~~~~~~~~~~
       |           |
       |           ExprList::ExprList_item*
sqlite3.c:111599:8: error: invalid use of incomplete type ‘struct ExprList_item’
111599 |   pItem->pExpr = pExpr;
       |        ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3ExprListSetSortOrder(ExprList*, int, int)’:
sqlite3.c:111691:11: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in assignment
111691 |   pItem = &p->a[p->nExpr-1];
       |           ^~~~~~~~~~~~~~~~~
       |           |
       |           ExprList::ExprList_item*
sqlite3.c:111696:8: error: invalid use of incomplete type ‘struct ExprList_item’
111696 |   pItem->fg.sortFlags = (u8)iSortOrder;
       |        ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111699:10: error: invalid use of incomplete type ‘struct ExprList_item’
111699 |     pItem->fg.bNulls = 1;
       |          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111701:12: error: invalid use of incomplete type ‘struct ExprList_item’
111701 |       pItem->fg.sortFlags |= KEYINFO_ORDER_BIGNULL;
       |            ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3ExprListSetName(Parse*, ExprList*, const Token*, int)’:
sqlite3.c:111725:13: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in assignment
111725 |     pItem = &pList->a[pList->nExpr-1];
       |             ^~~~~~~~~~~~~~~~~~~~~~~~~
       |             |
       |             ExprList::ExprList_item*
sqlite3.c:111728:10: error: invalid use of incomplete type ‘struct ExprList_item’
111728 |     pItem->zEName = sqlite3DbStrNDup(pParse->db, pName->z, pName->n);
       |          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111733:27: error: invalid use of incomplete type ‘struct ExprList_item’
111733 |       sqlite3Dequote(pItem->zEName);
       |                           ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111735:57: error: invalid use of incomplete type ‘struct ExprList_item’
111735 |         sqlite3RenameTokenMap(pParse, (const void*)pItem->zEName, pName);
       |                                                         ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3ExprListSetSpan(Parse*, ExprList*, const char*, const char*)’:
sqlite3.c:111758:35: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
111758 |     struct ExprList_item *pItem = &pList->a[pList->nExpr-1];
       |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   ExprList::ExprList_item*
sqlite3.c:111760:14: error: invalid use of incomplete type ‘struct ExprList_item’
111760 |     if( pItem->zEName==0 ){
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111761:12: error: invalid use of incomplete type ‘struct ExprList_item’
111761 |       pItem->zEName = sqlite3DbSpanDup(db, zStart, zEnd);
       |            ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111762:12: error: invalid use of incomplete type ‘struct ExprList_item’
111762 |       pItem->fg.eEName = ENAME_SPAN;
       |            ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘void exprListDeleteNN(sqlite3*, ExprList*)’:
sqlite3.c:111789:41: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
111789 |   struct ExprList_item *pItem =  pList->a;
       |                                  ~~~~~~~^
       |                                         |
       |                                         ExprList::ExprList_item*
sqlite3.c:111793:32: error: invalid use of incomplete type ‘struct ExprList_item’
111793 |     sqlite3ExprDelete(db, pItem->pExpr);
       |                                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111794:14: error: invalid use of incomplete type ‘struct ExprList_item’
111794 |     if( pItem->zEName ) sqlite3DbNNFreeNN(db, pItem->zEName);
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111794:52: error: invalid use of incomplete type ‘struct ExprList_item’
111794 |     if( pItem->zEName ) sqlite3DbNNFreeNN(db, pItem->zEName);
       |                                                    ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:111795:5: error: cannot increment a pointer to incomplete type ‘ExprList_item’
111795 |     pItem++;
       |     ^~~~~
sqlite3.c: In function ‘char* exprINAffinity(Parse*, const Expr*)’:
sqlite3.c:112911:28: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
112911 |   zRet = sqlite3DbMallocRaw(pParse->db, nVal+1);
       |          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
sqlite3.c: In function ‘void sqlite3CodeRhsOfIN(Parse*, Expr*, int)’:
sqlite3.c:113067:34: error: invalid conversion from ‘void*’ to ‘SubrtnSig*’ [-fpermissive]
113067 |       pSig = sqlite3DbMallocRawNN(pParse->db, sizeof(pSig[0]));
       |              ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                  |
       |                                  void*
sqlite3.c:113220:38: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
113220 |     for(i=pList->nExpr, pItem=pList->a; i>0; i--, pItem++){
       |                               ~~~~~~~^
       |                                      |
       |                                      ExprList::ExprList_item [1]
sqlite3.c:113220:51: error: cannot increment a pointer to incomplete type ‘ExprList_item’
113220 |     for(i=pList->nExpr, pItem=pList->a; i>0; i--, pItem++){
       |                                                   ^~~~~
sqlite3.c:113221:24: error: invalid use of incomplete type ‘struct ExprList_item’
113221 |       Expr *pE2 = pItem->pExpr;
       |                        ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:113245:34: error: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]
113245 |     sqlite3VdbeChangeP4(v, addr, (void *)pKeyInfo, P4_KEYINFO);
       |                                  ^~~~~~~~~~~~~~~~
       |                                  |
       |                                  void*
sqlite3.c:86665:72: note:   initializing argument 3 of ‘void sqlite3VdbeChangeP4(Vdbe*, int, const char*, int)’
86665 | SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){
      |                                                            ~~~~~~~~~~~~^~~
sqlite3.c: In function ‘void sqlite3ExprCodeIN(Parse*, Expr*, int, int)’:
sqlite3.c:113561:27: error: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]
113561 |                           (void*)pColl, P4_COLLSEQ);
       |                           ^~~~~~~~~~~~
       |                           |
       |                           void*
sqlite3.c:85524:15: note:   initializing argument 6 of ‘int sqlite3VdbeAddOp4(Vdbe*, int, int, int, int, const char*, int)’
85524 |   const char *zP4,    /* The P4 operand */
      |   ~~~~~~~~~~~~^~~
sqlite3.c:113571:27: error: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]
113571 |                           (void*)pColl, P4_COLLSEQ);
       |                           ^~~~~~~~~~~~
       |                           |
       |                           void*
sqlite3.c:85524:15: note:   initializing argument 6 of ‘int sqlite3VdbeAddOp4(Vdbe*, int, int, int, int, const char*, int)’
85524 |   const char *zP4,    /* The P4 operand */
      |   ~~~~~~~~~~~~^~~
sqlite3.c:113675:23: error: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]
113675 |                       (void*)pColl, P4_COLLSEQ);
       |                       ^~~~~~~~~~~~
       |                       |
       |                       void*
sqlite3.c:85524:15: note:   initializing argument 6 of ‘int sqlite3VdbeAddOp4(Vdbe*, int, int, int, int, const char*, int)’
85524 |   const char *zP4,    /* The P4 operand */
      |   ~~~~~~~~~~~~^~~
sqlite3.c: In function ‘int sqlite3ExprCodeTarget(Parse*, Expr*, int)’:
sqlite3.c:114303:14: error: cannot convert ‘AggInfo::AggInfo_col*’ to ‘sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col*’ in assignment
114303 |       pCol = &pAggInfo->aCol[pExpr->iAgg];
       |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |              |
       |              AggInfo::AggInfo_col*
sqlite3.c:114307:27: error: invalid use of incomplete type ‘struct sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col’
114307 |         Table *pTab = pCol->pTab;
       |                           ^~
sqlite3.c:114288:14: note: forward declaration of ‘struct sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col’
114288 |       struct AggInfo_col *pCol;
       |              ^~~~~~~~~~~
sqlite3.c:114309:35: error: invalid use of incomplete type ‘struct sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col’
114309 |                               pCol->iSorterColumn, target);
       |                                   ^~
sqlite3.c:114288:14: note: forward declaration of ‘struct sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col’
114288 |       struct AggInfo_col *pCol;
       |              ^~~~~~~~~~~
sqlite3.c:114312:23: error: invalid use of incomplete type ‘struct sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col’
114312 |         }else if( pCol->iColumn<0 ){
       |                       ^~
sqlite3.c:114288:14: note: forward declaration of ‘struct sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col’
114288 |       struct AggInfo_col *pCol;
       |              ^~~~~~~~~~~
sqlite3.c:114317:30: error: invalid use of incomplete type ‘struct sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col’
114317 |           if( pTab->aCol[pCol->iColumn].affinity==SQLITE_AFF_REAL ){
       |                              ^~
sqlite3.c:114288:14: note: forward declaration of ‘struct sqlite3ExprCodeTarget(Parse*, Expr*, int)::AggInfo_col’
114288 |       struct AggInfo_col *pCol;
       |              ^~~~~~~~~~~
sqlite3.c:114458:31: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
114458 |       zBlob = sqlite3HexToBlob(sqlite3VdbeDb(v), z, n);
       |               ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c:114977:27: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
114977 |       aListelem = pEList->a;
       |                   ~~~~~~~~^
       |                           |
       |                           ExprList::ExprList_item [1]
sqlite3.c:115002:41: error: invalid use of incomplete type ‘struct ExprList_item’
115002 |           opCompare.pRight = aListelem[i].pExpr;
       |                                         ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115002:41: error: invalid use of incomplete type ‘struct ExprList_item’
115002 |           opCompare.pRight = aListelem[i].pExpr;
       |                              ~~~~~~~~~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115004:30: error: invalid use of incomplete type ‘struct ExprList_item’
115004 |           pTest = aListelem[i].pExpr;
       |                              ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115004:30: error: invalid use of incomplete type ‘struct ExprList_item’
115004 |           pTest = aListelem[i].pExpr;
       |                   ~~~~~~~~~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115010:46: error: invalid use of incomplete type ‘struct ExprList_item’
115010 |         sqlite3ExprCode(pParse, aListelem[i+1].pExpr, target);
       |                                              ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
cc1plus: error: invalid use of incomplete type ‘struct ExprList_item’
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
sqlite3.c:115010:46: error: invalid use of incomplete type ‘struct ExprList_item’
115010 |         sqlite3ExprCode(pParse, aListelem[i+1].pExpr, target);
       |                                 ~~~~~~~~~~~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int sqlite3ExprCodeRunJustOnce(Parse*, Expr*, int)’:
sqlite3.c:115087:18: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
115087 |     for(pItem=p->a, i=p->nExpr; i>0; pItem++, i--){
       |               ~~~^
       |                  |
       |                  ExprList::ExprList_item [1]
sqlite3.c:115087:38: error: cannot increment a pointer to incomplete type ‘ExprList_item’
115087 |     for(pItem=p->a, i=p->nExpr; i>0; pItem++, i--){
       |                                      ^~~~~
sqlite3.c:115088:16: error: invalid use of incomplete type ‘struct ExprList_item’
115088 |       if( pItem->fg.reusable
       |                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115089:37: error: invalid use of incomplete type ‘struct ExprList_item’
115089 |        && sqlite3ExprCompare(0,pItem->pExpr,pExpr,-1)==0
       |                                     ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115091:21: error: invalid use of incomplete type ‘struct ExprList_item’
115091 |         return pItem->u.iConstExprReg;
       |                     ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115112:38: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
115112 |        struct ExprList_item *pItem = &p->a[p->nExpr-1];
       |                                      ^~~~~~~~~~~~~~~~~
       |                                      |
       |                                      ExprList::ExprList_item*
sqlite3.c:115113:13: error: invalid use of incomplete type ‘struct ExprList_item’
115113 |        pItem->fg.reusable = regDest<0;
       |             ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115115:13: error: invalid use of incomplete type ‘struct ExprList_item’
115115 |        pItem->u.iConstExprReg = regDest;
       |             ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int sqlite3ExprCodeExprList(Parse*, ExprList*, int, int, u8)’:
sqlite3.c:115248:20: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
115248 |   for(pItem=pList->a, i=0; i<n; i++, pItem++){
       |             ~~~~~~~^
       |                    |
       |                    ExprList::ExprList_item [1]
sqlite3.c:115248:38: error: cannot increment a pointer to incomplete type ‘ExprList_item’
115248 |   for(pItem=pList->a, i=0; i<n; i++, pItem++){
       |                                      ^~~~~
sqlite3.c:115249:24: error: invalid use of incomplete type ‘struct ExprList_item’
115249 |     Expr *pExpr = pItem->pExpr;
       |                        ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:115256:51: error: invalid use of incomplete type ‘struct ExprList_item’
115256 |     if( (flags & SQLITE_ECEL_REF)!=0 && (j = pItem->u.x.iOrderByCol)>0 ){
       |                                                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int selectRefEnter(Walker*, Select*)’:
sqlite3.c:116347:27: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
116347 |   piNew = sqlite3DbRealloc(p->db, p->aiExclude, p->nExclude*sizeof(int));
       |           ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                           |
       |                           void*
sqlite3.c: In function ‘int addAggInfoColumn(sqlite3*, AggInfo*)’:
sqlite3.c:116510:37: error: invalid conversion from ‘void*’ to ‘AggInfo::AggInfo_col*’ [-fpermissive]
116510 |   pInfo->aCol = sqlite3ArrayAllocate(
       |                 ~~~~~~~~~~~~~~~~~~~~^
       |                                     |
       |                                     void*
116511 |        db,
       |        ~~~                           
116512 |        pInfo->aCol,
       |        ~~~~~~~~~~~~                  
116513 |        sizeof(pInfo->aCol[0]),
       |        ~~~~~~~~~~~~~~~~~~~~~~~       
116514 |        &pInfo->nColumn,
       |        ~~~~~~~~~~~~~~~~              
116515 |        &i
       |        ~~                            
116516 |   );
       |   ~                                  
sqlite3.c: In function ‘int addAggInfoFunc(sqlite3*, AggInfo*)’:
sqlite3.c:116526:38: error: invalid conversion from ‘void*’ to ‘AggInfo::AggInfo_func*’ [-fpermissive]
116526 |   pInfo->aFunc = sqlite3ArrayAllocate(
       |                  ~~~~~~~~~~~~~~~~~~~~^
       |                                      |
       |                                      void*
116527 |        db,
       |        ~~~                            
116528 |        pInfo->aFunc,
       |        ~~~~~~~~~~~~~                  
116529 |        sizeof(pInfo->aFunc[0]),
       |        ~~~~~~~~~~~~~~~~~~~~~~~~       
116530 |        &pInfo->nFunc,
       |        ~~~~~~~~~~~~~~                 
116531 |        &i
       |        ~~                             
116532 |   );
       |   ~                                   
sqlite3.c: In function ‘void findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)’:
sqlite3.c:116552:20: error: cannot convert ‘AggInfo::AggInfo_col*’ to ‘findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col*’ in assignment
116552 |   pCol = pAggInfo->aCol;
       |          ~~~~~~~~~~^~~~
       |                    |
       |                    AggInfo::AggInfo_col*
sqlite3.c:116553:38: error: cannot increment a pointer to incomplete type ‘findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116553 |   for(k=0; k<pAggInfo->nColumn; k++, pCol++){
       |                                      ^~~~
sqlite3.c:116554:13: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116554 |     if( pCol->pCExpr==pExpr ) return;
       |             ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116555:13: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116555 |     if( pCol->iTable==pExpr->iTable
       |             ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116556:13: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116556 |      && pCol->iColumn==pExpr->iColumn
       |             ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116568:10: error: cannot convert ‘AggInfo::AggInfo_col*’ to ‘findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col*’ in assignment
116568 |   pCol = &pAggInfo->aCol[k];
       |          ^~~~~~~~~~~~~~~~~~
       |          |
       |          AggInfo::AggInfo_col*
sqlite3.c:116570:7: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116570 |   pCol->pTab = pExpr->y.pTab;
       |       ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116571:7: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116571 |   pCol->iTable = pExpr->iTable;
       |       ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116572:7: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116572 |   pCol->iColumn = pExpr->iColumn;
       |       ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116573:7: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116573 |   pCol->iSorterColumn = -1;
       |       ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116574:7: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116574 |   pCol->pCExpr = pExpr;
       |       ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116578:40: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
116578 |     struct ExprList_item *pTerm = pGB->a;
       |                                   ~~~~~^
       |                                        |
       |                                        ExprList::ExprList_item*
sqlite3.c:116580:24: error: cannot increment a pointer to incomplete type ‘ExprList_item’
116580 |     for(j=0; j<n; j++, pTerm++){
       |                        ^~~~~
sqlite3.c:116581:23: error: invalid use of incomplete type ‘struct ExprList_item’
116581 |       Expr *pE = pTerm->pExpr;
       |                       ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:116586:13: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116586 |         pCol->iSorterColumn = j;
       |             ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116591:11: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116591 |   if( pCol->iSorterColumn<0 ){
       |           ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:116592:9: error: invalid use of incomplete type ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116592 |     pCol->iSorterColumn = pAggInfo->nSortingColumn++;
       |         ^~
sqlite3.c:116548:10: note: forward declaration of ‘struct findOrCreateAggInfoColumn(Parse*, AggInfo*, Expr*)::AggInfo_col’
116548 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c: In function ‘int analyzeAggregate(Walker*, Expr*)’:
sqlite3.c:116684:48: error: cannot convert ‘AggInfo::AggInfo_func*’ to ‘analyzeAggregate(Walker*, Expr*)::AggInfo_func*’ in initialization
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                                      ~~~~~~~~~~^~~~~
       |                                                |
       |                                                AggInfo::AggInfo_func*
sqlite3.c:116685:42: error: cannot increment a pointer to incomplete type ‘analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116685 |         for(i=0; i<pAggInfo->nFunc; i++, pItem++){
       |                                          ^~~~~
sqlite3.c:116686:26: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116686 |           if( NEVER(pItem->pFExpr==pExpr) ) break;
       |                          ^~
sqlite3.c:14596:26: note: in definition of macro ‘NEVER’
14596 | # define NEVER(X)       (X)
      |                          ^
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116687:42: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116687 |           if( sqlite3ExprCompare(0, pItem->pFExpr, pExpr, -1)==0 ){
       |                                          ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116699:21: error: cannot convert ‘AggInfo::AggInfo_func*’ to ‘analyzeAggregate(Walker*, Expr*)::AggInfo_func*’ in assignment
116699 |             pItem = &pAggInfo->aFunc[i];
       |                     ^~~~~~~~~~~~~~~~~~~
       |                     |
       |                     AggInfo::AggInfo_func*
sqlite3.c:116700:18: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116700 |             pItem->pFExpr = pExpr;
       |                  ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116703:18: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116703 |             pItem->pFunc = sqlite3FindFunction(pParse->db,
       |                  ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116707:23: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116707 |              && (pItem->pFunc->funcFlags & SQLITE_FUNC_NEEDCOLL)==0
       |                       ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116715:20: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116715 |               pItem->iOBTab = pParse->nTab++;
       |                    ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116724:22: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116724 |                 pItem->bOBPayload = 0;
       |                      ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116725:22: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116725 |                 pItem->bOBUnique = ExprHasProperty(pExpr, EP_Distinct);
       |                      ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116727:22: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116727 |                 pItem->bOBPayload = 1;
       |                      ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116729:20: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116729 |               pItem->bUseSubtype =
       |                    ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116730:27: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116730 |                     (pItem->pFunc->funcFlags & SQLITE_SUBTYPE)!=0;
       |                           ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116732:20: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116732 |               pItem->iOBTab = -1;
       |                    ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116734:62: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116734 |             if( ExprHasProperty(pExpr, EP_Distinct) && !pItem->bOBUnique ){
       |                                                              ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116735:20: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116735 |               pItem->iDistinct = pParse->nTab++;
       |                    ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c:116737:20: error: invalid use of incomplete type ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116737 |               pItem->iDistinct = -1;
       |                    ^~
sqlite3.c:116684:16: note: forward declaration of ‘struct analyzeAggregate(Walker*, Expr*)::AggInfo_func’
116684 |         struct AggInfo_func *pItem = pAggInfo->aFunc;
       |                ^~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3ExprAnalyzeAggList(NameContext*, ExprList*)’:
sqlite3.c:116787:22: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
116787 |     for(pItem=pList->a, i=0; i<pList->nExpr; i++, pItem++){
       |               ~~~~~~~^
       |                      |
       |                      ExprList::ExprList_item [1]
sqlite3.c:116787:51: error: cannot increment a pointer to incomplete type ‘ExprList_item’
116787 |     for(pItem=pList->a, i=0; i<pList->nExpr; i++, pItem++){
       |                                                   ^~~~~
sqlite3.c:116788:46: error: invalid use of incomplete type ‘struct ExprList_item’
116788 |       sqlite3ExprAnalyzeAggregates(pNC, pItem->pExpr);
       |                                              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘const void* sqlite3RenameTokenMap(Parse*, const void*, const Token*)’:
sqlite3.c:117705:31: error: invalid conversion from ‘void*’ to ‘RenameToken*’ [-fpermissive]
117705 |     pNew = sqlite3DbMallocZero(pParse->db, sizeof(RenameToken));
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘int renameEditSql(sqlite3_context*, RenameCtx*, const char*, const char*, int)’:
sqlite3.c:118138:31: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
118138 |     zOut = sqlite3DbMallocZero(db, nSql + pRename->nList*nQuot + 1);
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘void statInit(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:119676:26: error: invalid conversion from ‘void*’ to ‘StatAccum*’ [-fpermissive]
119676 |   p = sqlite3DbMallocZero(db, n);
       |       ~~~~~~~~~~~~~~~~~~~^~~~~~~
       |                          |
       |                          void*
sqlite3.c: In function ‘void analyzeOneTable(Parse*, Table*, Index*, int, int, int)’:
sqlite3.c:120406:39: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
120406 |       aGotoChng = sqlite3DbMallocRawNN(db, sizeof(int)*nColTest);
       |                   ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                       |
       |                                       void*
sqlite3.c: In function ‘int sqlite3AnalysisLoad(sqlite3*, int)’:
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:121205:19: note: in expansion of macro ‘sqliteHashData’
121205 |     Table *pTab = sqliteHashData(i);
       |                   ^~~~~~~~~~~~~~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Index*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:121209:19: note: in expansion of macro ‘sqliteHashData’
121209 |     Index *pIdx = sqliteHashData(i);
       |                   ^~~~~~~~~~~~~~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Index*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:121236:19: note: in expansion of macro ‘sqliteHashData’
121236 |     Index *pIdx = sqliteHashData(i);
       |                   ^~~~~~~~~~~~~~
sqlite3.c: In function ‘void attachFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:121419:34: error: invalid conversion from ‘void*’ to ‘Db*’ [-fpermissive]
121419 |       aNew = sqlite3DbMallocRawNN(db, sizeof(db->aDb[0])*3 );
       |              ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                  |
       |                                  void*
sqlite3.c:121423:30: error: invalid conversion from ‘void*’ to ‘Db*’ [-fpermissive]
121423 |       aNew = sqlite3DbRealloc(db, db->aDb, sizeof(db->aDb[0])*(db->nDb+1) );
       |              ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c: In function ‘void lockTable(Parse*, int, Pgno, u8, const char*)’:
sqlite3.c:122218:29: error: invalid conversion from ‘void*’ to ‘TableLock*’ [-fpermissive]
122218 |       sqlite3DbReallocOrFree(pToplevel->db, pToplevel->aTableLock, nBytes);
       |       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘Table* sqlite3FindTable(sqlite3*, const char*, const char*)’:
sqlite3.c:122496:24: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
122496 |     p = sqlite3HashFind(&db->aDb[i].pSchema->tblHash, zName);
       |         ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                        |
       |                        void*
sqlite3.c:122503:30: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
122503 |           p = sqlite3HashFind(&db->aDb[1].pSchema->tblHash,
       |               ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
122504 |                               LEGACY_TEMP_SCHEMA_TABLE);
       |                               ~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:122508:30: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
122508 |           p = sqlite3HashFind(&db->aDb[i].pSchema->tblHash,
       |               ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
122509 |                               LEGACY_SCHEMA_TABLE);
       |                               ~~~~~~~~~~~~~~~~~~~~
sqlite3.c:122515:24: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
122515 |     p = sqlite3HashFind(&db->aDb[1].pSchema->tblHash, zName);
       |         ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                        |
       |                        void*
sqlite3.c:122518:24: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
122518 |     p = sqlite3HashFind(&db->aDb[0].pSchema->tblHash, zName);
       |         ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                        |
       |                        void*
sqlite3.c:122523:26: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
122523 |       p = sqlite3HashFind(&db->aDb[i].pSchema->tblHash, zName);
       |           ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c:122528:28: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
122528 |         p = sqlite3HashFind(&db->aDb[0].pSchema->tblHash, LEGACY_SCHEMA_TABLE);
       |             ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
sqlite3.c:122530:28: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
122530 |         p = sqlite3HashFind(&db->aDb[1].pSchema->tblHash,
       |             ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
122531 |                             LEGACY_TEMP_SCHEMA_TABLE);
       |                             ~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘Index* sqlite3FindIndex(sqlite3*, const char*, const char*)’:
sqlite3.c:122666:24: error: invalid conversion from ‘void*’ to ‘Index*’ [-fpermissive]
122666 |     p = sqlite3HashFind(&pSchema->idxHash, zName);
       |         ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                        |
       |                        void*
sqlite3.c: In function ‘void sqlite3UnlinkAndDeleteIndex(sqlite3*, int, const char*)’:
sqlite3.c:122701:29: error: invalid conversion from ‘void*’ to ‘Index*’ [-fpermissive]
122701 |   pIndex = sqlite3HashInsert(pHash, zIdxName, 0);
       |            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘void sqlite3ColumnSetColl(sqlite3*, Column*, const char*)’:
sqlite3.c:122863:26: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
122863 |   zNew = sqlite3DbRealloc(db, pCol->zCnName, nColl+n);
       |          ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c: In function ‘void sqlite3UnlinkAndDeleteTable(sqlite3*, int, const char*)’:
sqlite3.c:123012:24: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
123012 |   p = sqlite3HashInsert(&pDb->pSchema->tblHash, zTabName, 0);
       |       ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                        |
       |                        void*
sqlite3.c: In function ‘void sqlite3StartTable(Parse*, Token*, Token*, int, int, int, int)’:
sqlite3.c:123423:31: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
123423 |   pTable = sqlite3DbMallocZero(db, sizeof(Table));
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘void sqlite3AddReturning(Parse*, ExprList*)’:
sqlite3.c:123568:29: error: invalid conversion from ‘void*’ to ‘Returning*’ [-fpermissive]
123568 |   pRet = sqlite3DbMallocZero(db, sizeof(*pRet));
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘void sqlite3AddColumn(Parse*, Token, Token)’:
sqlite3.c:123663:25: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
123663 |   z = sqlite3DbMallocRaw(db, (i64)sName.n + 1 + (i64)sType.n + (sType.n>0) );
       |       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                         |
       |                         void*
sqlite3.c:123677:26: error: invalid conversion from ‘void*’ to ‘Column*’ [-fpermissive]
123677 |   aNew = sqlite3DbRealloc(db,p->aCol,((i64)p->nCol+1)*sizeof(p->aCol[0]));
       |          ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c: In function ‘char* createTableStmt(sqlite3*, Table*)’:
sqlite3.c:124242:12: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124242 |     zSep = "";
       |            ^~
sqlite3.c:124243:13: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124243 |     zSep2 = ",";
       |             ^~~
sqlite3.c:124244:12: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124244 |     zEnd = ")";
       |            ^~~
sqlite3.c:124246:12: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124246 |     zSep = "\n  ";
       |            ^~~~~~
sqlite3.c:124247:13: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124247 |     zSep2 = ",\n  ";
       |             ^~~~~~~
sqlite3.c:124248:12: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124248 |     zEnd = "\n)";
       |            ^~~~~
sqlite3.c:124251:29: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
124251 |   zStmt = sqlite3DbMallocRaw(0, n);
       |           ~~~~~~~~~~~~~~~~~~^~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘int resizeIndexObject(sqlite3*, Index*, int)’:
sqlite3.c:124308:31: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
124308 |   zExtra = sqlite3DbMallocZero(db, nByte);
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘void sqlite3MarkAllShadowTablesOf(sqlite3*, Table*)’:
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:124658:21: note: in expansion of macro ‘sqliteHashData’
124658 |     Table *pOther = sqliteHashData(k);
       |                     ^~~~~~~~~~~~~~
sqlite3.c: In function ‘int sqlite3ShadowTableName(sqlite3*, const char*)’:
sqlite3.c:124683:18: error: invalid conversion from ‘const char*’ to ‘char*’ [-fpermissive]
124683 |   zTail = strrchr(zName, '_');
       |           ~~~~~~~^~~~~~~~~~~~
       |                  |
       |                  const char*
sqlite3.c: In function ‘void sqlite3EndTable(Parse*, Token*, Token*, u32, Select*)’:
sqlite3.c:124800:62: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124800 |             p->zName, pCol->zCnName, sqlite3ColumnType(pCol, "")
       |                                                              ^~
sqlite3.c:124917:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124917 |       zType = "table";
       |               ^~~~~~~
sqlite3.c:124918:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124918 |       zType2 = "TABLE";
       |                ^~~~~~~
sqlite3.c:124922:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124922 |       zType = "view";
       |               ^~~~~~
sqlite3.c:124923:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
124923 |       zType2 = "VIEW";
       |                ^~~~~~
sqlite3.c:125056:29: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
125056 |     pOld = sqlite3HashInsert(&pSchema->tblHash, p->zName, p);
       |            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘void sqliteViewResetAll(sqlite3*, int)’:
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:125327:19: note: in expansion of macro ‘sqliteHashData’
125327 |     Table *pTab = sqliteHashData(i);
       |                   ^~~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3RootPageMoved(sqlite3*, int, Pgno, Pgno)’:
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:125365:19: note: in expansion of macro ‘sqliteHashData’
125365 |     Table *pTab = sqliteHashData(pElem);
       |                   ^~~~~~~~~~~~~~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Index*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:125372:19: note: in expansion of macro ‘sqliteHashData’
125372 |     Index *pIdx = sqliteHashData(pElem);
       |                   ^~~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3CreateForeignKey(Parse*, ExprList*, Token*, ExprList*, int)’:
sqlite3.c:125761:30: error: invalid conversion from ‘void*’ to ‘FKey*’ [-fpermissive]
125761 |   pFKey = sqlite3DbMallocZero(db, nByte );
       |           ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c: In function ‘Index* sqlite3AllocateIndexObject(sqlite3*, i16, int, char**)’:
sqlite3.c:125993:26: error: invalid conversion from ‘void*’ to ‘Index*’ [-fpermissive]
125993 |   p = sqlite3DbMallocZero(db, nByte + nExtra);
       |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c: In function ‘void sqlite3CreateIndex(Parse*, Token*, Token*, SrcList*, ExprList*, int, Token*, Expr*, int, int, u8)’:
sqlite3.c:126306:22: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
126306 |   pListItem = pList->a;
       |               ~~~~~~~^
       |                      |
       |                      ExprList::ExprList_item [1]
sqlite3.c:126311:36: error: cannot increment a pointer to incomplete type ‘ExprList_item’
126311 |   for(i=0; i<pIndex->nKeyCol; i++, pListItem++){
       |                                    ^~~~~~~~~
sqlite3.c:126316:32: error: invalid use of incomplete type ‘struct ExprList_item’
126316 |     sqlite3StringToId(pListItem->pExpr);
       |                                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:126317:68: error: invalid use of incomplete type ‘struct ExprList_item’
126317 |     sqlite3ResolveSelfReference(pParse, pTab, NC_IdxExpr, pListItem->pExpr, 0);
       |                                                                    ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:126319:46: error: invalid use of incomplete type ‘struct ExprList_item’
126319 |     pCExpr = sqlite3ExprSkipCollate(pListItem->pExpr);
       |                                              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:126351:18: error: invalid use of incomplete type ‘struct ExprList_item’
126351 |     if( pListItem->pExpr->op==TK_COLLATE ){
       |                  ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:126354:24: error: invalid use of incomplete type ‘struct ExprList_item’
126354 |       zColl = pListItem->pExpr->u.zToken;
       |                        ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:126369:35: error: invalid use of incomplete type ‘struct ExprList_item’
126369 |     requestedSortOrder = pListItem->fg.sortFlags & sortOrderMask;
       |                                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:126499:28: error: invalid conversion from ‘void*’ to ‘Index*’ [-fpermissive]
126499 |       p = sqlite3HashInsert(&pIndex->pSchema->idxHash,
       |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
126500 |           pIndex->zName, pIndex);
       |           ~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘IdList* sqlite3IdListAppend(Parse*, IdList*, Token*)’:
sqlite3.c:126812:32: error: invalid conversion from ‘void*’ to ‘IdList*’ [-fpermissive]
126812 |     pList = sqlite3DbMallocZero(db, sizeof(IdList) );
       |             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c:126816:28: error: invalid conversion from ‘void*’ to ‘IdList*’ [-fpermissive]
126816 |     pNew = sqlite3DbRealloc(db, pList,
       |            ~~~~~~~~~~~~~~~~^~~~~~~~~~~
       |                            |
       |                            void*
126817 |                  sizeof(IdList) + pList->nId*sizeof(pList->a));
       |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘SrcList* sqlite3SrcListEnlarge(Parse*, SrcList*, int, int)’:
sqlite3.c:126916:28: error: invalid conversion from ‘void*’ to ‘SrcList*’ [-fpermissive]
126916 |     pNew = sqlite3DbRealloc(db, pSrc,
       |            ~~~~~~~~~~~~~~~~^~~~~~~~~~
       |                            |
       |                            void*
126917 |                sizeof(*pSrc) + (nAlloc-1)*sizeof(pSrc->a[0]) );
       |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘SrcList* sqlite3SrcListAppend(Parse*, SrcList*, Token*, Token*)’:
sqlite3.c:126992:33: error: invalid conversion from ‘void*’ to ‘SrcList*’ [-fpermissive]
126992 |     pList = sqlite3DbMallocRawNN(pParse->db, sizeof(SrcList) );
       |             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                 |
       |                                 void*
sqlite3.c: In function ‘int sqlite3SrcItemAttachSubquery(Parse*, SrcItem*, Select*, int)’:
sqlite3.c:127139:45: error: invalid conversion from ‘void*’ to ‘Subquery*’ [-fpermissive]
127139 |   p = pItem->u4.pSubq = sqlite3DbMallocRawNN(pParse->db, sizeof(Subquery));
       |                         ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                             |
       |                                             void*
sqlite3.c: In function ‘Cte* sqlite3CteNew(Parse*, Token*, ExprList*, Select*, u8)’:
sqlite3.c:127811:29: error: invalid conversion from ‘void*’ to ‘Cte*’ [-fpermissive]
127811 |   pNew = sqlite3DbMallocZero(db, sizeof(*pNew));
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘With* sqlite3WithAdd(Parse*, With*, Cte*)’:
sqlite3.c:127879:28: error: invalid conversion from ‘void*’ to ‘With*’ [-fpermissive]
127879 |     pNew = sqlite3DbRealloc(db, pWith, nByte);
       |            ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
sqlite3.c:127881:31: error: invalid conversion from ‘void*’ to ‘With*’ [-fpermissive]
127881 |     pNew = sqlite3DbMallocZero(db, sizeof(*pWith));
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘void callCollNeeded(sqlite3*, int, const char*)’:
sqlite3.c:127950:33: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
127950 |     zExternal = sqlite3ValueText(pTmp, SQLITE_UTF16NATIVE);
       |                 ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                 |
       |                                 const void*
sqlite3.c: In function ‘CollSeq* findCollSeqEntry(sqlite3*, const char*, int)’:
sqlite3.c:128027:26: error: invalid conversion from ‘void*’ to ‘CollSeq*’ [-fpermissive]
128027 |   pColl = sqlite3HashFind(&db->aCollSeq, zName);
       |           ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c:128031:32: error: invalid conversion from ‘void*’ to ‘CollSeq*’ [-fpermissive]
128031 |     pColl = sqlite3DbMallocZero(db, 3*sizeof(*pColl) + nName);
       |             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c:128041:31: error: invalid conversion from ‘void*’ to ‘CollSeq*’ [-fpermissive]
128041 |       pDel = sqlite3HashInsert(&db->aCollSeq, pColl[0].zName, pColl);
       |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘FuncDef* sqlite3FindFunction(sqlite3*, const char*, int, u8, u8)’:
sqlite3.c:128377:35: error: invalid conversion from ‘void*’ to ‘FuncDef*’ [-fpermissive]
128377 |       (pBest = sqlite3DbMallocZero(db, sizeof(*pBest)+nName+1))!=0 ){
       |                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   void*
sqlite3.c: In function ‘void sqlite3SchemaClear(void*)’:
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:128427:19: note: in expansion of macro ‘sqliteHashData’
128427 |     Table *pTab = sqliteHashData(pElem);
       |                   ^~~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3DeleteFrom(Parse*, SrcList*, Expr*, ExprList*, Expr*)’:
sqlite3.c:129023:37: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
129023 |       aToOpen = sqlite3DbMallocRawNN(db, nIdx+2);
       |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                                     |
       |                                     void*
sqlite3.c: In function ‘void instrFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:129763:37: error: invalid conversion from ‘const void*’ to ‘const unsigned char*’ [-fpermissive]
129763 |       zHaystack = sqlite3_value_blob(argv[0]);
       |                   ~~~~~~~~~~~~~~~~~~^~~~~~~~~
       |                                     |
       |                                     const void*
sqlite3.c:129764:35: error: invalid conversion from ‘const void*’ to ‘const unsigned char*’ [-fpermissive]
129764 |       zNeedle = sqlite3_value_blob(argv[1]);
       |                 ~~~~~~~~~~~~~~~~~~^~~~~~~~~
       |                                   |
       |                                   const void*
sqlite3.c: In function ‘void substrFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:129864:27: error: invalid conversion from ‘const void*’ to ‘const unsigned char*’ [-fpermissive]
129864 |     z = sqlite3_value_blob(argv[0]);
       |         ~~~~~~~~~~~~~~~~~~^~~~~~~~~
       |                           |
       |                           const void*
sqlite3.c: In function ‘void* contextMalloc(sqlite3_context*, i64)’:
sqlite3.c:129990:22: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
129990 |     z = sqlite3Malloc(nByte);
       |         ~~~~~~~~~~~~~^~~~~~~
       |                      |
       |                      void*
sqlite3.c: In function ‘void upperFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:130011:23: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
130011 |     z1 = contextMalloc(context, ((i64)n)+1);
       |          ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
       |                       |
       |                       void*
sqlite3.c: In function ‘void lowerFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:130030:23: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
130030 |     z1 = contextMalloc(context, ((i64)n)+1);
       |          ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
       |                       |
       |                       void*
sqlite3.c: In function ‘void randomBlob(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:130092:20: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
130092 |   p = contextMalloc(context, n);
       |       ~~~~~~~~~~~~~^~~~~~~~~~~~
       |                    |
       |                    void*
sqlite3.c: In function ‘void likeFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:130413:48: error: invalid conversion from ‘void*’ to ‘compareInfo*’ [-fpermissive]
130413 |   struct compareInfo *pInfo = sqlite3_user_data(context);
       |                               ~~~~~~~~~~~~~~~~~^~~~~~~~~
       |                                                |
       |                                                void*
sqlite3.c: In function ‘void sqlite3QuoteValue(StrAccum*, sqlite3_value*)’:
sqlite3.c:130617:45: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
130617 |       char const *zBlob = sqlite3_value_blob(pValue);
       |                           ~~~~~~~~~~~~~~~~~~^~~~~~~~
       |                                             |
       |                                             const void*
sqlite3.c: In function ‘void charFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:130700:30: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
130700 |   zOut = z = sqlite3_malloc64( argc*4+1 );
       |              ~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c: In function ‘void hexFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:130745:29: error: invalid conversion from ‘const void*’ to ‘const unsigned char*’ [-fpermissive]
130745 |   pBlob = sqlite3_value_blob(argv[0]);
       |           ~~~~~~~~~~~~~~~~~~^~~~~~~~~
       |                             |
       |                             const void*
sqlite3.c:130748:27: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
130748 |   z = zHex = contextMalloc(context, ((i64)n)*2 + 1);
       |              ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
       |                           |
       |                           void*
sqlite3.c: In function ‘void unhexFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:130819:28: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
130819 |   p = pBlob = contextMalloc(pCtx, (nHex/2)+1);
       |               ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
sqlite3.c: In function ‘void replaceFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:130920:23: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
130920 |   zOut = contextMalloc(context, (i64)nOut);
       |          ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                       |
       |                       void*
sqlite3.c:130945:32: error: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
130945 |           zOut = sqlite3Realloc(zOut, (int)nOut + (nOut - nStr - 1));
       |                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void trimFunc(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:131006:29: error: invalid conversion from ‘void*’ to ‘unsigned char**’ [-fpermissive]
131006 |       azChar = contextMalloc(context,
       |                ~~~~~~~~~~~~~^~~~~~~~~
       |                             |
       |                             void*
131007 |                      ((i64)nChar)*(sizeof(char*)+sizeof(unsigned)));
       |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘void concatFuncCore(sqlite3_context*, int, sqlite3_value**, int, const char*)’:
sqlite3.c:131071:23: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
131071 |   z = sqlite3_malloc64(n+1);
       |       ~~~~~~~~~~~~~~~~^~~~~
       |                       |
       |                       void*
sqlite3.c: In function ‘void sumStep(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:131324:32: error: invalid conversion from ‘void*’ to ‘SumCtx*’ [-fpermissive]
131324 |   p = sqlite3_aggregate_context(context, sizeof(*p));
       |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void sumInverse(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:131360:32: error: invalid conversion from ‘void*’ to ‘SumCtx*’ [-fpermissive]
131360 |   p = sqlite3_aggregate_context(context, sizeof(*p));
       |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void sumFinalize(sqlite3_context*)’:
sqlite3.c:131390:32: error: invalid conversion from ‘void*’ to ‘SumCtx*’ [-fpermissive]
131390 |   p = sqlite3_aggregate_context(context, 0);
       |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void avgFinalize(sqlite3_context*)’:
sqlite3.c:131407:32: error: invalid conversion from ‘void*’ to ‘SumCtx*’ [-fpermissive]
131407 |   p = sqlite3_aggregate_context(context, 0);
       |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void totalFinalize(sqlite3_context*)’:
sqlite3.c:131422:32: error: invalid conversion from ‘void*’ to ‘SumCtx*’ [-fpermissive]
131422 |   p = sqlite3_aggregate_context(context, 0);
       |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void countStep(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:131451:32: error: invalid conversion from ‘void*’ to ‘CountCtx*’ [-fpermissive]
131451 |   p = sqlite3_aggregate_context(context, sizeof(*p));
       |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void countFinalize(sqlite3_context*)’:
sqlite3.c:131467:32: error: invalid conversion from ‘void*’ to ‘CountCtx*’ [-fpermissive]
131467 |   p = sqlite3_aggregate_context(context, 0);
       |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void countInverse(sqlite3_context*, int, sqlite3_value**)’:
sqlite3.c:131473:32: error: invalid conversion from ‘void*’ to ‘CountCtx*’ [-fpermissive]
131473 |   p = sqlite3_aggregate_context(ctx, sizeof(*p));
       |       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void sqlite3FkClearTriggerCache(sqlite3*, int)’:
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:133048:19: note: in expansion of macro ‘sqliteHashData’
133048 |     Table *pTab = sqliteHashData(k);
       |                   ^~~~~~~~~~~~~~
sqlite3.c: In function ‘int autoIncBegin(Parse*, int, Table*)’:
sqlite3.c:134263:35: error: invalid conversion from ‘void*’ to ‘AutoincInfo*’ [-fpermissive]
134263 |       pInfo = sqlite3DbMallocRawNN(pParse->db, sizeof(*pInfo));
       |               ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   void*
sqlite3.c: In function ‘void sqlite3Insert(Parse*, SrcList*, Select*, IdList*, int, Upsert*)’:
sqlite3.c:134902:37: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
134902 |     aTabColMap = sqlite3DbMallocZero(db, pTab->nCol*sizeof(int));
       |                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                     |
       |                                     void*
sqlite3.c:135107:35: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
135107 |     aRegIdx = sqlite3DbMallocRawNN(db, sizeof(int)*(nIdx+2));
       |               ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   void*
sqlite3.c: In function ‘void sqlite3GenerateConstraintChecks(Parse*, Table*, int*, int, int, int, int, u8, u8, int, int*, int*, Upsert*)’:
sqlite3.c:135995:47: error: invalid conversion from ‘void*’ to ‘IndexListTerm*’ [-fpermissive]
135995 |       sIdxIter.u.ax.aIdx = sqlite3DbMallocZero(db, nByte);
       |                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
       |                                               |
       |                                               void*
sqlite3.c:136484:40: error: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]
136484 |               zP4 = x.p4type==P4_INT32 ? SQLITE_INT_TO_PTR(x.p4.i) : x.p4.z;
       |                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                        |
       |                                        void*
sqlite3.c: In function ‘int sqlite3_exec(sqlite3*, const char*, sqlite3_callback, void*, char**)’:
sqlite3.c:137301:38: error: invalid conversion from ‘void*’ to ‘char**’ [-fpermissive]
137301 |           azCols = sqlite3DbMallocRaw(db, (2*nCol+1)*sizeof(const char*));
       |                    ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                      |
       |                                      void*
sqlite3.c: In function ‘int sqlite3LoadExtension(sqlite3*, const char*, const char*, char**)’:
sqlite3.c:138725:33: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
138725 |     zAltEntry = sqlite3_malloc64(ncFile+30);
       |                 ~~~~~~~~~~~~~~~~^~~~~~~~~~~
       |                                 |
       |                                 void*
sqlite3.c:138746:45: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
138746 |       *pzErrMsg = zErrmsg = sqlite3_malloc64(nMsg);
       |                             ~~~~~~~~~~~~~~~~^~~~~~
       |                                             |
       |                                             void*
sqlite3.c:138771:32: error: invalid conversion from ‘void*’ to ‘void**’ [-fpermissive]
138771 |   aHandle = sqlite3DbMallocZero(db, sizeof(handle)*(db->nExtension+1));
       |             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c:138787:43: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
138787 |     *pzErrMsg = zErrmsg = sqlite3_malloc64(nMsg);
       |                           ~~~~~~~~~~~~~~~~^~~~~~
       |                                           |
       |                                           void*
sqlite3.c: In function ‘int sqlite3_auto_extension(void (*)())’:
sqlite3.c:138903:31: error: invalid conversion from ‘void*’ to ‘void (**)()’ [-fpermissive]
138903 |       aNew = sqlite3_realloc64(wsdAutoext.aExt, nByte);
       |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘const char* sqlite3JournalModename(int)’:
sqlite3.c:139972:5: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
139972 |     "delete", "persist", "off", "truncate", "memory"
       |     ^~~~~~~~
sqlite3.c:139972:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
139972 |     "delete", "persist", "off", "truncate", "memory"
       |               ^~~~~~~~~
sqlite3.c:139972:26: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
139972 |     "delete", "persist", "off", "truncate", "memory"
       |                          ^~~~~
sqlite3.c:139972:33: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
139972 |     "delete", "persist", "off", "truncate", "memory"
       |                                 ^~~~~~~~~~
sqlite3.c:139972:45: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
139972 |     "delete", "persist", "off", "truncate", "memory"
       |                                             ^~~~~~~~
sqlite3.c:139974:8: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
139974 |      , "wal"
       |        ^~~~~
sqlite3.c: In function ‘void sqlite3Pragma(Parse*, Token*, Token*, Token*, int)’:
sqlite3.c:140914:39: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
140914 |                sqlite3ColumnType(pCol,""),
       |                                       ^~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:140958:18: note: in expansion of macro ‘sqliteHashData’
140958 |           pTab = sqliteHashData(k);
       |                  ^~~~~~~~~~~~~~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:140979:23: note: in expansion of macro ‘sqliteHashData’
140979 |         Table *pTab = sqliteHashData(k);
       |                       ^~~~~~~~~~~~~~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:141414:23: note: in expansion of macro ‘sqliteHashData’
141414 |         Table *pTab = sqliteHashData(x);  /* Current table */
       |                       ^~~~~~~~~~~~~~
sqlite3.c:141423:35: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
141423 |       aRoot = sqlite3DbMallocRawNN(db, sizeof(int)*(cnt+1));
       |               ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   void*
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:141428:23: note: in expansion of macro ‘sqliteHashData’
141428 |         Table *pTab = sqliteHashData(x);
       |                       ^~~~~~~~~~~~~~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:141459:23: note: in expansion of macro ‘sqliteHashData’
141459 |         Table *pTab = sqliteHashData(x);
       |                       ^~~~~~~~~~~~~~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:141487:23: note: in expansion of macro ‘sqliteHashData’
141487 |         Table *pTab = sqliteHashData(x);
       |                       ^~~~~~~~~~~~~~
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:141818:23: note: in expansion of macro ‘sqliteHashData’
141818 |         Table *pTab = sqliteHashData(x);
       |                       ^~~~~~~~~~~~~~
sqlite3.c:141862:23: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141862 |         aOp[2].p4.z = "ok";
       |                       ^~~~
sqlite3.c:141900:9: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141900 |       { "UTF8",     SQLITE_UTF8        },
       |         ^~~~~~
sqlite3.c:141901:9: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141901 |       { "UTF-8",    SQLITE_UTF8        },  /* Must be element [1] */
       |         ^~~~~~~
sqlite3.c:141902:9: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141902 |       { "UTF-16le", SQLITE_UTF16LE     },  /* Must be element [2] */
       |         ^~~~~~~~~~
sqlite3.c:141903:9: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141903 |       { "UTF-16be", SQLITE_UTF16BE     },  /* Must be element [3] */
       |         ^~~~~~~~~~
sqlite3.c:141904:9: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141904 |       { "UTF16le",  SQLITE_UTF16LE     },
       |         ^~~~~~~~~
sqlite3.c:141905:9: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141905 |       { "UTF16be",  SQLITE_UTF16BE     },
       |         ^~~~~~~~~
sqlite3.c:141906:9: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141906 |       { "UTF-16",   0                  }, /* SQLITE_UTF16NATIVE */
       |         ^~~~~~~~
sqlite3.c:141907:9: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
141907 |       { "UTF16",    0                  }, /* SQLITE_UTF16NATIVE */
       |         ^~~~~~~
sqlite3.c: In function ‘int pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)’:
sqlite3.c:142546:27: error: cannot convert ‘sqlite3_index_info::sqlite3_index_constraint*’ to ‘const pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint*’ in assignment
142546 |   pConstraint = pIdxInfo->aConstraint;
       |                 ~~~~~~~~~~^~~~~~~~~~~
       |                           |
       |                           sqlite3_index_info::sqlite3_index_constraint*
sqlite3.c:142549:42: error: cannot increment a pointer to incomplete type ‘const pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142549 |   for(i=0; i<pIdxInfo->nConstraint; i++, pConstraint++){
       |                                          ^~~~~~~~~~~
sqlite3.c:142550:20: error: invalid use of incomplete type ‘const struct pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142550 |     if( pConstraint->iColumn < pTab->iHidden ) continue;
       |                    ^~
sqlite3.c:142540:16: note: forward declaration of ‘struct pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142540 |   const struct sqlite3_index_constraint *pConstraint;
       |                ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:142551:20: error: invalid use of incomplete type ‘const struct pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142551 |     if( pConstraint->op!=SQLITE_INDEX_CONSTRAINT_EQ ) continue;
       |                    ^~
sqlite3.c:142540:16: note: forward declaration of ‘struct pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142540 |   const struct sqlite3_index_constraint *pConstraint;
       |                ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:142552:20: error: invalid use of incomplete type ‘const struct pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142552 |     if( pConstraint->usable==0 ) return SQLITE_CONSTRAINT;
       |                    ^~
sqlite3.c:142540:16: note: forward declaration of ‘struct pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142540 |   const struct sqlite3_index_constraint *pConstraint;
       |                ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:142553:20: error: invalid use of incomplete type ‘const struct pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142553 |     j = pConstraint->iColumn - pTab->iHidden;
       |                    ^~
sqlite3.c:142540:16: note: forward declaration of ‘struct pragmaVtabBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
142540 |   const struct sqlite3_index_constraint *pConstraint;
       |                ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘void* sqlite3ParserAddCleanup(Parse*, void (*)(sqlite3*, void*), void*)’:
sqlite3.c:143390:34: error: invalid conversion from ‘void*’ to ‘ParseCleanup*’ [-fpermissive]
143390 |     pCleanup = sqlite3DbMallocRaw(pParse->db, sizeof(*pCleanup));
       |                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                  |
       |                                  void*
sqlite3.c: In function ‘Select* sqlite3SelectNew(Parse*, ExprList*, SrcList*, Expr*, ExprList*, Expr*, ExprList*, u32, Expr*)’:
sqlite3.c:143988:43: error: invalid conversion from ‘void*’ to ‘Select*’ [-fpermissive]
143988 |   pAllocated = pNew = sqlite3DbMallocRawNN(pParse->db, sizeof(*pNew) );
       |                       ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                           |
       |                                           void*
sqlite3.c:144006:43: error: invalid conversion from ‘void*’ to ‘SrcList*’ [-fpermissive]
144006 |   if( pSrc==0 ) pSrc = sqlite3DbMallocZero(pParse->db, sizeof(*pSrc));
       |                        ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                           |
       |                                           void*
sqlite3.c: In function ‘KeyInfo* sqlite3KeyInfoAlloc(sqlite3*, int, int)’:
sqlite3.c:145367:36: error: invalid conversion from ‘void*’ to ‘KeyInfo*’ [-fpermissive]
145367 |   KeyInfo *p = sqlite3DbMallocRawNN(db, sizeof(KeyInfo) + nExtra);
       |                ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                    |
       |                                    void*
sqlite3.c: In function ‘KeyInfo* sqlite3KeyInfoFromExprList(Parse*, ExprList*, int, int)’:
sqlite3.c:145445:33: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in assignment
145445 |     for(i=iStart, pItem=pList->a+iStart; i<nExpr; i++, pItem++){
       |                         ~~~~~~~~^~~~~~~
       |                                 |
       |                                 ExprList::ExprList_item*
sqlite3.c:145445:56: error: cannot increment a pointer to incomplete type ‘ExprList_item’
145445 |     for(i=iStart, pItem=pList->a+iStart; i<nExpr; i++, pItem++){
       |                                                        ^~~~~
sqlite3.c:145446:66: error: invalid use of incomplete type ‘struct ExprList_item’
145446 |       pInfo->aColl[i-iStart] = sqlite3ExprNNCollSeq(pParse, pItem->pExpr);
       |                                                                  ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:145447:42: error: invalid use of incomplete type ‘struct ExprList_item’
145447 |       pInfo->aSortFlags[i-iStart] = pItem->fg.sortFlags;
       |                                          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘const char* sqlite3SelectOpName(int)’:
sqlite3.c:145459:28: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
145459 |     case TK_ALL:       z = "UNION ALL";   break;
       |                            ^~~~~~~~~~~
sqlite3.c:145460:28: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
145460 |     case TK_INTERSECT: z = "INTERSECT";   break;
       |                            ^~~~~~~~~~~
sqlite3.c:145461:28: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
145461 |     case TK_EXCEPT:    z = "EXCEPT";      break;
       |                            ^~~~~~~~
sqlite3.c:145462:28: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
145462 |     default:           z = "UNION";       break;
       |                            ^~~~~~~
sqlite3.c: In function ‘void generateSortTail(Parse*, Select*, SortCtx*, int, SelectDest*)’:
sqlite3.c:145528:45: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
145528 |   struct ExprList_item *aOutEx = p->pEList->a;
       |                                  ~~~~~~~~~~~^
       |                                             |
       |                                             ExprList::ExprList_item*
sqlite3.c:145607:17: error: invalid use of incomplete type ‘struct ExprList_item’
145607 |     if( aOutEx[i].u.x.iOrderByCol==0 ) iCol++;
       |                 ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:145607:17: error: invalid use of incomplete type ‘struct ExprList_item’
145607 |     if( aOutEx[i].u.x.iOrderByCol==0 ) iCol++;
       |         ~~~~~~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:145648:19: error: invalid use of incomplete type ‘struct ExprList_item’
145648 |       if( aOutEx[i].u.x.iOrderByCol ){
       |                   ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:145648:19: error: invalid use of incomplete type ‘struct ExprList_item’
145648 |       if( aOutEx[i].u.x.iOrderByCol ){
       |           ~~~~~~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:145649:25: error: invalid use of incomplete type ‘struct ExprList_item’
145649 |         iRead = aOutEx[i].u.x.iOrderByCol-1;
       |                         ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:145649:25: error: invalid use of incomplete type ‘struct ExprList_item’
145649 |         iRead = aOutEx[i].u.x.iOrderByCol-1;
       |                 ~~~~~~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3GenerateColumnNames(Parse*, Select*)’:
sqlite3.c:146012:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
146012 |         zCol = "rowid";
       |                ^~~~~~~
sqlite3.c: In function ‘int sqlite3ColumnsFromExprList(Parse*, ExprList*, i16*, Column**)’:
sqlite3.c:146073:31: error: invalid conversion from ‘void*’ to ‘Column*’ [-fpermissive]
146073 |     aCol = sqlite3DbMallocZero(db, sizeof(aCol[0])*nCol);
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c:146085:32: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
146085 |     struct ExprList_item *pX = &pEList->a[i];
       |                                ^~~~~~~~~~~~~
       |                                |
       |                                ExprList::ExprList_item*
sqlite3.c:146089:20: error: invalid use of incomplete type ‘struct ExprList_item’
146089 |     if( (zName = pX->zEName)!=0 && pX->fg.eEName==ENAME_NAME ){
       |                    ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:146089:38: error: invalid use of incomplete type ‘struct ExprList_item’
146089 |     if( (zName = pX->zEName)!=0 && pX->fg.eEName==ENAME_NAME ){
       |                                      ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:146092:58: error: invalid use of incomplete type ‘struct ExprList_item’
146092 |       Expr *pColExpr = sqlite3ExprSkipCollateAndLikely(pX->pExpr);
       |                                                          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:146105:25: error: invalid conversion from ‘const char*’ to ‘char*’ [-fpermissive]
146105 |         zName = iCol>=0 ? pTab->aCol[iCol].zCnName : "rowid";
       |                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                         |
       |                         const char*
sqlite3.c:146124:48: error: invalid conversion from ‘void*’ to ‘ExprList_item*’ [-fpermissive]
146124 |     while( zName && (pCollide = sqlite3HashFind(&ht, zName))!=0 ){
       |                                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                                                |
       |                                                void*
sqlite3.c:146125:19: error: invalid use of incomplete type ‘struct ExprList_item’
146125 |       if( pCollide->fg.bUsingTerm ){
       |                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:146141:11: error: invalid use of incomplete type ‘struct ExprList_item’
146141 |     if( pX->fg.bNoExpand ){
       |           ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3SubqueryColumnTypes(Parse*, Table*, Select*, char)’:
sqlite3.c:146193:24: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
146193 |   a = pSelect->pEList->a;
       |       ~~~~~~~~~~~~~~~~~^
       |                        |
       |                        ExprList::ExprList_item [1]
sqlite3.c:146202:12: error: invalid use of incomplete type ‘struct ExprList_item’
146202 |     p = a[i].pExpr;
       |            ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:146202:12: error: invalid use of incomplete type ‘struct ExprList_item’
146202 |     p = a[i].pExpr;
       |         ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:146246:45: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
146246 |       pCol->zCnName = sqlite3DbReallocOrFree(db, pCol->zCnName, n+k+2);
       |                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                             |
       |                                             void*
sqlite3.c: In function ‘Table* sqlite3ResultSetOfSelect(Parse*, Select*, char)’:
sqlite3.c:146278:29: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
146278 |   pTab = sqlite3DbMallocZero(db, sizeof(Table) );
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘KeyInfo* multiSelectOrderByKeyInfo(Parse*, Select*, int)’:
sqlite3.c:146426:37: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
146426 |       struct ExprList_item *pItem = &pOrderBy->a[i];
       |                                     ^~~~~~~~~~~~~~~
       |                                     |
       |                                     ExprList::ExprList_item*
sqlite3.c:146427:26: error: invalid use of incomplete type ‘struct ExprList_item’
146427 |       Expr *pTerm = pItem->pExpr;
       |                          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:146433:52: error: invalid use of incomplete type ‘struct ExprList_item’
146433 |         pColl = multiSelectCollSeq(pParse, p, pItem->u.x.iOrderByCol-1);
       |                                                    ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int multiSelectOrderBy(Parse*, Select*, SelectDest*)’:
sqlite3.c:147396:32: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
147396 |       for(j=0, pItem=pOrderBy->a; j<nOrderBy; j++, pItem++){
       |                      ~~~~~~~~~~^
       |                                |
       |                                ExprList::ExprList_item [1]
sqlite3.c:147396:52: error: cannot increment a pointer to incomplete type ‘ExprList_item’
147396 |       for(j=0, pItem=pOrderBy->a; j<nOrderBy; j++, pItem++){
       |                                                    ^~~~~
sqlite3.c:147399:18: error: invalid use of incomplete type ‘struct ExprList_item’
147399 |         if( pItem->u.x.iOrderByCol==i ) break;
       |                  ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:147419:34: error: invalid conversion from ‘void*’ to ‘u32*’ {aka ‘unsigned int*’} [-fpermissive]
147419 |   aPermute = sqlite3DbMallocRawNN(db, sizeof(u32)*(nOrderBy + 1));
       |              ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                  |
       |                                  void*
sqlite3.c:147423:30: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
147423 |     for(i=1, pItem=pOrderBy->a; i<=nOrderBy; i++, pItem++){
       |                    ~~~~~~~~~~^
       |                              |
       |                              ExprList::ExprList_item [1]
sqlite3.c:147423:51: error: cannot increment a pointer to incomplete type ‘ExprList_item’
147423 |     for(i=1, pItem=pOrderBy->a; i<=nOrderBy; i++, pItem++){
       |                                                   ^~~~~
sqlite3.c:147427:26: error: invalid use of incomplete type ‘struct ExprList_item’
147427 |       aPermute[i] = pItem->u.x.iOrderByCol - 1;
       |                          ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int flattenSubquery(Parse*, Select*, int, int)’:
sqlite3.c:148352:36: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
148352 |       aCsrMap = sqlite3DbMallocZero(db, ((i64)pParse->nTab+1)*sizeof(int));
       |                 ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                    |
       |                                    void*
sqlite3.c: In function ‘void constInsert(WhereConst*, Expr*, Expr*, Expr*)’:
sqlite3.c:148691:42: error: invalid conversion from ‘void*’ to ‘Expr**’ [-fpermissive]
148691 |   pConst->apExpr = sqlite3DbReallocOrFree(pConst->pParse->db, pConst->apExpr,
       |                    ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                          |
       |                                          void*
148692 |                          pConst->nConst*2*sizeof(Expr*));
       |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘int convertCompoundSelectToSubquery(Walker*, Select*)’:
sqlite3.c:149434:20: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
149434 |   a = p->pOrderBy->a;
       |       ~~~~~~~~~~~~~^
       |                    |
       |                    ExprList::ExprList_item [1]
sqlite3.c:149441:10: error: invalid use of incomplete type ‘struct ExprList_item’
149441 |   if( a[0].u.x.iOrderByCol ) return WRC_Continue;
       |          ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:149441:10: error: invalid use of incomplete type ‘struct ExprList_item’
149441 |   if( a[0].u.x.iOrderByCol ) return WRC_Continue;
       |       ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:149444:12: error: invalid use of incomplete type ‘struct ExprList_item’
149444 |     if( a[i].pExpr->flags & EP_Collate ) break;
       |            ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:149444:12: error: invalid use of incomplete type ‘struct ExprList_item’
149444 |     if( a[i].pExpr->flags & EP_Collate ) break;
       |         ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:149452:29: error: invalid conversion from ‘void*’ to ‘Select*’ [-fpermissive]
149452 |   pNew = sqlite3DbMallocZero(db, sizeof(*pNew) );
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘int resolveFromTermToCte(Parse*, Walker*, SrcItem*)’:
sqlite3.c:149633:31: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
149633 |     pTab = sqlite3DbMallocZero(db, sizeof(Table));
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c:149637:49: error: invalid conversion from ‘void*’ to ‘CteUse*’ [-fpermissive]
149637 |       pCte->pUse = pCteUse = sqlite3DbMallocZero(db, sizeof(pCteUse[0]));
       |                              ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
       |                                                 |
       |                                                 void*
sqlite3.c: In function ‘int sqlite3ExpandSubquery(Parse*, SrcItem*)’:
sqlite3.c:149791:44: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
149791 |   pFrom->pSTab = pTab = sqlite3DbMallocZero(pParse->db, sizeof(Table));
       |                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                            |
       |                                            void*
sqlite3.c: In function ‘int selectExpander(Walker*, Select*)’:
sqlite3.c:150022:39: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
150022 |     struct ExprList_item *a = pEList->a;
       |                               ~~~~~~~~^
       |                                       |
       |                                       ExprList::ExprList_item*
sqlite3.c:150029:15: error: invalid use of incomplete type ‘struct ExprList_item’
150029 |       pE = a[k].pExpr;
       |               ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150029:15: error: invalid use of incomplete type ‘struct ExprList_item’
150029 |       pE = a[k].pExpr;
       |            ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150038:55: error: invalid use of incomplete type ‘struct ExprList_item’
150038 |         pNew = sqlite3ExprListAppend(pParse, pNew, a[k].pExpr);
       |                                                       ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150038:55: error: invalid use of incomplete type ‘struct ExprList_item’
150038 |         pNew = sqlite3ExprListAppend(pParse, pNew, a[k].pExpr);
       |                                                    ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150040:46: error: invalid use of incomplete type ‘struct ExprList_item’
150040 |           pNew->a[pNew->nExpr-1].zEName = a[k].zEName;
       |                                              ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150040:46: error: invalid use of incomplete type ‘struct ExprList_item’
150040 |           pNew->a[pNew->nExpr-1].zEName = a[k].zEName;
       |                                           ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150041:49: error: invalid use of incomplete type ‘struct ExprList_item’
150041 |           pNew->a[pNew->nExpr-1].fg.eEName = a[k].fg.eEName;
       |                                                 ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150041:49: error: invalid use of incomplete type ‘struct ExprList_item’
150041 |           pNew->a[pNew->nExpr-1].fg.eEName = a[k].fg.eEName;
       |                                              ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150042:14: error: invalid use of incomplete type ‘struct ExprList_item’
150042 |           a[k].zEName = 0;
       |              ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150042:14: error: invalid use of incomplete type ‘struct ExprList_item’
150042 |           a[k].zEName = 0;
       |           ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150044:12: error: invalid use of incomplete type ‘struct ExprList_item’
150044 |         a[k].pExpr = 0;
       |            ^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150044:12: error: invalid use of incomplete type ‘struct ExprList_item’
150044 |         a[k].pExpr = 0;
       |         ~~~^
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150103:44: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
150103 |                 struct ExprList_item *pX = &pNew->a[pNew->nExpr-1];
       |                                            ^~~~~~~~~~~~~~~~~~~~~~~
       |                                            |
       |                                            ExprList::ExprList_item*
sqlite3.c:150105:19: error: invalid use of incomplete type ‘struct ExprList_item’
150105 |                 pX->zEName = sqlite3MPrintf(db,"..%s", zUName);
       |                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150106:19: error: invalid use of incomplete type ‘struct ExprList_item’
150106 |                 pX->fg.eEName = ENAME_TAB;
       |                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150107:19: error: invalid use of incomplete type ‘struct ExprList_item’
150107 |                 pX->fg.bUsingTerm = 1;
       |                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150134:37: error: cannot convert ‘ExprList::ExprList_item*’ to ‘const ExprList_item*’
150134 |                && sqlite3MatchEName(&pNestedFrom->a[j], 0, zTName, 0, 0)==0
       |                                     ^~~~~~~~~~~~~~~~~~
       |                                     |
       |                                     ExprList::ExprList_item*
sqlite3.c:107337:31: note:   initializing argument 1 of ‘int sqlite3MatchEName(const ExprList_item*, const char*, const char*, const char*, int*)’
107337 |   const struct ExprList_item *pItem,
       |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
sqlite3.c:150194:18: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in assignment
150194 |             pX = &pNew->a[pNew->nExpr-1];
       |                  ^~~~~~~~~~~~~~~~~~~~~~~
       |                  |
       |                  ExprList::ExprList_item*
sqlite3.c:150199:19: error: invalid use of incomplete type ‘struct ExprList_item’
150199 |                 pX->zEName = sqlite3DbStrDup(db, pNestedFrom->a[j].zEName);
       |                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150202:19: error: invalid use of incomplete type ‘struct ExprList_item’
150202 |                 pX->zEName = sqlite3MPrintf(db, "%s.%s.%s",
       |                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150206:17: error: invalid use of incomplete type ‘struct ExprList_item’
150206 |               pX->fg.eEName = (j==pTab->nCol ? ENAME_ROWID : ENAME_TAB);
       |                 ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150212:19: error: invalid use of incomplete type ‘struct ExprList_item’
150212 |                 pX->fg.bNoExpand = 1;
       |                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150215:17: error: invalid use of incomplete type ‘struct ExprList_item’
150215 |               pX->zEName = sqlite3MPrintf(db, "%s.%s", zTabName, zName);
       |                 ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150216:17: error: invalid use of incomplete type ‘struct ExprList_item’
150216 |               pX->fg.eEName = ENAME_NAME;
       |                 ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150218:17: error: invalid use of incomplete type ‘struct ExprList_item’
150218 |               pX->zEName = sqlite3DbStrDup(db, zName);
       |                 ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150219:17: error: invalid use of incomplete type ‘struct ExprList_item’
150219 |               pX->fg.eEName = ENAME_NAME;
       |                 ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘int aggregateIdxEprRefToColCallback(Walker*, Expr*)’:
sqlite3.c:150509:10: error: cannot convert ‘AggInfo::AggInfo_col*’ to ‘aggregateIdxEprRefToColCallback(Walker*, Expr*)::AggInfo_col*’ in assignment
150509 |   pCol = &pAggInfo->aCol[pExpr->iAgg];
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |          |
       |          AggInfo::AggInfo_col*
sqlite3.c:150511:23: error: invalid use of incomplete type ‘struct aggregateIdxEprRefToColCallback(Walker*, Expr*)::AggInfo_col’
150511 |   pExpr->iTable = pCol->iTable;
       |                       ^~
sqlite3.c:150500:10: note: forward declaration of ‘struct aggregateIdxEprRefToColCallback(Walker*, Expr*)::AggInfo_col’
150500 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c:150512:24: error: invalid use of incomplete type ‘struct aggregateIdxEprRefToColCallback(Walker*, Expr*)::AggInfo_col’
150512 |   pExpr->iColumn = pCol->iColumn;
       |                        ^~
sqlite3.c:150500:10: note: forward declaration of ‘struct aggregateIdxEprRefToColCallback(Walker*, Expr*)::AggInfo_col’
150500 |   struct AggInfo_col *pCol;
       |          ^~~~~~~~~~~
sqlite3.c: In function ‘void resetAccumulator(Parse*, AggInfo*)’:
sqlite3.c:150577:23: error: cannot convert ‘AggInfo::AggInfo_func*’ to ‘resetAccumulator(Parse*, AggInfo*)::AggInfo_func*’ in assignment
150577 |   for(pFunc=pAggInfo->aFunc, i=0; i<pAggInfo->nFunc; i++, pFunc++){
       |             ~~~~~~~~~~^~~~~
       |                       |
       |                       AggInfo::AggInfo_func*
sqlite3.c:150577:59: error: cannot increment a pointer to incomplete type ‘resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150577 |   for(pFunc=pAggInfo->aFunc, i=0; i<pAggInfo->nFunc; i++, pFunc++){
       |                                                           ^~~~~
sqlite3.c:150578:14: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150578 |     if( pFunc->iDistinct>=0 ){
       |              ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150579:23: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150579 |       Expr *pE = pFunc->pFExpr;
       |                       ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150584:14: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150584 |         pFunc->iDistinct = -1;
       |              ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150587:14: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150587 |         pFunc->iDistAddr = sqlite3VdbeAddOp4(v, OP_OpenEphemeral,
       |              ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150588:18: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150588 |             pFunc->iDistinct, 0, 0, (char*)pKeyInfo, P4_KEYINFO);
       |                  ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150590:32: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150590 |                           pFunc->pFunc->zName));
       |                                ^~
sqlite3.c:17240:56: note: in definition of macro ‘ExplainQueryPlan’
17240 | # define ExplainQueryPlan(P)        sqlite3VdbeExplain P
      |                                                        ^
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150593:14: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150593 |     if( pFunc->iOBTab>=0 ){
       |              ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150601:22: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150601 |       pOBList = pFunc->pFExpr->pLeft->x.pList;
       |                      ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150602:17: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150602 |       if( !pFunc->bOBUnique ){
       |                 ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150605:16: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150605 |       if( pFunc->bOBPayload ){
       |                ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150608:24: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150608 |         nExtra += pFunc->pFExpr->x.pList->nExpr;
       |                        ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150610:16: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150610 |       if( pFunc->bUseSubtype ){
       |                ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150611:24: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150611 |         nExtra += pFunc->pFExpr->x.pList->nExpr;
       |                        ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150614:17: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150614 |       if( !pFunc->bOBUnique && pParse->nErr==0 ){
       |                 ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150618:18: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150618 |             pFunc->iOBTab, pOBList->nExpr+nExtra, 0,
       |                  ^~
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c:150621:32: error: invalid use of incomplete type ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150621 |                           pFunc->pFunc->zName));
       |                                ^~
sqlite3.c:17240:56: note: in definition of macro ‘ExplainQueryPlan’
17240 | # define ExplainQueryPlan(P)        sqlite3VdbeExplain P
      |                                                        ^
sqlite3.c:150568:10: note: forward declaration of ‘struct resetAccumulator(Parse*, AggInfo*)::AggInfo_func’
150568 |   struct AggInfo_func *pFunc;
       |          ^~~~~~~~~~~~
sqlite3.c: In function ‘void finalizeAggFunctions(Parse*, AggInfo*)’:
sqlite3.c:150634:25: error: cannot convert ‘AggInfo::AggInfo_func*’ to ‘finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func*’ in assignment
150634 |   for(i=0, pF=pAggInfo->aFunc; i<pAggInfo->nFunc; i++, pF++){
       |               ~~~~~~~~~~^~~~~
       |                         |
       |                         AggInfo::AggInfo_func*
sqlite3.c:150634:56: error: cannot increment a pointer to incomplete type ‘finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150634 |   for(i=0, pF=pAggInfo->aFunc; i<pAggInfo->nFunc; i++, pF++){
       |                                                        ^~
sqlite3.c:150638:15: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150638 |     pList = pF->pFExpr->x.pList;
       |               ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150639:11: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150639 |     if( pF->iOBTab>=0 ){
       |           ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150654:13: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150654 |       if( pF->bOBPayload==0 ){
       |             ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150660:18: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150660 |         nKey = pF->pFExpr->pLeft->x.pList->nExpr;
       |                  ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150661:23: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150661 |         if( ALWAYS(!pF->bOBUnique) ) nKey++;
       |                       ^~
sqlite3.c:14595:26: note: in definition of macro ‘ALWAYS’
14595 | # define ALWAYS(X)      (X)
      |                          ^
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150663:48: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150663 |       iTop = sqlite3VdbeAddOp1(v, OP_Rewind, pF->iOBTab); VdbeCoverage(v);
       |                                                ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150665:43: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150665 |         sqlite3VdbeAddOp3(v, OP_Column, pF->iOBTab, nKey+j, regAgg+j);
       |                                           ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150667:13: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150667 |       if( pF->bUseSubtype ){
       |             ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150669:41: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150669 |         int iBaseCol = nKey + nArg + (pF->bOBPayload==0 && pF->bOBUnique==0);
       |                                         ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150669:62: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150669 |         int iBaseCol = nKey + nArg + (pF->bOBPayload==0 && pF->bOBUnique==0);
       |                                                              ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150671:45: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150671 |           sqlite3VdbeAddOp3(v, OP_Column, pF->iOBTab, iBaseCol+j, regSubtype);
       |                                             ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150677:32: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150677 |       sqlite3VdbeAppendP4(v, pF->pFunc, P4_FUNCDEF);
       |                                ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150679:39: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150679 |       sqlite3VdbeAddOp2(v, OP_Next, pF->iOBTab, iTop+1); VdbeCoverage(v);
       |                                       ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150685:30: error: invalid use of incomplete type ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150685 |     sqlite3VdbeAppendP4(v, pF->pFunc, P4_FUNCDEF);
       |                              ^~
sqlite3.c:150633:10: note: forward declaration of ‘struct finalizeAggFunctions(Parse*, AggInfo*)::AggInfo_func’
150633 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c: In function ‘void updateAccumulator(Parse*, int, AggInfo*, int)’:
sqlite3.c:150721:25: error: cannot convert ‘AggInfo::AggInfo_func*’ to ‘updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func*’ in assignment
150721 |   for(i=0, pF=pAggInfo->aFunc; i<pAggInfo->nFunc; i++, pF++){
       |               ~~~~~~~~~~^~~~~
       |                         |
       |                         AggInfo::AggInfo_func*
sqlite3.c:150721:56: error: cannot increment a pointer to incomplete type ‘updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150721 |   for(i=0, pF=pAggInfo->aFunc; i<pAggInfo->nFunc; i++, pF++){
       |                                                        ^~
sqlite3.c:150731:15: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150731 |     pList = pF->pFExpr->x.pList;
       |               ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150732:27: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150732 |     if( ExprHasProperty(pF->pFExpr, EP_WinFunc) ){
       |                           ^~
sqlite3.c:19393:37: note: in definition of macro ‘ExprHasProperty’
19393 | #define ExprHasProperty(E,P)     (((E)->flags&(P))!=0)
      |                                     ^
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150733:25: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150733 |       Expr *pFilter = pF->pFExpr->y.pWin->pFilter;
       |                         ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150735:14: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150735 |        && (pF->pFunc->funcFlags & SQLITE_FUNC_NEEDCOLL)
       |              ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150754:11: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150754 |     if( pF->iOBTab>=0 ){
       |           ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150765:19: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150765 |       pOBList = pF->pFExpr->pLeft->x.pList;
       |                   ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150769:14: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150769 |       if( !pF->bOBUnique ){
       |              ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150772:13: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150772 |       if( pF->bOBPayload ){
       |             ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150775:13: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150775 |       if( pF->bUseSubtype ){
       |             ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150783:14: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150783 |       if( !pF->bOBUnique ){
       |              ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150784:45: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150784 |         sqlite3VdbeAddOp2(v, OP_Sequence, pF->iOBTab, regAgg+jj);
       |                                             ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150787:13: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150787 |       if( pF->bOBPayload ){
       |             ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150792:13: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150792 |       if( pF->bUseSubtype ){
       |             ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150794:25: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150794 |         int regBase = pF->bOBPayload ? regDistinct : regAgg;
       |                         ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150808:11: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150808 |     if( pF->iDistinct>=0 && pList ){
       |           ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150812:9: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150812 |       pF->iDistinct = codeDistinct(pParse, eDistinctType,
       |         ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150813:13: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150813 |           pF->iDistinct, addrNext, pList, regDistinct);
       |             ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150815:11: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150815 |     if( pF->iOBTab>=0 ){
       |           ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150819:47: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150819 |       sqlite3VdbeAddOp4Int(v, OP_IdxInsert, pF->iOBTab, regAgg+regAggSz-1,
       |                                               ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150824:13: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150824 |       if( pF->pFunc->funcFlags & SQLITE_FUNC_NEEDCOLL ){
       |             ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150829:31: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
150829 |         for(j=0, pItem=pList->a; !pColl && j<nArg; j++, pItem++){
       |                        ~~~~~~~^
       |                               |
       |                               ExprList::ExprList_item [1]
sqlite3.c:150829:57: error: cannot increment a pointer to incomplete type ‘ExprList_item’
150829 |         for(j=0, pItem=pList->a; !pColl && j<nArg; j++, pItem++){
       |                                                         ^~~~~
sqlite3.c:150830:51: error: invalid use of incomplete type ‘struct ExprList_item’
150830 |           pColl = sqlite3ExprCollSeq(pParse, pItem->pExpr);
       |                                                   ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:150840:32: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150840 |       sqlite3VdbeAppendP4(v, pF->pFunc, P4_FUNCDEF);
       |                                ^~
sqlite3.c:150715:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_func’
150715 |   struct AggInfo_func *pF;
       |          ^~~~~~~~~~~~
sqlite3.c:150855:25: error: cannot convert ‘AggInfo::AggInfo_col*’ to ‘updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_col*’ in assignment
150855 |   for(i=0, pC=pAggInfo->aCol; i<pAggInfo->nAccumulator; i++, pC++){
       |               ~~~~~~~~~~^~~~
       |                         |
       |                         AggInfo::AggInfo_col*
sqlite3.c:150855:62: error: cannot increment a pointer to incomplete type ‘updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_col’
150855 |   for(i=0, pC=pAggInfo->aCol; i<pAggInfo->nAccumulator; i++, pC++){
       |                                                              ^~
sqlite3.c:150856:31: error: invalid use of incomplete type ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_col’
150856 |     sqlite3ExprCode(pParse, pC->pCExpr, AggInfoColumnReg(pAggInfo,i));
       |                               ^~
sqlite3.c:150716:10: note: forward declaration of ‘struct updateAccumulator(Parse*, int, AggInfo*, int)::AggInfo_col’
150716 |   struct AggInfo_col *pC;
       |          ^~~~~~~~~~~
sqlite3.c: In function ‘int countOfViewOptimization(Parse*, Select*)’:
sqlite3.c:151074:32: error: invalid conversion from ‘void*’ to ‘SrcList*’ [-fpermissive]
151074 |   p->pSrc = sqlite3DbMallocZero(pParse->db, sizeof(*p->pSrc));
       |             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘int sqlite3Select(Parse*, Select*, SelectDest*)’:
sqlite3.c:152016:48: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
152016 |       for(k=p->pEList->nExpr, pItem=p->pEList->a; k>0; k--, pItem++){
       |                                     ~~~~~~~~~~~^
       |                                                |
       |                                                ExprList::ExprList_item [1]
sqlite3.c:152016:61: error: cannot increment a pointer to incomplete type ‘ExprList_item’
152016 |       for(k=p->pEList->nExpr, pItem=p->pEList->a; k>0; k--, pItem++){
       |                                                             ^~~~~
sqlite3.c:152017:14: error: invalid use of incomplete type ‘struct ExprList_item’
152017 |         pItem->u.x.iAlias = 0;
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:152019:46: error: cannot convert ‘ExprList::ExprList_item [1]’ to ‘ExprList_item*’ in assignment
152019 |       for(k=pGroupBy->nExpr, pItem=pGroupBy->a; k>0; k--, pItem++){
       |                                    ~~~~~~~~~~^
       |                                              |
       |                                              ExprList::ExprList_item [1]
sqlite3.c:152019:59: error: cannot increment a pointer to incomplete type ‘ExprList_item’
152019 |       for(k=pGroupBy->nExpr, pItem=pGroupBy->a; k>0; k--, pItem++){
       |                                                           ^~~~~
sqlite3.c:152020:14: error: invalid use of incomplete type ‘struct ExprList_item’
152020 |         pItem->u.x.iAlias = 0;
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:152061:35: error: invalid conversion from ‘void*’ to ‘AggInfo*’ [-fpermissive]
152061 |     pAggInfo = sqlite3DbMallocZero(db, sizeof(*pAggInfo) );
       |                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   void*
sqlite3.c:152232:38: error: cannot convert ‘AggInfo::AggInfo_col*’ to ‘sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_col*’ in initialization
152232 |           struct AggInfo_col *pCol = &pAggInfo->aCol[i];
       |                                      ^~~~~~~~~~~~~~~~~~
       |                                      |
       |                                      AggInfo::AggInfo_col*
sqlite3.c:152233:19: error: invalid use of incomplete type ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_col’
152233 |           if( pCol->iSorterColumn>=j ){
       |                   ^~
sqlite3.c:152232:18: note: forward declaration of ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_col’
152232 |           struct AggInfo_col *pCol = &pAggInfo->aCol[i];
       |                  ^~~~~~~~~~~
sqlite3.c:152234:41: error: invalid use of incomplete type ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_col’
152234 |             sqlite3ExprCode(pParse, pCol->pCExpr, j + regBase);
       |                                         ^~
sqlite3.c:152232:18: note: forward declaration of ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_col’
152232 |           struct AggInfo_col *pCol = &pAggInfo->aCol[i];
       |                  ^~~~~~~~~~~
sqlite3.c:152406:35: error: cannot convert ‘AggInfo::AggInfo_func*’ to ‘sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func*’ in initialization
152406 |         struct AggInfo_func *pF = &pAggInfo->aFunc[0];
       |                                   ^~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   AggInfo::AggInfo_func*
sqlite3.c:152407:45: error: invalid use of incomplete type ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func’
152407 |         fixDistinctOpenEph(pParse, eDist, pF->iDistinct, pF->iDistAddr);
       |                                             ^~
sqlite3.c:152406:16: note: forward declaration of ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func’
152406 |         struct AggInfo_func *pF = &pAggInfo->aFunc[0];
       |                ^~~~~~~~~~~~
sqlite3.c:152407:60: error: invalid use of incomplete type ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func’
152407 |         fixDistinctOpenEph(pParse, eDist, pF->iDistinct, pF->iDistAddr);
       |                                                            ^~
sqlite3.c:152406:16: note: forward declaration of ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func’
152406 |         struct AggInfo_func *pF = &pAggInfo->aFunc[0];
       |                ^~~~~~~~~~~~
sqlite3.c:152536:47: error: cannot convert ‘AggInfo::AggInfo_func*’ to ‘sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func*’ in initialization
152536 |           struct AggInfo_func *pF = pAggInfo->aFunc;
       |                                     ~~~~~~~~~~^~~~~
       |                                               |
       |                                               AggInfo::AggInfo_func*
sqlite3.c:152538:49: error: invalid use of incomplete type ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func’
152538 |             fixDistinctOpenEph(pParse, eDist, pF->iDistinct, pF->iDistAddr);
       |                                                 ^~
sqlite3.c:152536:18: note: forward declaration of ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func’
152536 |           struct AggInfo_func *pF = pAggInfo->aFunc;
       |                  ^~~~~~~~~~~~
sqlite3.c:152538:64: error: invalid use of incomplete type ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func’
152538 |             fixDistinctOpenEph(pParse, eDist, pF->iDistinct, pF->iDistAddr);
       |                                                                ^~
sqlite3.c:152536:18: note: forward declaration of ‘struct sqlite3Select(Parse*, Select*, SelectDest*)::AggInfo_func’
152536 |           struct AggInfo_func *pF = pAggInfo->aFunc;
       |                  ^~~~~~~~~~~~
sqlite3.c: In function ‘int sqlite3_get_table_cb(void*, int, char**, char**)’:
sqlite3.c:152681:27: error: invalid conversion from ‘void*’ to ‘char**’ [-fpermissive]
152681 |     azNew = sqlite3Realloc( p->azResult, sizeof(char*)*p->nAlloc );
       |             ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                           |
       |                           void*
sqlite3.c:152713:29: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
152713 |         z = sqlite3_malloc64( n );
       |             ~~~~~~~~~~~~~~~~^~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘int sqlite3_get_table(sqlite3*, const char*, char***, int*, int*, char**)’:
sqlite3.c:152762:34: error: invalid conversion from ‘void*’ to ‘char**’ [-fpermissive]
152762 |   res.azResult = sqlite3_malloc64(sizeof(char*)*res.nAlloc );
       |                  ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                  |
       |                                  void*
sqlite3.c:14330:33: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
14330 | # define SQLITE_INT_TO_PTR(X)  ((void*)(__PTRDIFF_TYPE__)(X))
      |                                ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                 |
      |                                 void*
sqlite3.c:152770:21: note: in expansion of macro ‘SQLITE_INT_TO_PTR’
152770 |   res.azResult[0] = SQLITE_INT_TO_PTR(res.nData);
       |                     ^~~~~~~~~~~~~~~~~
sqlite3.c:152790:27: error: invalid conversion from ‘void*’ to ‘char**’ [-fpermissive]
152790 |     azNew = sqlite3Realloc( res.azResult, sizeof(char*)*res.nData );
       |             ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                           |
       |                           void*
sqlite3.c: In function ‘void sqlite3FinishTrigger(Parse*, TriggerStep*, Token*)’:
sqlite3.c:153223:30: error: invalid conversion from ‘void*’ to ‘Trigger*’ [-fpermissive]
153223 |     pTrig = sqlite3HashInsert(pHash, zName, pTrig);
       |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c:153228:29: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
153228 |       pTab = sqlite3HashFind(&pLink->pTabSchema->tblHash, pLink->table);
       |              ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘TriggerStep* sqlite3TriggerSelectStep(sqlite3*, Select*, const char*, const char*)’:
sqlite3.c:153265:50: error: invalid conversion from ‘void*’ to ‘TriggerStep*’ [-fpermissive]
153265 |   TriggerStep *pTriggerStep = sqlite3DbMallocZero(db, sizeof(TriggerStep));
       |                               ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
       |                                                  |
       |                                                  void*
sqlite3.c: In function ‘TriggerStep* triggerStepAllocate(Parse*, u8, Token*, const char*, const char*)’:
sqlite3.c:153294:37: error: invalid conversion from ‘void*’ to ‘TriggerStep*’ [-fpermissive]
153294 |   pTriggerStep = sqlite3DbMallocZero(db, sizeof(TriggerStep) + pName->n + 1);
       |                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                     |
       |                                     void*
sqlite3.c: In function ‘void sqlite3DropTrigger(Parse*, SrcList*, int)’:
sqlite3.c:153467:31: error: invalid conversion from ‘void*’ to ‘Trigger*’ [-fpermissive]
153467 |     pTrigger = sqlite3HashFind(&(db->aDb[j].pSchema->trigHash), zName);
       |                ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘Table* tableOfTrigger(Trigger*)’:
sqlite3.c:153490:25: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
153490 |   return sqlite3HashFind(&pTrigger->pTabSchema->tblHash, pTrigger->table);
       |          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                         |
       |                         void*
sqlite3.c: In function ‘void sqlite3UnlinkAndDeleteTrigger(sqlite3*, int, const char*)’:
sqlite3.c:153541:31: error: invalid conversion from ‘void*’ to ‘Trigger*’ [-fpermissive]
153541 |   pTrigger = sqlite3HashInsert(pHash, zName, 0);
       |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘ExprList* sqlite3ExpandReturning(Parse*, ExprList*, Table*)’:
sqlite3.c:153764:41: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
153764 |           struct ExprList_item *pItem = &pNew->a[pNew->nExpr-1];
       |                                         ^~~~~~~~~~~~~~~~~~~~~~~
       |                                         |
       |                                         ExprList::ExprList_item*
sqlite3.c:153765:16: error: invalid use of incomplete type ‘struct ExprList_item’
153765 |           pItem->zEName = sqlite3DbStrDup(db, pTab->aCol[jj].zCnName);
       |                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:153766:16: error: invalid use of incomplete type ‘struct ExprList_item’
153766 |           pItem->fg.eEName = ENAME_NAME;
       |                ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:153773:39: error: cannot convert ‘ExprList::ExprList_item*’ to ‘ExprList_item*’ in initialization
153773 |         struct ExprList_item *pItem = &pNew->a[pNew->nExpr-1];
       |                                       ^~~~~~~~~~~~~~~~~~~~~~~
       |                                       |
       |                                       ExprList::ExprList_item*
sqlite3.c:153774:14: error: invalid use of incomplete type ‘struct ExprList_item’
153774 |         pItem->zEName = sqlite3DbStrDup(db, pList->a[i].zEName);
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c:153775:14: error: invalid use of incomplete type ‘struct ExprList_item’
153775 |         pItem->fg.eEName = pList->a[i].fg.eEName;
       |              ^~
sqlite3.c:21674:16: note: forward declaration of ‘struct ExprList_item’
21674 |   const struct ExprList_item*,
      |                ^~~~~~~~~~~~~
sqlite3.c: In function ‘TriggerPrg* codeRowTrigger(Parse*, Trigger*, Table*, int)’:
sqlite3.c:154080:29: error: invalid conversion from ‘void*’ to ‘TriggerPrg*’ [-fpermissive]
154080 |   pPrg = sqlite3DbMallocZero(db, sizeof(TriggerPrg));
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c:154084:50: error: invalid conversion from ‘void*’ to ‘SubProgram*’ [-fpermissive]
154084 |   pPrg->pProgram = pProgram = sqlite3DbMallocZero(db, sizeof(SubProgram));
       |                               ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
       |                                                  |
       |                                                  void*
sqlite3.c: In function ‘void sqlite3Update(Parse*, SrcList*, ExprList*, Expr*, int, ExprList*, Expr*, Upsert*)’:
sqlite3.c:154830:31: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
154830 |   aXRef = sqlite3DbMallocRawNN(db, sizeof(int) * (pTab->nCol+nIdx+1) + nIdx+2 );
       |           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘Upsert* sqlite3UpsertNew(sqlite3*, ExprList*, Expr*, ExprList*, Expr*, Upsert*)’:
sqlite3.c:155824:29: error: invalid conversion from ‘void*’ to ‘Upsert*’ [-fpermissive]
155824 |   pNew = sqlite3DbMallocZero(db, sizeof(Upsert));
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘void addModuleArgument(Parse*, Table*, char*)’:
sqlite3.c:156882:33: error: invalid conversion from ‘void*’ to ‘char**’ [-fpermissive]
156882 |   azModuleArg = sqlite3DbRealloc(db, pTable->u.vtab.azArg, nBytes);
       |                 ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                 |
       |                                 void*
sqlite3.c: In function ‘void sqlite3VtabFinishParse(Parse*, Token*)’:
sqlite3.c:157029:29: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
157029 |     pOld = sqlite3HashInsert(&pSchema->tblHash, zName, pTab);
       |            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘int vtabCallConstructor(sqlite3*, Table*, Module*, int (*)(sqlite3*, void*, int, const char* const*, sqlite3_vtab**, char**), char**)’:
sqlite3.c:157104:30: error: invalid conversion from ‘void*’ to ‘VTable*’ [-fpermissive]
157104 |   pVTable = sqlite3MallocZero(sizeof(VTable));
       |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c:157166:60: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
157166 |         char *zType = sqlite3ColumnType(&pTab->aCol[iCol], "");
       |                                                            ^~
sqlite3.c: In function ‘int growVTrans(sqlite3*)’:
sqlite3.c:157253:31: error: invalid conversion from ‘void*’ to ‘VTable**’ [-fpermissive]
157253 |     aVTrans = sqlite3DbRealloc(db, (void *)db->aVTrans, nBytes);
       |               ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘FuncDef* sqlite3VtabOverloadFunction(sqlite3*, FuncDef*, int, Expr*)’:
sqlite3.c:157715:29: error: invalid conversion from ‘void*’ to ‘FuncDef*’ [-fpermissive]
157715 |   pNew = sqlite3DbMallocZero(db, sizeof(*pNew)
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
157716 |                              + sqlite3Strlen30(pDef->zName) + 1);
       |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3VtabMakeWritable(Parse*, Table*)’:
sqlite3.c:157745:30: error: invalid conversion from ‘void*’ to ‘Table**’ [-fpermissive]
157745 |   apVtabLock = sqlite3Realloc(pToplevel->apVtabLock, n);
       |                ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                              |
       |                              void*
sqlite3.c: In function ‘int sqlite3VtabEponymousTableInit(Parse*, Module*)’:
sqlite3.c:157777:29: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
157777 |   pTab = sqlite3DbMallocZero(db, sizeof(Table));
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘void codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)’:
sqlite3.c:159300:25: error: invalid conversion from ‘void*’ to ‘WhereLevel::<unnamed union>::<unnamed struct>::InLoop*’ [-fpermissive]
159300 |      sqlite3WhereRealloc(pTerm->pWC->pWInfo,
       |      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                         |
       |                         void*
159301 |                          pLevel->u.in.aInLoop,
       |                          ~~~~~~~~~~~~~~~~~~~~~
159302 |                          sizeof(pLevel->u.in.aInLoop[0])*pLevel->u.in.nIn);
       |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:159303:22: error: cannot convert ‘WhereLevel::<unnamed union>::<unnamed struct>::InLoop*’ to ‘codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop*’ in assignment
159303 |   pIn = pLevel->u.in.aInLoop;
       |         ~~~~~~~~~~~~~^~~~~~~
       |                      |
       |                      WhereLevel::<unnamed union>::<unnamed struct>::InLoop*
sqlite3.c:159306:9: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159306 |     pIn += i;
       |     ~~~~^~~~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159311:14: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159311 |           pIn->addrInTop = sqlite3VdbeAddOp2(v, OP_Rowid, iTab, iOut);
       |              ^~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159314:14: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159314 |           pIn->addrInTop = sqlite3VdbeAddOp3(v,OP_Column,iTab, iCol, iOut);
       |              ^~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159318:14: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159318 |           pIn->iCur = iTab;
       |              ^~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159319:14: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159319 |           pIn->eEndLoopOp = bRev ? OP_Prev : OP_Next;
       |              ^~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159321:16: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159321 |             pIn->iBase = iTarget - i;
       |                ^~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159322:16: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159322 |             pIn->nPrefix = i;
       |                ^~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159324:16: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159324 |             pIn->nPrefix = 0;
       |                ^~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159327:14: error: invalid use of incomplete type ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159327 |           pIn->eEndLoopOp = OP_Noop;
       |              ^~
sqlite3.c:159230:10: note: forward declaration of ‘struct codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159230 |   struct InLoop *pIn;
       |          ^~~~~~
sqlite3.c:159329:9: error: cannot increment a pointer to incomplete type ‘codeINTerm(Parse*, WhereTerm*, WhereLevel*, int, int, int)::InLoop’
159329 |         pIn++;
       |         ^~~
sqlite3.c: In function ‘Bitmask sqlite3WhereCodeOneLoopStart(Parse*, Vdbe*, WhereInfo*, int, WhereLevel*, Bitmask)’:
sqlite3.c:160868:36: error: invalid conversion from ‘void*’ to ‘SrcList*’ [-fpermissive]
160868 |       pOrTab = sqlite3DbMallocRawNN(db,
       |                ~~~~~~~~~~~~~~~~~~~~^~~~
       |                                    |
       |                                    void*
160869 |                             sizeof(*pOrTab)+ nNotReady*sizeof(pOrTab->a[0]));
       |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:161365:3: error: jump to label ‘code_outer_join_constraints’
161365 |   code_outer_join_constraints:
       |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:161343:12: note:   from here
161343 |       goto code_outer_join_constraints; /* WHERE clause constraints */
       |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:161354:21: note:   crosses initialization of ‘WhereRightJoin* pRJ’
161354 |     WhereRightJoin *pRJ = pLevel->pRJ;
       |                     ^~~
sqlite3.c: In function ‘int whereClauseInsert(WhereClause*, Expr*, u16)’:
sqlite3.c:161566:32: error: invalid conversion from ‘void*’ to ‘WhereTerm*’ [-fpermissive]
161566 |     pWC->a = sqlite3WhereMalloc(pWC->pWInfo, sizeof(pWC->a[0])*pWC->nSlot*2 );
       |              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void exprAnalyzeOrTerm(SrcList*, WhereClause*, int)’:
sqlite3.c:162191:51: error: invalid conversion from ‘void*’ to ‘WhereOrInfo*’ [-fpermissive]
162191 |   pTerm->u.pOrInfo = pOrInfo = sqlite3DbMallocZero(db, sizeof(*pOrInfo));
       |                                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
       |                                                   |
       |                                                   void*
sqlite3.c:162212:38: error: invalid conversion from ‘void*’ to ‘WhereAndInfo*’ [-fpermissive]
162212 |       pAndInfo = sqlite3DbMallocRawNN(db, sizeof(*pAndInfo));
       |                  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
       |                                      |
       |                                      void*
sqlite3.c: In function ‘void exprAnalyze(SrcList*, WhereClause*, int)’:
sqlite3.c:162745:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
162745 |       pExpr->u.zToken = "false";
       |                         ^~~~~~~
sqlite3.c: In function ‘void* sqlite3WhereMalloc(WhereInfo*, u64)’:
sqlite3.c:163672:32: error: invalid conversion from ‘void*’ to ‘WhereMemBlock*’ [-fpermissive]
163672 |   pBlock = sqlite3DbMallocRawNN(pWInfo->pParse->db, nByte+sizeof(*pBlock));
       |            ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘void constructAutomaticIndex(Parse*, WhereClause*, Bitmask, WhereLevel*)’:
sqlite3.c:164523:17: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
164523 |   pIdx->zName = "auto-index";
       |                 ^~~~~~~~~~~~
sqlite3.c: In function ‘sqlite3_index_info* allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)’:
sqlite3.c:164929:31: error: invalid application of ‘sizeof’ to incomplete type ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164929 |                            + (sizeof(*pIdxCons) + sizeof(*pUsage))*nTerm
       |                               ^~~~~~~~~~~~~~~~~
sqlite3.c:164929:51: error: invalid application of ‘sizeof’ to incomplete type ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint_usage’
164929 |                            + (sizeof(*pIdxCons) + sizeof(*pUsage))*nTerm
       |                                                   ^~~~~~~~~~~~~~~
sqlite3.c:164930:30: error: invalid application of ‘sizeof’ to incomplete type ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
164930 |                            + sizeof(*pIdxOrderBy)*nOrderBy + sizeof(*pHidden)
       |                              ^~~~~~~~~~~~~~~~~~~~
sqlite3.c:164938:63: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164938 |   pIdxOrderBy = (struct sqlite3_index_orderby*)&pIdxCons[nTerm];
       |                                                               ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164939:73: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
164939 |   pUsage = (struct sqlite3_index_constraint_usage*)&pIdxOrderBy[nOrderBy];
       |                                                                         ^
sqlite3.c:164824:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
164824 |   struct sqlite3_index_orderby *pIdxOrderBy;
       |          ^~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164940:27: error: cannot convert ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint*’ to ‘sqlite3_index_info::sqlite3_index_constraint*’ in assignment
164940 |   pIdxInfo->aConstraint = pIdxCons;
       |                           ^~~~~~~~
       |                           |
       |                           allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint*
sqlite3.c:164823:10: note: class type ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’ is incomplete
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164941:24: error: cannot convert ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby*’ to ‘sqlite3_index_info::sqlite3_index_orderby*’ in assignment
164941 |   pIdxInfo->aOrderBy = pIdxOrderBy;
       |                        ^~~~~~~~~~~
       |                        |
       |                        allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby*
sqlite3.c:164824:10: note: class type ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’ is incomplete
164824 |   struct sqlite3_index_orderby *pIdxOrderBy;
       |          ^~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164942:32: error: cannot convert ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint_usage*’ to ‘sqlite3_index_info::sqlite3_index_constraint_usage*’ in assignment
164942 |   pIdxInfo->aConstraintUsage = pUsage;
       |                                ^~~~~~
       |                                |
       |                                allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint_usage*
sqlite3.c:164825:10: note: class type ‘allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint_usage’ is incomplete
164825 |   struct sqlite3_index_constraint_usage *pUsage;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164965:17: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164965 |       pIdxCons[j].iColumn = pTerm->u.x.leftColumn;
       |                 ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164965:17: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164965 |       pIdxCons[j].iColumn = pTerm->u.x.leftColumn;
       |       ~~~~~~~~~~^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164966:17: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164966 |       pIdxCons[j].iTermOffset = i;
       |                 ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164966:17: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164966 |       pIdxCons[j].iTermOffset = i;
       |       ~~~~~~~~~~^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164975:19: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164975 |         pIdxCons[j].op = pTerm->eMatchOp;
       |                   ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164975:19: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164975 |         pIdxCons[j].op = pTerm->eMatchOp;
       |         ~~~~~~~~~~^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164978:21: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164978 |           pIdxCons[j].op = SQLITE_INDEX_CONSTRAINT_ISNULL;
       |                     ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164978:21: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164978 |           pIdxCons[j].op = SQLITE_INDEX_CONSTRAINT_ISNULL;
       |           ~~~~~~~~~~^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164980:21: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164980 |           pIdxCons[j].op = SQLITE_INDEX_CONSTRAINT_IS;
       |                     ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164980:21: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164980 |           pIdxCons[j].op = SQLITE_INDEX_CONSTRAINT_IS;
       |           ~~~~~~~~~~^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164983:19: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164983 |         pIdxCons[j].op = (u8)op;
       |                   ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164983:19: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164983 |         pIdxCons[j].op = (u8)op;
       |         ~~~~~~~~~~^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164999:37: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164999 |           if( op==WO_LT ) pIdxCons[j].op = WO_LE;
       |                                     ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:164999:37: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164999 |           if( op==WO_LT ) pIdxCons[j].op = WO_LE;
       |                           ~~~~~~~~~~^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:165000:37: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
165000 |           if( op==WO_GT ) pIdxCons[j].op = WO_GE;
       |                                     ^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:165000:37: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
165000 |           if( op==WO_GT ) pIdxCons[j].op = WO_GE;
       |                           ~~~~~~~~~~^
sqlite3.c:164823:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_constraint’
164823 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:165015:18: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
165015 |     pIdxOrderBy[j].iColumn = pExpr->iColumn;
       |                  ^
sqlite3.c:164824:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
164824 |   struct sqlite3_index_orderby *pIdxOrderBy;
       |          ^~~~~~~~~~~~~~~~~~~~~
sqlite3.c:165015:18: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
165015 |     pIdxOrderBy[j].iColumn = pExpr->iColumn;
       |     ~~~~~~~~~~~~~^
sqlite3.c:164824:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
164824 |   struct sqlite3_index_orderby *pIdxOrderBy;
       |          ^~~~~~~~~~~~~~~~~~~~~
sqlite3.c:165016:18: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
165016 |     pIdxOrderBy[j].desc = pOrderBy->a[i].fg.sortFlags & KEYINFO_ORDER_DESC;
       |                  ^
sqlite3.c:164824:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
164824 |   struct sqlite3_index_orderby *pIdxOrderBy;
       |          ^~~~~~~~~~~~~~~~~~~~~
sqlite3.c:165016:18: error: invalid use of incomplete type ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
165016 |     pIdxOrderBy[j].desc = pOrderBy->a[i].fg.sortFlags & KEYINFO_ORDER_DESC;
       |     ~~~~~~~~~~~~~^
sqlite3.c:164824:10: note: forward declaration of ‘struct allocateIndexInfo(WhereInfo*, WhereClause*, Bitmask, SrcItem*, u16*)::sqlite3_index_orderby’
164824 |   struct sqlite3_index_orderby *pIdxOrderBy;
       |          ^~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘int whereLoopResize(sqlite3*, WhereLoop*, int)’:
sqlite3.c:165964:31: error: invalid conversion from ‘void*’ to ‘WhereTerm**’ [-fpermissive]
165964 |   paNew = sqlite3DbMallocRawNN(db, sizeof(p->aLTerm[0])*n);
       |           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘int whereLoopInsert(WhereLoopBuilder*, WhereLoop*)’:
sqlite3.c:166296:39: error: invalid conversion from ‘void*’ to ‘WhereLoop*’ [-fpermissive]
166296 |     *ppPrev = p = sqlite3DbMallocRawNN(db, sizeof(WhereLoop));
       |                   ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
       |                                       |
       |                                       void*
sqlite3.c: In function ‘int allConstraintsUsed(sqlite3_index_constraint_usage*, int)’:
sqlite3.c:167614:18: error: invalid use of incomplete type ‘struct sqlite3_index_constraint_usage’
167614 |     if( aUsage[ii].argvIndex<=0 ) return 0;
       |                  ^
sqlite3.c:167609:10: note: forward declaration of ‘struct sqlite3_index_constraint_usage’
167609 |   struct sqlite3_index_constraint_usage *aUsage,
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167614:18: error: invalid use of incomplete type ‘struct sqlite3_index_constraint_usage’
167614 |     if( aUsage[ii].argvIndex<=0 ) return 0;
       |         ~~~~~~~~~^
sqlite3.c:167609:10: note: forward declaration of ‘struct sqlite3_index_constraint_usage’
167609 |   struct sqlite3_index_constraint_usage *aUsage,
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘int whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)’:
sqlite3.c:167652:61: error: cannot convert ‘sqlite3_index_info::sqlite3_index_constraint_usage*’ to ‘sqlite3_index_constraint_usage*’ in initialization
167652 |   struct sqlite3_index_constraint_usage *pUsage = pIdxInfo->aConstraintUsage;
       |                                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~
       |                                                             |
       |                                                             sqlite3_index_info::sqlite3_index_constraint_usage*
sqlite3.c:167668:32: error: cannot increment a pointer to incomplete type ‘whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167668 |   for(i=0; i<nConstraint; i++, pIdxCons++){
       |                                ^~~~~~~~
sqlite3.c:167669:57: error: invalid use of incomplete type ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167669 |     WhereTerm *pTerm = termFromWhereClause(pWC, pIdxCons->iTermOffset);
       |                                                         ^~
sqlite3.c:167651:10: note: forward declaration of ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167651 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167670:13: error: invalid use of incomplete type ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167670 |     pIdxCons->usable = 0;
       |             ^~
sqlite3.c:167651:10: note: forward declaration of ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167651 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167675:15: error: invalid use of incomplete type ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167675 |       pIdxCons->usable = 1;
       |               ^~
sqlite3.c:167651:10: note: forward declaration of ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167651 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167680:36: error: invalid use of incomplete type ‘struct sqlite3_index_constraint_usage’
167680 |   memset(pUsage, 0, sizeof(pUsage[0])*nConstraint);
       |                                    ^
sqlite3.c:167609:10: note: forward declaration of ‘struct sqlite3_index_constraint_usage’
167609 |   struct sqlite3_index_constraint_usage *aUsage,
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167680:21: error: invalid application of ‘sizeof’ to incomplete type ‘sqlite3_index_constraint_usage’
167680 |   memset(pUsage, 0, sizeof(pUsage[0])*nConstraint);
       |                     ^~~~~~~~~~~~~~~~~
sqlite3.c:167710:32: error: cannot increment a pointer to incomplete type ‘whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167710 |   for(i=0; i<nConstraint; i++, pIdxCons++){
       |                                ^~~~~~~~
sqlite3.c:167712:26: error: invalid use of incomplete type ‘struct sqlite3_index_constraint_usage’
167712 |     if( (iTerm = pUsage[i].argvIndex - 1)>=0 ){
       |                          ^
sqlite3.c:167609:10: note: forward declaration of ‘struct sqlite3_index_constraint_usage’
167609 |   struct sqlite3_index_constraint_usage *aUsage,
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167712:26: error: invalid use of incomplete type ‘struct sqlite3_index_constraint_usage’
167712 |     if( (iTerm = pUsage[i].argvIndex - 1)>=0 ){
       |                  ~~~~~~~~^
sqlite3.c:167609:10: note: forward declaration of ‘struct sqlite3_index_constraint_usage’
167609 |   struct sqlite3_index_constraint_usage *aUsage,
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167714:23: error: invalid use of incomplete type ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167714 |       int j = pIdxCons->iTermOffset;
       |                       ^~
sqlite3.c:167651:10: note: forward declaration of ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167651 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167719:19: error: invalid use of incomplete type ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167719 |        || pIdxCons->usable==0
       |                   ^~
sqlite3.c:167651:10: note: forward declaration of ‘struct whereLoopAddVirtualOne(WhereLoopBuilder*, Bitmask, Bitmask, u16, sqlite3_index_info*, u16, int*, int*)::sqlite3_index_constraint’
167651 |   struct sqlite3_index_constraint *pIdxCons;
       |          ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167734:19: error: invalid use of incomplete type ‘struct sqlite3_index_constraint_usage’
167734 |       if( pUsage[i].omit ){
       |                   ^
sqlite3.c:167609:10: note: forward declaration of ‘struct sqlite3_index_constraint_usage’
167609 |   struct sqlite3_index_constraint_usage *aUsage,
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:167734:19: error: invalid use of incomplete type ‘struct sqlite3_index_constraint_usage’
167734 |       if( pUsage[i].omit ){
       |           ~~~~~~~~^
sqlite3.c:167609:10: note: forward declaration of ‘struct sqlite3_index_constraint_usage’
167609 |   struct sqlite3_index_constraint_usage *aUsage,
       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘int wherePathSolver(WhereInfo*, LogEst)’:
sqlite3.c:20985:58: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
20985 | # define sqlite3StackAllocRawNN(D,N) sqlite3DbMallocRawNN(D,N)
      |                                      ~~~~~~~~~~~~~~~~~~~~^~~~~
      |                                                          |
      |                                                          void*
sqlite3.c:169131:12: note: in expansion of macro ‘sqlite3StackAllocRawNN’
169131 |   pSpace = sqlite3StackAllocRawNN(pParse->db, nSpace);
       |            ^~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘void whereAddIndexedExpr(Parse*, Index*, int, SrcItem*)’:
sqlite3.c:169918:27: error: invalid conversion from ‘void*’ to ‘IndexedExpr*’ [-fpermissive]
169918 |     p = sqlite3DbMallocRaw(pParse->db,  sizeof(IndexedExpr));
       |         ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                           |
       |                           void*
sqlite3.c: In function ‘WhereInfo* sqlite3WhereBegin(Parse*, SrcList*, Expr*, ExprList*, ExprList*, Select*, u16, int)’:
sqlite3.c:170129:32: error: invalid conversion from ‘void*’ to ‘WhereInfo*’ [-fpermissive]
170129 |   pWInfo = sqlite3DbMallocRawNN(db, nByteWInfo + sizeof(WhereLoop));
       |            ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c:14330:33: error: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]
14330 | # define SQLITE_INT_TO_PTR(X)  ((void*)(__PTRDIFF_TYPE__)(X))
      |                                ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                 |
      |                                 void*
sqlite3.c:170517:36: note: in expansion of macro ‘SQLITE_INT_TO_PTR’
170517 |         sqlite3VdbeChangeP4(v, -1, SQLITE_INT_TO_PTR(n), P4_INT32);
       |                                    ^~~~~~~~~~~~~~~~~
sqlite3.c:86665:72: note:   initializing argument 3 of ‘void sqlite3VdbeChangeP4(Vdbe*, int, const char*, int)’
86665 | SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){
      |                                                            ~~~~~~~~~~~~^~~
sqlite3.c:170608:42: error: invalid conversion from ‘void*’ to ‘WhereRightJoin*’ [-fpermissive]
170608 |      && (pLevel->pRJ = sqlite3WhereMalloc(pWInfo, sizeof(WhereRightJoin)))!=0
       |                        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                          |
       |                                          void*
sqlite3.c: In function ‘void sqlite3WhereEnd(WhereInfo*)’:
sqlite3.c:170811:35: error: cannot convert ‘WhereLevel::<unnamed union>::<unnamed struct>::InLoop*’ to ‘sqlite3WhereEnd(WhereInfo*)::InLoop*’ in assignment
170811 |       for(j=pLevel->u.in.nIn, pIn=&pLevel->u.in.aInLoop[j-1]; j>0; j--, pIn--){
       |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   WhereLevel::<unnamed union>::<unnamed struct>::InLoop*
sqlite3.c:170811:73: error: cannot decrement a pointer to incomplete type ‘sqlite3WhereEnd(WhereInfo*)::InLoop’
170811 |       for(j=pLevel->u.in.nIn, pIn=&pLevel->u.in.aInLoop[j-1]; j>0; j--, pIn--){
       |                                                                         ^~~
sqlite3.c:170814:35: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170814 |         sqlite3VdbeJumpHere(v, pIn->addrInTop+1);
       |                                   ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170815:16: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170815 |         if( pIn->eEndLoopOp!=OP_Noop ){
       |                ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170816:18: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170816 |           if( pIn->nPrefix ){
       |                  ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170829:53: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170829 |               sqlite3VdbeAddOp2(v, OP_IfNotOpen, pIn->iCur,
       |                                                     ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170836:22: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170836 |                   pIn->iBase, pIn->nPrefix);
       |                      ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170836:34: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170836 |                   pIn->iBase, pIn->nPrefix);
       |                                  ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170842:41: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170842 |               sqlite3VdbeJumpHere(v, pIn->addrInTop+1);
       |                                         ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170845:35: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170845 |           sqlite3VdbeAddOp2(v, pIn->eEndLoopOp, pIn->iCur, pIn->addrInTop);
       |                                   ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170845:52: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170845 |           sqlite3VdbeAddOp2(v, pIn->eEndLoopOp, pIn->iCur, pIn->addrInTop);
       |                                                    ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170845:63: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170845 |           sqlite3VdbeAddOp2(v, pIn->eEndLoopOp, pIn->iCur, pIn->addrInTop);
       |                                                               ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c:170850:35: error: invalid use of incomplete type ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170850 |         sqlite3VdbeJumpHere(v, pIn->addrInTop-1);
       |                                   ^~
sqlite3.c:170808:14: note: forward declaration of ‘struct sqlite3WhereEnd(WhereInfo*)::InLoop’
170808 |       struct InLoop *pIn;
       |              ^~~~~~
sqlite3.c: In function ‘int sqlite3WindowRewrite(Parse*, Select*)’:
sqlite3.c:172064:31: error: invalid conversion from ‘void*’ to ‘Table*’ [-fpermissive]
172064 |     pTab = sqlite3DbMallocZero(db, sizeof(Table));
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘Window* sqlite3WindowDup(sqlite3*, Expr*, Window*)’:
sqlite3.c:173469:31: error: invalid conversion from ‘void*’ to ‘Window*’ [-fpermissive]
173469 |     pNew = sqlite3DbMallocZero(db, sizeof(Window));
       |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                               |
       |                               void*
sqlite3.c: In function ‘Expr* tokenExpr(Parse*, int, Token)’:
sqlite3.c:174365:35: error: invalid conversion from ‘void*’ to ‘Expr*’ [-fpermissive]
174365 |     Expr *p = sqlite3DbMallocRawNN(pParse->db, sizeof(Expr)+t.n+1);
       |               ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                   |
       |                                   void*
sqlite3.c: In function ‘int yyGrowStack(yyParser*)’:
sqlite3.c:176511:21: error: invalid conversion from ‘void*’ to ‘yyStackEntry*’ [-fpermissive]
176511 |     pNew = YYREALLOC(0, newSize*sizeof(pNew[0]));
       |                     ^
       |                     |
       |                     void*
sqlite3.c:176515:21: error: invalid conversion from ‘void*’ to ‘yyStackEntry*’ [-fpermissive]
176515 |     pNew = YYREALLOC(p->yystack, newSize*sizeof(pNew[0]));
       |                     ^
       |                     |
       |                     void*
sqlite3.c: In function ‘int sqlite3_complete16(const void*)’:
sqlite3.c:181431:27: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
181431 |   zSql8 = sqlite3ValueText(pVal, SQLITE_UTF8);
       |           ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                           |
       |                           const void*
sqlite3.c: At global scope:
sqlite3.c:181689:18: error: redefinition of ‘char* sqlite3_temp_directory’
181689 | SQLITE_API char *sqlite3_temp_directory = 0;
       |                  ^~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:6955:18: note: ‘char* sqlite3_temp_directory’ previously declared here
 6955 | SQLITE_API char *sqlite3_temp_directory;
      |                  ^~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:181698:18: error: redefinition of ‘char* sqlite3_data_directory’
181698 | SQLITE_API char *sqlite3_data_directory = 0;
       |                  ^~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:6992:18: note: ‘char* sqlite3_data_directory’ previously declared here
 6992 | SQLITE_API char *sqlite3_data_directory;
      |                  ^~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘void sqlite3LeaveMutexAndCloseZombie(sqlite3*)’:
sqlite3.c:14776:35: error: invalid conversion from ‘void*’ to ‘FuncDef*’ [-fpermissive]
14776 | #define sqliteHashData(E)   ((E)->data)
      |                             ~~~~~~^~~~~
      |                                   |
      |                                   void*
sqlite3.c:182935:9: note: in expansion of macro ‘sqliteHashData’
182935 |     p = sqliteHashData(i);
       |         ^~~~~~~~~~~~~~
sqlite3.c: In function ‘int createCollation(sqlite3*, const char*, u8, void*, int (*)(void*, int, const void*, int, const void*), void (*)(void*))’:
sqlite3.c:184338:39: error: invalid conversion from ‘void*’ to ‘CollSeq*’ [-fpermissive]
184338 |       CollSeq *aColl = sqlite3HashFind(&db->aCollSeq, zName);
       |                        ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
       |                                       |
       |                                       void*
sqlite3.c: In function ‘int sqlite3ParseUri(const char*, const char*, unsigned int*, sqlite3_vfs**, char**, char**)’:
sqlite3.c:184535:29: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
184535 |     zFile = sqlite3_malloc64(nByte);
       |             ~~~~~~~~~~~~~~~~^~~~~~~
       |                             |
       |                             void*
sqlite3.c:184663:23: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
184663 |           zModeType = "cache";
       |                       ^~~~~~~
sqlite3.c:184678:23: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
184678 |           zModeType = "access";
       |                       ^~~~~~~~
sqlite3.c:184710:29: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
184710 |     zFile = sqlite3_malloc64(nUri+8);
       |             ~~~~~~~~~~~~~~~~^~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘int openDatabase(const char*, sqlite3**, unsigned int, const char*)’:
sqlite3.c:184820:25: error: invalid conversion from ‘void*’ to ‘sqlite3*’ [-fpermissive]
184820 |   db = sqlite3MallocZero( sizeof(sqlite3) );
       |        ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                         |
       |                         void*
sqlite3.c:185029:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
185029 |   db->aDb[0].zDbSName = "main";
       |                         ^~~~~~
sqlite3.c:185031:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
185031 |   db->aDb[1].zDbSName = "temp";
       |                         ^~~~~~
sqlite3.c: In function ‘int sqlite3_open16(const void*, sqlite3**)’:
sqlite3.c:185158:32: error: invalid conversion from ‘const void*’ to ‘const char*’ [-fpermissive]
185158 |   zFilename8 = sqlite3ValueText(pVal, SQLITE_UTF8);
       |                ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
       |                                |
       |                                const void*
sqlite3.c: In function ‘int sqlite3_set_clientdata(sqlite3*, const char*, void*, void (*)(void*))’:
sqlite3.c:185330:25: error: invalid conversion from ‘void*’ to ‘DbClientData*’ [-fpermissive]
185330 |     p = sqlite3_malloc64( sizeof(DbClientData)+n+1 );
       |         ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                         |
       |                         void*
sqlite3.c: In function ‘const char* sqlite3_create_filename(const char*, const char*, const char*, int, const char**)’:
sqlite3.c:186252:33: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
186252 |   pResult = p = sqlite3_malloc64( nByte );
       |                 ~~~~~~~~~~~~~~~~^~~~~~~~~
       |                                 |
       |                                 void*
sqlite3.c: In function ‘int jsonCacheInsert(sqlite3_context*, JsonParse*)’:
sqlite3.c:207035:26: error: invalid conversion from ‘void*’ to ‘JsonCache*’ [-fpermissive]
207035 |   p = sqlite3_get_auxdata(ctx, JSON_CACHE_ID);
       |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c:207038:28: error: invalid conversion from ‘void*’ to ‘JsonCache*’ [-fpermissive]
207038 |     p = sqlite3DbMallocZero(db, sizeof(*p));
       |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
       |                            |
       |                            void*
sqlite3.c:207042:28: error: invalid conversion from ‘void*’ to ‘JsonCache*’ [-fpermissive]
207042 |     p = sqlite3_get_auxdata(ctx, JSON_CACHE_ID);
       |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                            |
       |                            void*
sqlite3.c: In function ‘JsonParse* jsonCacheSearch(sqlite3_context*, sqlite3_value*)’:
sqlite3.c:207086:26: error: invalid conversion from ‘void*’ to ‘JsonCache*’ [-fpermissive]
207086 |   p = sqlite3_get_auxdata(ctx, JSON_CACHE_ID);
       |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c: At global scope:
sqlite3.c:207701:34: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207701 |   { 'i', 'I', 3, JSONB_FLOAT, 7, "inf", "9.0e999" },
       |                                  ^~~~~
sqlite3.c:207701:41: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207701 |   { 'i', 'I', 3, JSONB_FLOAT, 7, "inf", "9.0e999" },
       |                                         ^~~~~~~~~
sqlite3.c:207702:34: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207702 |   { 'i', 'I', 8, JSONB_FLOAT, 7, "infinity", "9.0e999" },
       |                                  ^~~~~~~~~~
sqlite3.c:207702:46: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207702 |   { 'i', 'I', 8, JSONB_FLOAT, 7, "infinity", "9.0e999" },
       |                                              ^~~~~~~~~
sqlite3.c:207703:33: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207703 |   { 'n', 'N', 3, JSONB_NULL, 4, "NaN", "null" },
       |                                 ^~~~~
sqlite3.c:207703:40: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207703 |   { 'n', 'N', 3, JSONB_NULL, 4, "NaN", "null" },
       |                                        ^~~~~~
sqlite3.c:207704:33: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207704 |   { 'q', 'Q', 4, JSONB_NULL, 4, "QNaN", "null" },
       |                                 ^~~~~~
sqlite3.c:207704:41: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207704 |   { 'q', 'Q', 4, JSONB_NULL, 4, "QNaN", "null" },
       |                                         ^~~~~~
sqlite3.c:207705:33: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207705 |   { 's', 'S', 4, JSONB_NULL, 4, "SNaN", "null" },
       |                                 ^~~~~~
sqlite3.c:207705:41: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
207705 |   { 's', 'S', 4, JSONB_NULL, 4, "SNaN", "null" },
       |                                         ^~~~~~
sqlite3.c: In function ‘int jsonBlobExpand(JsonParse*, u32)’:
sqlite3.c:207742:26: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
207742 |   aNew = sqlite3DbRealloc(pParse->db, pParse->aBlob, t);
       |          ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c: In function ‘int jsonFuncArgMightBeBinary(sqlite3_value*)’:
sqlite3.c:209101:29: error: invalid conversion from ‘const void*’ to ‘const u8*’ {aka ‘const unsigned char*’} [-fpermissive]
209101 |   aBlob = sqlite3_value_blob(pJson);
       |           ~~~~~~~~~~~~~~~~~~^~~~~~~
       |                             |
       |                             const void*
sqlite3.c: In function ‘void jsonReturnFromBlob(JsonParse*, u32, sqlite3_context*, int)’:
sqlite3.c:209764:32: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
209764 |       zOut = sqlite3DbMallocRaw(db, nOut+1);
       |              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘JsonParse* jsonParseFuncArg(sqlite3_context*, sqlite3_value*, u32)’:
sqlite3.c:210082:26: error: invalid conversion from ‘void*’ to ‘JsonParse*’ [-fpermissive]
210082 |   p = sqlite3DbMallocZero(db, sizeof(*p));
       |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
       |                          |
       |                          void*
sqlite3.c:210089:34: error: invalid conversion from ‘void*’ to ‘u8*’ {aka ‘unsigned char*’} [-fpermissive]
210089 |     p->aBlob = sqlite3DbMallocRaw(db, nBlob);
       |                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
       |                                  |
       |                                  void*
sqlite3.c: In function ‘int jsonEachOpenEach(sqlite3_vtab*, sqlite3_vtab_cursor**)’:
sqlite3.c:211509:29: error: invalid conversion from ‘void*’ to ‘JsonEachCursor*’ [-fpermissive]
211509 |   pCur = sqlite3DbMallocZero(pVtab->db, sizeof(*pCur));
       |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
       |                             |
       |                             void*
sqlite3.c: In function ‘int jsonEachNext(sqlite3_vtab_cursor*)’:
sqlite3.c:211623:32: error: invalid conversion from ‘void*’ to ‘JsonParent*’ [-fpermissive]
211623 |         pNew = sqlite3DbRealloc(p->db, p->aParent, sizeof(JsonParent)*nNew);
       |                ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                |
       |                                void*
sqlite3.c: In function ‘int jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)’:
sqlite3.c:211818:27: error: cannot convert ‘sqlite3_index_info::sqlite3_index_constraint*’ to ‘const jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint*’ in assignment
211818 |   pConstraint = pIdxInfo->aConstraint;
       |                 ~~~~~~~~~~^~~~~~~~~~~
       |                           |
       |                           sqlite3_index_info::sqlite3_index_constraint*
sqlite3.c:211819:42: error: cannot increment a pointer to incomplete type ‘const jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211819 |   for(i=0; i<pIdxInfo->nConstraint; i++, pConstraint++){
       |                                          ^~~~~~~~~~~
sqlite3.c:211822:20: error: invalid use of incomplete type ‘const struct jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211822 |     if( pConstraint->iColumn < JEACH_JSON ) continue;
       |                    ^~
sqlite3.c:211811:16: note: forward declaration of ‘struct jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211811 |   const struct sqlite3_index_constraint *pConstraint;
       |                ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:211823:23: error: invalid use of incomplete type ‘const struct jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211823 |     iCol = pConstraint->iColumn - JEACH_JSON;
       |                       ^~
sqlite3.c:211811:16: note: forward declaration of ‘struct jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211811 |   const struct sqlite3_index_constraint *pConstraint;
       |                ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:211827:20: error: invalid use of incomplete type ‘const struct jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211827 |     if( pConstraint->usable==0 ){
       |                    ^~
sqlite3.c:211811:16: note: forward declaration of ‘struct jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211811 |   const struct sqlite3_index_constraint *pConstraint;
       |                ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c:211829:26: error: invalid use of incomplete type ‘const struct jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211829 |     }else if( pConstraint->op==SQLITE_INDEX_CONSTRAINT_EQ ){
       |                          ^~
sqlite3.c:211811:16: note: forward declaration of ‘struct jsonEachBestIndex(sqlite3_vtab*, sqlite3_index_info*)::sqlite3_index_constraint’
211811 |   const struct sqlite3_index_constraint *pConstraint;
       |                ^~~~~~~~~~~~~~~~~~~~~~~~
sqlite3.c: In function ‘int jsonEachFilter(sqlite3_vtab_cursor*, int, const char*, int, sqlite3_value**)’:
sqlite3.c:211950:37: error: invalid conversion from ‘void*’ to ‘JsonParent*’ [-fpermissive]
211950 |     p->aParent = sqlite3DbMallocZero(p->db, sizeof(JsonParent));
       |                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
       |                                     |
       |                                     void*
(base) annie@golb:~/contactservice/CS499Milestone4$ gcc sqlite3.c
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/12/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x17): undefined reference to `main'
collect2: error: ld returned 1 exit status
(base) annie@golb:~/contactservice/CS499Milestone4$ cat makefile
full: cservice.o contact.o main.o sql.o
	g++ cservice.o contact.o main.o sql.o contactdatabase.o -o contactmanager

cservice.o:
	g++ -c contactservice.cpp -o cservice.o

contact.o:
	g++ -c contact.cpp -o contact.o

main.o:
	g++ -c main.cpp -o main.o

sql.o:
	gcc -c sqlite3.c -o sql.o

contactdatabase.o:
	g++ -c contactdatabase.cpp -o contactdatabase.o


(base) annie@golb:~/contactservice/CS499Milestone4$ g++ -c contactdatabase.c cd.o
cc1plus: fatal error: contactdatabase.c: No such file or directory
compilation terminated.
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ -c contactdatabase.cpp cd.o
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
g++: warning: cd.o: linker input file unused because linking not done
g++: error: cd.o: linker input file not found: No such file or directory
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ -c contactdatabase.cpp -o cd.o
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ ls
cd.o                  contactdatabase.h   contact.o           cservice.o  makefile       sqlite3.h
contact.cpp           contactdatabase.h~  contacts.db         LICENSE     makefile.save  sql.o
contactdatabase.cpp   contactdatabase.o   contactservice.cpp  main.cpp    README.md      test.db
contactdatabase.cpp~  contact.h           contactservice.h    main.o      sqlite3.c
(base) annie@golb:~/contactservice/CS499Milestone4$ rm *.o
(base) annie@golb:~/contactservice/CS499Milestone4$ g++ -c contactdatabase.cpp -o cd.o
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c contactservice.cpp -o cservice.o
g++ -c contact.cpp -o contact.o
g++ -c main.cpp -o main.o
gcc -c sqlite3.c -o sql.o
g++ cservice.o contact.o main.o sql.o contactdatabase.o -o contactmanager
/usr/bin/ld: cannot find contactdatabase.o: No such file or directory
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c contactdatabase.cpp -o contactdatabase.o
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
g++ cservice.o contact.o main.o sql.o contactdatabase.o -o contactmanager
/usr/bin/ld: contactdatabase.o: warning: relocation against `_ZN15ContactDatabase8contactsE' in read-only section `.text'
/usr/bin/ld: contactdatabase.o: in function `ContactDatabase::ContactDatabase(ContactService*)':
contactdatabase.cpp:(.text+0x48): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: contactdatabase.o: in function `ContactDatabase::get_records()':
contactdatabase.cpp:(.text+0x72): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: contactdatabase.o: in function `ContactDatabase::callback(void*, int, char**, char**)':
contactdatabase.cpp:(.text+0x2c3): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ cservice.o contact.o main.o sql.o contactdatabase.o -o contactmanager
/usr/bin/ld: contactdatabase.o: warning: relocation against `_ZN15ContactDatabase8contactsE' in read-only section `.text'
/usr/bin/ld: contactdatabase.o: in function `ContactDatabase::ContactDatabase(ContactService*)':
contactdatabase.cpp:(.text+0x48): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: contactdatabase.o: in function `ContactDatabase::get_records()':
contactdatabase.cpp:(.text+0x72): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: contactdatabase.o: in function `ContactDatabase::callback(void*, int, char**, char**)':
contactdatabase.cpp:(.text+0x2c3): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c contactdatabase.cpp -o cdatabase.o
contactdatabase.cpp: In constructor ‘ContactDatabase::ContactDatabase(ContactService*)’:
contactdatabase.cpp:5:8: error: request for member ‘contacts’ in ‘(ContactDatabase*)this’, which is of pointer type ‘ContactDatabase*’ (maybe you meant to use ‘->’ ?)
    5 |   this.contacts = c;
      |        ^~~~~~~~
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
make: *** [makefile:17: cdatabase.o] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c contactdatabase.cpp -o cdatabase.o
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
g++ cservice.o contact.o main.o sql.o cdatabase.o -o contactmanager
/usr/bin/ld: cdatabase.o: warning: relocation against `_ZN15ContactDatabase8contactsE' in read-only section `.text'
/usr/bin/ld: cdatabase.o: in function `ContactDatabase::ContactDatabase(ContactService*)':
contactdatabase.cpp:(.text+0x48): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: cdatabase.o: in function `ContactDatabase::get_records()':
contactdatabase.cpp:(.text+0x72): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: cdatabase.o: in function `ContactDatabase::callback(void*, int, char**, char**)':
contactdatabase.cpp:(.text+0x2c3): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ rm *.o
(base) annie@golb:~/contactservice/CS499Milestone4$ ls
 contact.cpp            contactdatabase.h    contacts.db          LICENSE    makefile.save  '*Messages*'   sqlite3.h
 contactdatabase.cpp    contactdatabase.h~   contactservice.cpp   main.cpp   makfile         README.md     test.db
 contactdatabase.cpp~   contact.h            contactservice.h     makefile  '#*Messages*#'   sqlite3.c
(base) annie@golb:~/contactservice/CS499Milestone4$ make
g++ -c contactdatabase.cpp -o cdatabase.o
contactdatabase.cpp: In member function ‘void ContactDatabase::get_records()’:
contactdatabase.cpp:10:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   10 |   char * sql = "SELECT * FROM contacts;";
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~
g++ -c contactservice.cpp -o cservice.o
g++ -c contact.cpp -o contact.o
g++ -c main.cpp -o main.o
gcc -c sqlite3.c -o sql.o
g++ cdatabase.o cservice.o contact.o main.o sql.o -o contactmanager
/usr/bin/ld: cdatabase.o: warning: relocation against `_ZN15ContactDatabase8contactsE' in read-only section `.text'
/usr/bin/ld: cdatabase.o: in function `ContactDatabase::ContactDatabase(ContactService*)':
contactdatabase.cpp:(.text+0x48): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: cdatabase.o: in function `ContactDatabase::get_records()':
contactdatabase.cpp:(.text+0x72): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: cdatabase.o: in function `ContactDatabase::callback(void*, int, char**, char**)':
contactdatabase.cpp:(.text+0x2c3): undefined reference to `ContactDatabase::contacts'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
collect2: error: ld returned 1 exit status
make: *** [makefile:2: full] Error 1
(base) annie@golb:~/contactservice/CS499Milestone4$ make cdatabase.o
make: 'cdatabase.o' is up to date.
(base) annie@golb:~/contactservice/CS499Milestone4$ /usr/bin/ld: cdatabase.o: in function `ContactDatabase::ContactDatabase(ContactService*)':
> 
> 
> 
> k
> ;
> 
> 
> 
> 
> 